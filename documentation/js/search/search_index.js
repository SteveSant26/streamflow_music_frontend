var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/interfaces/AddSongToPlaylistDto.html", [0, 0.042, 1, 1.844]],
      [
        "body/interfaces/AddSongToPlaylistDto.html",
        [
          0, 0.084, 1, 2.629, 2, 0.938, 3, 0.077, 4, 0.066, 5, 0.066, 6, 2.108,
          7, 0.056, 8, 0.344, 9, 3.359, 10, 0.549, 11, 0.087, 12, 0.009, 13,
          0.141, 14, 1.17, 15, 1.332, 16, 2.79, 17, 1.686, 18, 2.108, 19, 2.842,
          20, 2.997, 21, 2.268, 22, 0.27, 23, 1.192, 24, 2.284, 25, 1.729, 26,
          1.576, 27, 2.174, 28, 1.821, 29, 1.93, 30, 1.631, 31, 1.434, 32,
          2.351, 33, 3.57, 34, 2.174, 35, 2.174, 36, 1.578, 37, 1.504, 38,
          1.521, 39, 1.164, 40, 2.045, 41, 2.174, 42, 2.045, 43, 2.174, 44,
          2.174, 45, 1.367, 46, 2.79, 47, 1.378, 48, 3.432, 49, 2.174, 50,
          2.877, 51, 2.045, 52, 2.045, 53, 2.174, 54, 2.108, 55, 2.174, 56,
          0.83, 57, 1.6, 58, 2.108, 59, 1.986, 60, 1.986, 61, 1.986, 62, 1.655,
          63, 1.986, 64, 1.986, 65, 1.251, 66, 1.93, 67, 2.108, 68, 0.916, 69,
          0.938, 70, 1.986, 71, 1.986, 72, 2.416, 73, 2.064, 74, 2.707, 75,
          2.012, 76, 2.174, 77, 1.825, 78, 2.108, 79, 2.045, 80, 2.707, 81,
          1.986, 82, 2.108, 83, 1.876, 84, 1.378, 85, 2.045, 86, 1.825, 87,
          1.825, 88, 1.483, 89, 2.483, 90, 1.986, 91, 2.174, 92, 2.174, 93,
          2.174, 94, 2.174, 95, 0.007, 96, 0.007,
        ],
      ],
      ["title/interfaces/Album.html", [0, 0.042, 30, 0.959]],
      [
        "body/interfaces/Album.html",
        [
          0, 0.083, 1, 1.858, 2, 0.878, 3, 0.072, 4, 0.062, 5, 0.062, 6, 1.972,
          7, 0.052, 8, 0.329, 9, 2.589, 10, 0.549, 11, 0.118, 12, 0.009, 13,
          0.14, 14, 1.144, 15, 1.377, 16, 2.668, 17, 1.63, 18, 1.972, 19, 2.938,
          20, 3.142, 21, 2.392, 22, 0.264, 23, 1.115, 24, 2.223, 25, 1.618, 26,
          1.582, 27, 2.034, 28, 1.791, 29, 1.806, 30, 1.659, 31, 1.74, 32,
          2.852, 33, 3.742, 34, 3.341, 35, 3.341, 36, 1.914, 37, 1.471, 38,
          1.423, 39, 1.089, 40, 1.914, 41, 2.034, 42, 1.914, 43, 2.034, 44,
          2.034, 45, 1.308, 46, 2.668, 47, 1.289, 48, 3.341, 49, 2.034, 50,
          2.752, 51, 1.914, 52, 1.914, 53, 2.034, 54, 1.972, 55, 2.034, 56,
          0.777, 57, 1.496, 58, 1.972, 59, 1.858, 60, 1.858, 61, 1.858, 62,
          1.583, 63, 1.858, 64, 1.858, 65, 1.17, 66, 1.806, 67, 1.972, 68,
          0.857, 69, 0.878, 70, 1.858, 71, 1.858, 72, 2.31, 73, 1.974, 74,
          2.589, 75, 1.925, 76, 2.034, 77, 1.708, 78, 1.972, 79, 1.914, 80,
          2.618, 81, 1.858, 82, 1.972, 83, 1.755, 84, 1.289, 85, 1.914, 86,
          1.708, 87, 1.708, 88, 1.387, 89, 2.375, 90, 1.858, 91, 2.034, 92,
          2.034, 93, 2.034, 94, 2.034, 95, 0.006, 96, 0.006, 97, 0.881,
        ],
      ],
      ["title/interfaces/Album-1.html", [0, 0.035, 30, 0.805, 98, 1.047]],
      [
        "body/interfaces/Album-1.html",
        [
          0, 0.053, 2, 0.503, 3, 0.041, 4, 0.035, 5, 0.035, 7, 0.03, 8, 0.219,
          10, 0.502, 11, 0.078, 12, 0.01, 13, 0.041, 15, 0.665, 21, 1.583, 22,
          0.248, 23, 1.004, 25, 1.456, 26, 1.316, 30, 1.7, 31, 1.892, 32, 0.953,
          36, 1.88, 37, 1.171, 39, 1.489, 56, 1.255, 68, 1.507, 69, 1.504, 84,
          2.131, 88, 1.249, 95, 0.004, 96, 0.004, 98, 1.397, 99, 1.729, 100,
          3.784, 101, 5.376, 102, 4.766, 103, 0.421, 104, 0.455, 105, 1.831,
          106, 2.577, 107, 0.29, 108, 1.672, 109, 0.928, 110, 2.871, 111, 0.904,
          112, 4.499, 113, 4.84, 114, 3.735, 115, 2.871, 116, 2.871, 117, 2.871,
          118, 2.871, 119, 2.259, 120, 2.871, 121, 0.581, 122, 0.541, 123,
          1.097, 124, 0.816, 125, 0.581, 126, 0.595, 127, 1.829, 128, 1.384,
          129, 1.829, 130, 0.107, 131, 0.776, 132, 1.066, 133, 1.338, 134,
          0.581, 135, 1.863, 136, 0.912, 137, 1.829, 138, 1.642, 139, 1.166,
          140, 2.871, 141, 1.829, 142, 1.829, 143, 1.642, 144, 2.064, 145, 1.97,
          146, 1.5, 147, 1.204, 148, 2.354, 149, 1.953, 150, 3.299, 151, 2.577,
          152, 1.5, 153, 1.829, 154, 1.829, 155, 1.829, 156, 1.829, 157, 1.829,
          158, 1.829, 159, 1.729, 160, 2.481, 161, 1.89, 162, 2.871, 163, 1.166,
          164, 1.642, 165, 2.616, 166, 1.384, 167, 2.259, 168, 2.064, 169, 1.5,
          170, 3.181, 171, 1.829, 172, 1.829, 173, 4.014, 174, 1.829, 175,
          1.829, 176, 1.567, 177, 1.829, 178, 1.829, 179, 1.829, 180, 1.829,
          181, 1.829, 182, 1.829, 183, 1.829, 184, 1.829, 185, 1.829, 186,
          2.871, 187, 1.829, 188, 1.829, 189, 1.829, 190, 1.829, 191, 2.871,
          192, 1.829, 193, 1.642, 194, 1.131, 195, 1.729, 196, 1.829, 197,
          4.155, 198, 2.577, 199, 1.829, 200, 2.577, 201, 1.642, 202, 1.567,
          203, 1.831, 204, 1.5, 205, 1.166, 206, 1.642, 207, 1.642, 208, 2.212,
          209, 1.052, 210, 2.871, 211, 1.692, 212, 1.439, 213, 2.871, 214,
          4.292, 215, 1.829, 216, 3.915, 217, 3.181, 218, 1.642, 219, 1.642,
          220, 1.729, 221, 1.729, 222, 1.829, 223, 1.829, 224, 1.642, 225,
          1.642, 226, 1.642, 227, 2.538, 228, 2.577, 229, 1.829, 230, 1.829,
          231, 2.577, 232, 1.642, 233, 2.259, 234, 1.829, 235, 1.829, 236,
          3.603, 237, 3.603, 238, 3.438, 239, 3.793, 240, 3.915, 241, 1.642,
          242, 1.829, 243, 2.871, 244, 1.642, 245, 2.871, 246, 1.829, 247,
          3.544, 248, 2.871, 249, 1.829, 250, 1.439, 251, 1.829, 252, 1.829,
          253, 1.729, 254, 1.642, 255, 1.829, 256, 1.829, 257, 1.729, 258,
          1.131, 259, 1.313, 260, 1.642, 261, 3.438, 262, 3.603, 263, 1.829,
          264, 1.829, 265, 1.829, 266, 4.373, 267, 1.642, 268, 1.642, 269,
          2.871, 270, 2.713, 271, 2.871, 272, 1.829, 273, 1.642, 274, 1.642,
          275, 1.829, 276, 3.299, 277, 1.642, 278, 1.642, 279, 3.186, 280,
          1.642, 281, 1.642, 282, 2.577, 283, 1.567, 284, 1.642, 285, 2.871,
          286, 1.706, 287, 1.642, 288, 3.181, 289, 1.642, 290, 2.577, 291,
          3.181, 292, 1.642, 293, 1.439, 294, 1.829, 295, 3.181, 296, 1.642,
          297, 3.603, 298, 3.603, 299, 3.544, 300, 3.181, 301, 1.642, 302,
          3.181, 303, 2.577, 304, 3.544, 305, 2.577, 306, 1.642, 307, 3.544,
          308, 2.577, 309, 1.829, 310, 1.166, 311, 1.953, 312, 2.871, 313, 1.5,
          314, 1.729, 315, 1.829, 316, 2.577, 317, 1.642, 318, 1.642, 319,
          1.642, 320, 1.439, 321, 1.829, 322, 1.829, 323, 1.829, 324, 1.829,
          325, 1.829, 326, 4.345, 327, 1.729, 328, 2.021, 329, 1.642, 330,
          2.577, 331, 2.577, 332, 1.642, 333, 1.729, 334, 1.642, 335, 1.642,
          336, 1.829, 337, 1.729, 338, 1.829, 339, 1.829, 340, 1.829, 341,
          2.871, 342, 1.829, 343, 1.58, 344, 4.014, 345, 2.871, 346, 1.829, 347,
          1.829, 348, 1.831, 349, 1.829, 350, 1.829, 351, 1.829, 352, 1.829,
          353, 1.829, 354, 1.829, 355, 1.829, 356, 1.829, 357, 3.544, 358,
          1.097, 359, 1.829, 360, 1.829, 361, 2.871, 362, 1.829, 363, 1.829,
          364, 1.829, 365, 1.829, 366, 1.829, 367, 1.829, 368, 1.829, 369,
          1.829, 370, 1.829, 371, 1.829, 372, 2.788, 373, 1.729, 374, 1.829,
          375, 2.713, 376, 1.829, 377, 2.173, 378, 1.829, 379, 3.544, 380,
          1.829, 381, 2.871, 382, 1.829, 383, 1.829, 384, 1.829, 385, 1.829,
          386, 1.5, 387, 1.829, 388, 2.094, 389, 1.829, 390, 1.829, 391, 2.021,
          392, 2.871, 393, 1.829, 394, 2.871, 395, 1.829, 396, 1.829, 397,
          1.829, 398, 1.829, 399, 1.829, 400, 1.829, 401, 1.829, 402, 1.829,
          403, 1.729, 404, 1.829, 405, 2.871, 406, 1.829, 407, 1.829, 408,
          1.829, 409, 1.829, 410, 1.439, 411, 1.642, 412, 1.829, 413, 1.829,
          414, 1.829, 415, 1.829, 416, 1.829, 417, 1.729, 418, 1.829, 419,
          2.713, 420, 1.829, 421, 1.829, 422, 1.829, 423, 1.729, 424, 1.829,
          425, 1.829, 426, 1.5, 427, 1.829, 428, 1.439, 429, 1.829, 430, 1.829,
          431, 2.871, 432, 3.603, 433, 3.603, 434, 4.014, 435, 4.014, 436,
          4.014, 437, 2.871, 438, 3.544, 439, 2.871, 440, 4.736, 441, 2.459,
          442, 2.871, 443, 2.459, 444, 4.014, 445, 4.014, 446, 2.713, 447,
          1.829, 448, 1.829, 449, 1.829, 450, 1.829, 451, 1.829, 452, 1.829,
          453, 1.642, 454, 1.829, 455, 1.829, 456, 1.829, 457, 1.829, 458,
          3.603, 459, 3.603, 460, 3.603, 461, 1.642, 462, 2.871, 463, 2.871,
          464, 1.829, 465, 1.729, 466, 1.829, 467, 1.829, 468, 1.829, 469,
          1.829, 470, 1.829, 471, 1.829, 472, 1.829, 473, 1.829, 474, 1.829,
          475, 1.829, 476, 1.829, 477, 1.829, 478, 1.829, 479, 1.829, 480,
          1.829, 481, 1.729, 482, 1.729, 483, 1.829, 484, 2.354, 485, 2.021,
          486, 2.354, 487, 1.829, 488, 2.354, 489, 1.5, 490, 1.567, 491, 1.829,
          492, 1.729, 493, 1.829, 494, 1.5, 495, 1.829, 496, 3.544, 497, 4.628,
          498, 1.829, 499, 1.829, 500, 1.829, 501, 1.829, 502, 1.829, 503,
          3.544, 504, 1.729, 505, 1.829, 506, 1.829, 507, 1.829, 508, 1.829,
          509, 1.829, 510, 1.829, 511, 1.829,
        ],
      ],
      ["title/interfaces/Album-2.html", [0, 0.035, 30, 0.805, 358, 1.593]],
      [
        "body/interfaces/Album-2.html",
        [
          0, 0.052, 2, 0.589, 3, 0.048, 4, 0.041, 5, 0.099, 7, 0.035, 8, 0.247,
          10, 0.51, 11, 0.099, 12, 0.01, 13, 0.048, 15, 1.419, 19, 2.606, 21,
          2.284, 22, 0.284, 23, 2.156, 24, 2.336, 25, 2.501, 26, 1.278, 28,
          1.006, 30, 1.322, 31, 1.75, 39, 1.107, 45, 1.668, 56, 1.34, 57, 1.521,
          68, 1.259, 69, 1.29, 73, 1.995, 84, 0.865, 88, 2.145, 95, 0.005, 96,
          0.005, 98, 1.542, 102, 4.513, 103, 0.519, 104, 0.514, 107, 0.339, 108,
          1.888, 109, 1.086, 111, 1.058, 119, 3.077, 121, 0.681, 122, 0.633,
          123, 1.284, 124, 2.199, 125, 0.681, 126, 0.697, 130, 0.125, 133,
          1.758, 136, 0.681, 144, 2.541, 145, 1.844, 147, 2.134, 149, 1.457,
          150, 2.134, 160, 1.324, 203, 2.067, 208, 1.086, 209, 1.343, 211,
          1.368, 212, 1.685, 227, 2.1, 250, 1.685, 279, 1.409, 286, 1.031, 311,
          2.205, 328, 1.507, 343, 1.178, 358, 2.347, 386, 1.755, 388, 2.852,
          410, 1.685, 426, 1.755, 428, 1.685, 441, 1.834, 443, 2.776, 484,
          1.755, 490, 2.776, 512, 2.283, 513, 6.858, 514, 3.063, 515, 1.834,
          516, 2.661, 517, 4.735, 518, 5.667, 519, 2.283, 520, 2.461, 521,
          1.561, 522, 2.461, 523, 0.955, 524, 2.461, 525, 3.687, 526, 2.094,
          527, 2.461, 528, 2.134, 529, 2.461, 530, 2.791, 531, 2.141, 532,
          2.283, 533, 2.461, 534, 2.023, 535, 2.891, 536, 3.725, 537, 3.725,
          538, 1.058, 539, 2.347, 540, 2.461, 541, 2.023, 542, 2.141, 543,
          2.283, 544, 1.755, 545, 2.283, 546, 2.461, 547, 1.922, 548, 4.363,
          549, 2.283, 550, 2.283, 551, 2.283, 552, 2.461, 553, 2.461, 554, 2.96,
          555, 2.461, 556, 2.461, 557, 2.283, 558, 2.461, 559, 2.461, 560,
          2.461, 561, 2.461, 562, 2.461, 563, 2.461, 564, 2.96, 565, 2.141, 566,
          2.461, 567, 2.461, 568, 2.461, 569, 2.461, 570, 2.461, 571, 2.461,
          572, 3.576, 573, 2.461, 574, 2.461, 575, 2.461, 576, 2.461, 577,
          2.461, 578, 3.242, 579, 2.461, 580, 2.461, 581, 2.461, 582, 2.461,
          583, 2.461, 584, 2.461, 585, 4.495, 586, 4.495, 587, 2.283, 588,
          2.461, 589, 2.461, 590, 3.725, 591, 3.725, 592, 2.461, 593, 2.461,
          594, 3.725, 595, 2.461, 596, 2.461, 597, 2.461, 598, 3.725, 599,
          3.725, 600, 2.461, 601, 2.461, 602, 2.461, 603, 3.725, 604, 3.725,
          605, 2.461, 606, 2.461, 607, 2.461, 608, 2.461, 609, 2.461, 610,
          2.283, 611, 2.283, 612, 2.461, 613, 2.461, 614, 2.461, 615, 3.725,
          616, 2.461, 617, 2.461, 618, 2.461, 619, 2.461, 620, 2.461, 621,
          2.461, 622, 2.461, 623, 2.461, 624, 2.461, 625, 2.461, 626, 2.461,
          627, 2.141, 628, 2.461, 629, 2.461, 630, 2.141, 631, 3.725, 632,
          3.912, 633, 2.461, 634, 2.461, 635, 2.461, 636, 1.107, 637, 2.461,
          638, 2.175, 639, 2.461, 640, 2.283, 641, 3.725, 642, 2.461, 643,
          2.461, 644, 2.461, 645, 2.461, 646, 4.171, 647, 5.013, 648, 2.283,
          649, 2.023, 650, 3.696, 651, 2.283, 652, 3.456, 653, 2.283, 654,
          2.283, 655, 2.283, 656, 2.283, 657, 2.283, 658, 2.283, 659, 2.283,
          660, 2.023, 661, 2.141, 662, 2.283, 663, 2.283, 664, 2.283, 665,
          2.283, 666, 2.283, 667, 1.755, 668, 1.685, 669, 4.171, 670, 3.456,
          671, 3.456, 672, 2.283, 673, 2.283, 674, 2.283, 675, 2.141, 676,
          2.283, 677, 2.283, 678, 2.283, 679, 1.62, 680, 2.283, 681, 2.283, 682,
          2.283, 683, 1.561, 684, 2.283, 685, 2.283, 686, 2.461, 687, 2.283,
          688, 2.273, 689, 3.725, 690, 2.283, 691, 2.283, 692, 2.283, 693,
          2.461, 694, 3.725, 695, 2.283, 696, 2.461, 697, 2.141, 698, 3.725,
          699, 2.461, 700, 2.141, 701, 2.461, 702, 2.461, 703, 2.461, 704,
          3.725, 705, 2.461, 706, 2.141, 707, 2.461, 708, 3.725, 709, 3.063,
          710, 3.725, 711, 2.141, 712, 2.141, 713, 2.461, 714, 2.461, 715,
          2.461, 716, 2.141, 717, 2.283, 718, 2.283, 719, 2.141, 720, 0.785,
          721, 2.461, 722, 1.834, 723, 2.141, 724, 2.023, 725, 2.461, 726,
          2.283, 727, 2.461, 728, 2.283, 729, 2.461, 730, 2.461, 731, 2.283,
          732, 2.461, 733, 2.461, 734, 2.461, 735, 2.461, 736, 4.495, 737,
          2.461, 738, 2.461, 739, 2.141, 740, 2.283, 741, 2.461, 742, 2.461,
          743, 2.283, 744, 2.141, 745, 2.461, 746, 2.461, 747, 2.461, 748,
          2.461, 749, 3.456, 750, 3.725, 751, 2.461, 752, 2.283,
        ],
      ],
      ["title/interfaces/ApiResponse.html", [0, 0.042, 71, 1.844]],
      [
        "body/interfaces/ApiResponse.html",
        [
          0, 0.083, 1, 1.936, 2, 0.915, 3, 0.075, 4, 0.064, 5, 0.064, 6, 2.055,
          7, 0.054, 8, 0.338, 9, 2.662, 10, 0.548, 11, 0.108, 12, 0.009, 13,
          0.141, 14, 1.16, 15, 1.323, 16, 2.743, 17, 1.665, 18, 2.055, 19,
          2.821, 20, 2.972, 21, 2.252, 22, 0.268, 23, 1.162, 24, 2.261, 25,
          1.686, 26, 1.571, 27, 2.12, 28, 1.861, 29, 1.882, 30, 1.615, 31, 1.41,
          32, 2.311, 33, 3.54, 34, 2.12, 35, 2.12, 36, 1.551, 37, 1.491, 38,
          1.482, 39, 1.135, 40, 1.994, 41, 2.12, 42, 1.994, 43, 2.12, 44, 2.12,
          45, 1.344, 46, 2.743, 47, 1.343, 48, 3.398, 49, 2.12, 50, 2.829, 51,
          1.994, 52, 1.994, 53, 2.12, 54, 2.055, 55, 2.12, 56, 0.809, 57, 1.559,
          58, 2.055, 59, 1.936, 60, 1.936, 61, 1.936, 62, 1.627, 63, 1.936, 64,
          1.936, 65, 1.219, 66, 1.882, 67, 2.055, 68, 0.893, 69, 0.915, 70,
          1.936, 71, 2.585, 72, 2.972, 73, 2.539, 74, 3.197, 75, 2.476, 76,
          3.398, 77, 1.78, 78, 2.055, 79, 1.994, 80, 2.673, 81, 1.936, 82,
          2.055, 83, 1.829, 84, 1.343, 85, 1.994, 86, 1.78, 87, 1.78, 88, 1.446,
          89, 2.442, 90, 1.936, 91, 2.12, 92, 2.12, 93, 2.12, 94, 2.12, 95,
          0.006, 96, 0.006, 97, 0.895,
        ],
      ],
      ["title/injectables/ApiService.html", [753, 0.871, 754, 2.308]],
      [
        "body/injectables/ApiService.html",
        [
          3, 0.051, 4, 0.044, 5, 0.104, 7, 0.037, 8, 0.26, 10, 0.519, 11, 0.117,
          12, 0.01, 13, 0.051, 22, 0.27, 56, 1.339, 57, 1.6, 58, 2.109, 65,
          1.656, 67, 2.109, 68, 1.359, 69, 1.242, 70, 1.987, 71, 1.335, 72,
          1.227, 73, 2.659, 74, 3.143, 77, 1.227, 78, 1.417, 79, 1.375, 80,
          1.227, 81, 1.335, 82, 1.417, 95, 0.005, 96, 0.005, 97, 0.941, 98,
          0.904, 103, 0.602, 107, 0.363, 124, 1.022, 130, 0.134, 133, 1.137,
          134, 0.729, 135, 2.117, 145, 1.165, 160, 1.417, 161, 1.509, 168,
          1.335, 203, 2.175, 205, 2.175, 208, 1.163, 209, 1.508, 211, 1.425,
          227, 1.642, 259, 2.396, 348, 2.175, 372, 1.803, 391, 1.613, 403,
          2.166, 531, 4.514, 535, 2.708, 538, 1.132, 630, 2.292, 632, 4.075,
          636, 1.165, 679, 2.582, 717, 2.444, 753, 0.939, 754, 2.488, 755,
          1.194, 756, 2.889, 757, 5.822, 758, 0.962, 759, 6.449, 760, 4.299,
          761, 6.449, 762, 5.822, 763, 3.638, 764, 6.449, 765, 5.187, 766,
          5.688, 767, 2.889, 768, 5.688, 769, 1.266, 770, 4.874, 771, 1.65, 772,
          4.299, 773, 4.874, 774, 3.275, 775, 6.135, 776, 6.798, 777, 7.455,
          778, 6.798, 779, 4.59, 780, 1.579, 781, 4.717, 782, 4.874, 783, 8,
          784, 3.275, 785, 4.874, 786, 3.084, 787, 4.299, 788, 3.275, 789,
          3.638, 790, 4.299, 791, 3.275, 792, 6.53, 793, 3.921, 794, 6.895, 795,
          3.275, 796, 3.275, 797, 4.874, 798, 5.135, 799, 3.638, 800, 3.275,
          801, 4.874, 802, 4.299, 803, 4.874, 804, 3.275, 805, 4.874, 806,
          3.275, 807, 4.874, 808, 3.275, 809, 4.874, 810, 6.449, 811, 3.275,
          812, 4.874, 813, 0.861, 814, 4.874, 815, 7.86, 816, 2.444, 817, 4.299,
          818, 1.672, 819, 2.889, 820, 2.889, 821, 2.889, 822, 2.166, 823,
          2.634, 824, 1.963, 825, 1.194, 826, 1.163, 827, 3.275, 828, 3.224,
          829, 3.275, 830, 2.889, 831, 4.299, 832, 3.275, 833, 2.292, 834,
          3.275, 835, 6.187, 836, 2.889, 837, 2.292, 838, 2.634, 839, 2.889,
          840, 2.889, 841, 2.889, 842, 2.889, 843, 3.638, 844, 4.683, 845,
          2.634, 846, 2.634, 847, 3.412, 848, 2.292, 849, 2.166, 850, 2.889,
          851, 4.683, 852, 2.889, 853, 2.889, 854, 2.058, 855, 2.889, 856,
          2.889, 857, 3.275, 858, 2.889, 859, 4.874, 860, 6.449, 861, 4.874,
          862, 4.874, 863, 4.874, 864, 7.486, 865, 4.874, 866, 7.228, 867,
          7.228, 868, 2.889, 869, 2.889, 870, 3.275, 871, 3.275, 872, 4.874,
          873, 3.275, 874, 3.275, 875, 4.874, 876, 6.449, 877, 3.275, 878,
          2.634, 879, 3.275, 880, 4.874, 881, 3.275, 882, 3.275, 883, 3.275,
          884, 5.688, 885, 3.275, 886, 3.275, 887, 3.275, 888, 3.275, 889,
          2.889, 890, 3.275, 891, 2.292, 892, 2.634, 893, 2.292,
        ],
      ],
      [
        "title/injectables/ApiService-1.html",
        [98, 1.047, 753, 0.731, 754, 1.937],
      ],
      [
        "body/injectables/ApiService-1.html",
        [
          3, 0.09, 4, 0.078, 5, 0.078, 7, 0.065, 10, 0.528, 11, 0.12, 12, 0.01,
          13, 0.09, 22, 0.284, 74, 3.431, 95, 0.007, 96, 0.007, 97, 0.989, 103,
          0.649, 107, 0.635, 130, 0.234, 134, 1.274, 136, 1.274, 209, 1.499,
          538, 1.98, 679, 4.66, 753, 1.378, 754, 3.651, 755, 2.088, 758, 1.411,
          765, 5.753, 766, 6.309, 767, 5.05, 768, 7.207, 769, 1.296, 771, 1.709,
          772, 6.309, 780, 1.612, 816, 4.273, 822, 3.787, 823, 4.605, 825,
          2.088, 826, 2.033, 894, 7.566, 895, 5.05, 896, 7.153, 897, 5.725, 898,
          7.153, 899, 5.725, 900, 7.153, 901, 5.725, 902, 7.153, 903, 6.566,
          904, 5.725, 905, 7.153, 906, 5.725, 907, 7.153, 908, 5.725, 909,
          5.725, 910, 5.753, 911, 5.725, 912, 5.725,
        ],
      ],
      ["title/components/App.html", [104, 0.502, 122, 0.936]],
      [
        "body/components/App.html",
        [
          3, 0.075, 4, 0.065, 5, 0.065, 7, 0.054, 8, 0.339, 11, 0.065, 12,
          0.009, 13, 0.075, 14, 0.698, 22, 0.241, 37, 0.897, 95, 0.006, 96,
          0.006, 97, 0.561, 103, 0.694, 104, 0.793, 105, 3.191, 107, 0.529, 108,
          2.915, 109, 1.693, 111, 1.649, 121, 2.049, 122, 1.915, 124, 1.984,
          125, 1.414, 126, 1.448, 130, 0.195, 131, 1.416, 132, 2.591, 134,
          1.414, 135, 1.712, 136, 1.414, 139, 3.403, 144, 1.944, 516, 3.89, 521,
          3.244, 523, 1.488, 636, 1.139, 638, 1.224, 720, 1.632, 758, 1.254,
          769, 1.101, 771, 0.919, 780, 0.941, 813, 1.254, 818, 2.434, 826,
          2.256, 913, 2.087, 914, 1.649, 915, 1.649, 916, 1.649, 917, 4.206,
          918, 1.649, 919, 7.149, 920, 2.504, 921, 2.516, 922, 6.356, 923,
          6.356, 924, 7.149, 925, 3.559, 926, 6.223, 927, 6.356, 928, 4.768,
          929, 7.149, 930, 4.768, 931, 4.768, 932, 4.768, 933, 3.835, 934,
          2.347, 935, 4.768, 936, 3.835, 937, 4.768, 938, 4.768, 939, 3.154,
          940, 4.768, 941, 4.768, 942, 3.835, 943, 2.736, 944, 2.859, 945,
          2.123, 946, 4.768, 947, 4.768, 948, 4.768, 949, 4.768, 950, 4.768,
          951, 4.768, 952, 5.112, 953, 6.133, 954, 6.726, 955, 4.204, 956,
          5.606, 957, 1.649, 958, 2.198, 959, 2.198, 960, 1.649, 961, 2.637,
          962, 1.649, 963, 1.649, 964, 1.649, 965, 1.649, 966, 1.649, 967,
          1.984, 968, 2.472, 969, 1.526, 970, 1.649, 971, 1.566, 972, 1.649,
          973, 1.649, 974, 1.526, 975, 2.198, 976, 1.566, 977, 1.649, 978,
          1.566, 979, 1.649, 980, 1.566, 981, 1.649, 982, 1.649, 983, 1.566,
          984, 1.649, 985, 1.526, 986, 1.984, 987, 1.649, 988, 1.416, 989,
          1.452, 990, 1.649, 991, 1.649, 992, 1.452, 993, 1.488, 994, 1.452,
          995, 1.649, 996, 1.416, 997, 1.452, 998, 1.488, 999, 2.198, 1000,
          1.452, 1001, 1.488, 1002, 1.607, 1003, 1.649, 1004, 1.526, 1005,
          1.526, 1006, 1.566, 1007, 1.566, 1008, 1.649, 1009, 1.566, 1010,
          1.526, 1011, 1.649, 1012, 1.566, 1013, 1.649, 1014, 1.526, 1015,
          2.141, 1016, 1.566, 1017, 1.649, 1018, 1.566, 1019, 1.566, 1020,
          1.607, 1021, 1.649,
        ],
      ],
      ["title/interfaces/Artist.html", [0, 0.042, 21, 1.248]],
      [
        "body/interfaces/Artist.html",
        [
          0, 0.083, 1, 1.86, 2, 0.879, 3, 0.072, 4, 0.062, 5, 0.062, 6, 1.974,
          7, 0.052, 8, 0.329, 9, 2.591, 10, 0.549, 11, 0.116, 12, 0.009, 13,
          0.14, 14, 1.145, 15, 1.378, 16, 2.67, 17, 1.631, 18, 1.974, 19, 2.939,
          20, 3.142, 21, 2.276, 22, 0.283, 23, 1.833, 24, 2.449, 25, 2.659, 26,
          1.574, 27, 3.343, 28, 1.846, 29, 2.967, 30, 1.588, 31, 1.373, 32,
          2.25, 33, 3.492, 34, 2.036, 35, 2.036, 36, 1.51, 37, 1.471, 38, 1.424,
          39, 1.09, 40, 1.915, 41, 2.036, 42, 1.915, 43, 2.036, 44, 2.036, 45,
          1.308, 46, 2.67, 47, 1.29, 48, 3.343, 49, 2.036, 50, 2.754, 51, 1.915,
          52, 1.915, 53, 2.036, 54, 1.974, 55, 2.036, 56, 0.777, 57, 1.498, 58,
          1.974, 59, 1.86, 60, 1.86, 61, 1.86, 62, 1.584, 63, 1.86, 64, 1.86,
          65, 1.171, 66, 1.807, 67, 1.974, 68, 0.858, 69, 0.879, 70, 1.86, 71,
          1.86, 72, 2.312, 73, 1.975, 74, 2.591, 75, 1.926, 76, 2.036, 77,
          1.709, 78, 1.974, 79, 1.915, 80, 2.619, 81, 1.86, 82, 1.974, 83,
          1.757, 84, 1.29, 85, 1.915, 86, 1.709, 87, 1.709, 88, 1.389, 89,
          2.376, 90, 1.86, 91, 2.036, 92, 2.036, 93, 2.036, 94, 2.036, 95,
          0.006, 96, 0.006, 97, 1.011,
        ],
      ],
      ["title/interfaces/Artist-1.html", [0, 0.035, 21, 1.047, 98, 1.047]],
      [
        "body/interfaces/Artist-1.html",
        [
          0, 0.052, 2, 0.488, 3, 0.04, 4, 0.034, 5, 0.034, 7, 0.029, 8, 0.213,
          10, 0.515, 11, 0.105, 12, 0.01, 13, 0.04, 15, 0.995, 21, 1.695, 22,
          0.261, 23, 1.503, 25, 2.18, 26, 1.305, 30, 1.707, 31, 1.851, 32,
          0.924, 36, 1.864, 37, 1.285, 39, 1.467, 56, 1.243, 68, 1.496, 69,
          1.492, 84, 2.112, 88, 1.869, 95, 0.004, 96, 0.004, 98, 1.37, 99,
          1.677, 100, 3.49, 101, 4.959, 102, 4.618, 103, 0.413, 104, 0.444, 105,
          1.787, 106, 2.516, 107, 0.281, 108, 1.633, 109, 0.9, 110, 2.803, 111,
          0.877, 112, 4.693, 113, 4.784, 114, 4.247, 115, 4.298, 116, 4.298,
          117, 4.298, 118, 4.298, 119, 3.381, 120, 4.298, 121, 0.564, 122,
          0.525, 123, 1.064, 124, 0.791, 125, 0.564, 126, 0.578, 127, 1.775,
          128, 1.343, 129, 1.775, 130, 0.104, 131, 0.753, 132, 1.034, 133,
          1.316, 134, 0.564, 135, 1.841, 136, 0.891, 137, 1.775, 138, 1.593,
          139, 1.131, 140, 2.803, 141, 1.775, 142, 1.775, 143, 1.593, 144,
          2.024, 145, 1.959, 146, 1.455, 147, 1.168, 148, 2.298, 149, 1.907,
          150, 3.264, 151, 2.516, 152, 1.455, 153, 1.775, 154, 1.775, 155,
          1.775, 156, 1.775, 157, 1.775, 158, 1.775, 159, 1.677, 160, 2.44, 161,
          1.845, 162, 2.803, 163, 1.131, 164, 1.593, 165, 2.578, 166, 1.343,
          167, 2.205, 168, 2.024, 169, 1.455, 170, 3.119, 171, 1.775, 172,
          1.775, 173, 3.947, 174, 1.775, 175, 1.775, 176, 1.52, 177, 1.775, 178,
          1.775, 179, 1.775, 180, 1.775, 181, 1.775, 182, 1.775, 183, 1.775,
          184, 1.775, 185, 1.775, 186, 2.803, 187, 1.775, 188, 1.775, 189,
          1.775, 190, 1.775, 191, 2.803, 192, 1.775, 193, 1.593, 194, 1.097,
          195, 1.677, 196, 1.775, 197, 4.101, 198, 2.516, 199, 1.775, 200,
          2.516, 201, 1.593, 202, 1.52, 203, 1.787, 204, 1.455, 205, 1.131, 206,
          1.593, 207, 1.593, 208, 2.18, 209, 1.035, 210, 2.803, 211, 1.673, 212,
          1.396, 213, 2.803, 214, 4.247, 215, 1.775, 216, 3.858, 217, 3.119,
          218, 1.593, 219, 1.593, 220, 1.677, 221, 1.677, 222, 1.775, 223,
          1.775, 224, 1.593, 225, 1.593, 226, 1.593, 227, 2.516, 228, 2.516,
          229, 1.775, 230, 1.775, 231, 2.516, 232, 1.593, 233, 2.205, 234,
          1.775, 235, 1.775, 236, 3.543, 237, 3.543, 238, 3.38, 239, 3.73, 240,
          3.858, 241, 1.593, 242, 1.775, 243, 2.803, 244, 1.593, 245, 2.803,
          246, 1.775, 247, 3.475, 248, 2.803, 249, 1.775, 250, 1.396, 251,
          1.775, 252, 1.775, 253, 1.677, 254, 1.593, 255, 1.775, 256, 1.775,
          257, 1.677, 258, 1.097, 259, 1.282, 260, 1.593, 261, 3.38, 262, 3.543,
          263, 1.775, 264, 1.775, 265, 1.775, 266, 4.317, 267, 1.593, 268,
          1.593, 269, 2.803, 270, 2.649, 271, 2.803, 272, 1.775, 273, 1.593,
          274, 1.593, 275, 1.775, 276, 3.264, 277, 1.593, 278, 1.593, 279,
          3.149, 280, 1.593, 281, 1.593, 282, 2.516, 283, 1.52, 284, 1.593, 285,
          2.803, 286, 1.672, 287, 1.593, 288, 3.119, 289, 1.593, 290, 2.516,
          291, 3.119, 292, 1.593, 293, 1.396, 294, 1.775, 295, 3.119, 296,
          1.593, 297, 3.543, 298, 3.543, 299, 3.475, 300, 3.119, 301, 1.593,
          302, 3.119, 303, 2.516, 304, 3.475, 305, 2.516, 306, 1.593, 307,
          3.475, 308, 2.516, 309, 1.775, 310, 1.131, 311, 1.907, 312, 2.803,
          313, 1.455, 314, 1.677, 315, 1.775, 316, 2.516, 317, 1.593, 318,
          1.593, 319, 1.593, 320, 1.396, 321, 1.775, 322, 1.775, 323, 1.775,
          324, 1.775, 325, 1.775, 326, 4.295, 327, 1.677, 328, 1.973, 329,
          1.593, 330, 2.516, 331, 2.516, 332, 1.593, 333, 1.677, 334, 1.593,
          335, 1.593, 336, 1.775, 337, 1.677, 338, 1.775, 339, 1.775, 340,
          1.775, 341, 2.803, 342, 1.775, 343, 1.543, 344, 3.947, 345, 2.803,
          346, 1.775, 347, 1.775, 348, 1.787, 349, 1.775, 350, 1.775, 351,
          1.775, 352, 1.775, 353, 1.775, 354, 1.775, 355, 1.775, 356, 1.775,
          357, 3.475, 358, 1.064, 359, 1.775, 360, 1.775, 361, 2.803, 362,
          1.775, 363, 1.775, 364, 1.775, 365, 1.775, 366, 1.775, 367, 1.775,
          368, 1.775, 369, 1.775, 370, 1.775, 371, 1.775, 372, 2.733, 373,
          1.677, 374, 1.775, 375, 2.649, 376, 1.775, 377, 2.121, 378, 1.775,
          379, 3.475, 380, 1.775, 381, 2.803, 382, 1.775, 383, 1.775, 384,
          1.775, 385, 1.775, 386, 1.455, 387, 1.775, 388, 2.044, 389, 1.775,
          390, 1.775, 391, 1.973, 392, 2.803, 393, 1.775, 394, 2.803, 395,
          1.775, 396, 1.775, 397, 1.775, 398, 1.775, 399, 1.775, 400, 1.775,
          401, 1.775, 402, 1.775, 403, 1.677, 404, 1.775, 405, 2.803, 406,
          1.775, 407, 1.775, 408, 1.775, 409, 1.775, 410, 1.396, 411, 1.593,
          412, 1.775, 413, 1.775, 414, 1.775, 415, 1.775, 416, 1.775, 417,
          1.677, 418, 1.775, 419, 2.649, 420, 1.775, 421, 1.775, 422, 1.775,
          423, 1.677, 424, 1.775, 425, 1.775, 426, 1.455, 427, 1.775, 428,
          1.396, 429, 1.775, 430, 1.775, 431, 2.803, 432, 3.543, 433, 3.543,
          434, 3.947, 435, 3.947, 436, 3.947, 437, 2.803, 438, 3.475, 439,
          2.803, 440, 4.686, 441, 2.401, 442, 2.803, 443, 2.401, 444, 3.947,
          445, 3.947, 446, 2.649, 447, 1.775, 448, 1.775, 449, 1.775, 450,
          1.775, 451, 1.775, 452, 1.775, 453, 1.593, 454, 1.775, 455, 1.775,
          456, 1.775, 457, 1.775, 458, 3.543, 459, 3.543, 460, 3.543, 461,
          1.593, 462, 2.803, 463, 2.803, 464, 1.775, 465, 1.677, 466, 1.775,
          467, 1.775, 468, 1.775, 469, 1.775, 470, 1.775, 471, 1.775, 472,
          1.775, 473, 1.775, 474, 1.775, 475, 1.775, 476, 1.775, 477, 1.775,
          478, 1.775, 479, 1.775, 480, 1.775, 481, 1.677, 482, 1.677, 483,
          1.775, 484, 2.298, 485, 1.973, 486, 2.298, 487, 1.775, 488, 2.298,
          489, 1.455, 490, 1.52, 491, 1.775, 492, 1.677, 493, 1.775, 494, 1.455,
          495, 1.775, 496, 3.475, 497, 4.569, 498, 1.775, 499, 1.775, 500,
          1.775, 501, 1.775, 502, 1.775, 503, 3.475, 504, 1.677, 505, 1.775,
          506, 1.775, 507, 1.775, 508, 1.775, 509, 1.775, 510, 1.775, 511,
          1.775,
        ],
      ],
      ["title/interfaces/Artist-2.html", [0, 0.035, 21, 1.047, 358, 1.593]],
      [
        "body/interfaces/Artist-2.html",
        [
          0, 0.052, 2, 0.589, 3, 0.048, 4, 0.041, 5, 0.099, 7, 0.035, 8, 0.247,
          10, 0.514, 11, 0.099, 12, 0.01, 13, 0.048, 15, 1.419, 19, 2.606, 21,
          2.236, 22, 0.289, 23, 2.156, 24, 2.336, 25, 2.739, 26, 0.976, 28,
          1.354, 30, 1.185, 31, 1.628, 39, 1.107, 45, 1.668, 56, 1.34, 57,
          1.521, 68, 1.259, 69, 1.29, 73, 1.995, 84, 0.865, 88, 2.349, 95,
          0.005, 96, 0.005, 98, 1.542, 102, 4.199, 103, 0.519, 104, 0.514, 107,
          0.339, 108, 1.888, 109, 1.086, 111, 1.058, 119, 3.077, 121, 0.681,
          122, 0.633, 123, 1.284, 124, 2.199, 125, 0.681, 126, 0.697, 130,
          0.125, 133, 1.758, 136, 0.681, 144, 2.541, 145, 1.844, 147, 2.134,
          149, 1.457, 150, 2.134, 160, 1.324, 203, 2.067, 208, 1.086, 209,
          1.343, 211, 1.368, 212, 1.685, 227, 2.1, 250, 1.685, 279, 1.409, 286,
          1.031, 311, 2.205, 328, 1.507, 343, 1.178, 358, 2.347, 386, 1.755,
          388, 2.852, 410, 1.685, 426, 1.755, 428, 1.685, 441, 1.834, 443,
          2.776, 484, 1.755, 490, 2.776, 512, 2.283, 513, 6.717, 514, 3.063,
          515, 1.834, 516, 2.661, 517, 4.735, 518, 6.206, 519, 2.283, 520,
          2.461, 521, 1.561, 522, 2.461, 523, 0.955, 524, 2.461, 525, 3.687,
          526, 2.094, 527, 2.461, 528, 2.134, 529, 2.461, 530, 2.791, 531,
          2.141, 532, 2.283, 533, 2.461, 534, 2.023, 535, 2.891, 536, 3.725,
          537, 3.725, 538, 1.058, 539, 2.347, 540, 2.461, 541, 2.023, 542,
          2.141, 543, 2.283, 544, 1.755, 545, 2.283, 546, 2.461, 547, 1.922,
          548, 4.363, 549, 2.283, 550, 2.283, 551, 2.283, 552, 2.461, 553,
          2.461, 554, 2.96, 555, 2.461, 556, 2.461, 557, 2.283, 558, 2.461, 559,
          2.461, 560, 2.461, 561, 2.461, 562, 2.461, 563, 2.461, 564, 2.96, 565,
          2.141, 566, 2.461, 567, 2.461, 568, 2.461, 569, 2.461, 570, 2.461,
          571, 2.461, 572, 3.576, 573, 2.461, 574, 2.461, 575, 2.461, 576,
          2.461, 577, 2.461, 578, 3.242, 579, 2.461, 580, 2.461, 581, 2.461,
          582, 2.461, 583, 2.461, 584, 2.461, 585, 4.495, 586, 4.495, 587,
          2.283, 588, 2.461, 589, 2.461, 590, 3.725, 591, 3.725, 592, 2.461,
          593, 2.461, 594, 3.725, 595, 2.461, 596, 2.461, 597, 2.461, 598,
          3.725, 599, 3.725, 600, 2.461, 601, 2.461, 602, 2.461, 603, 3.725,
          604, 3.725, 605, 2.461, 606, 2.461, 607, 2.461, 608, 2.461, 609,
          2.461, 610, 2.283, 611, 2.283, 612, 2.461, 613, 2.461, 614, 2.461,
          615, 3.725, 616, 2.461, 617, 2.461, 618, 2.461, 619, 2.461, 620,
          2.461, 621, 2.461, 622, 2.461, 623, 2.461, 624, 2.461, 625, 2.461,
          626, 2.461, 627, 2.141, 628, 2.461, 629, 2.461, 630, 2.141, 631,
          3.725, 632, 3.912, 633, 2.461, 634, 2.461, 635, 2.461, 636, 1.107,
          637, 2.461, 638, 2.175, 639, 2.461, 640, 2.283, 641, 3.725, 642,
          2.461, 643, 2.461, 644, 2.461, 645, 2.461, 646, 4.171, 647, 5.013,
          648, 2.283, 649, 2.023, 650, 3.696, 651, 2.283, 652, 3.456, 653,
          2.283, 654, 2.283, 655, 2.283, 656, 2.283, 657, 2.283, 658, 2.283,
          659, 2.283, 660, 2.023, 661, 2.141, 662, 2.283, 663, 2.283, 664,
          2.283, 665, 2.283, 666, 2.283, 667, 1.755, 668, 1.685, 669, 4.171,
          670, 3.456, 671, 3.456, 672, 2.283, 673, 2.283, 674, 2.283, 675,
          2.141, 676, 2.283, 677, 2.283, 678, 2.283, 679, 1.62, 680, 2.283, 681,
          2.283, 682, 2.283, 683, 1.561, 684, 2.283, 685, 2.283, 686, 2.461,
          687, 2.283, 688, 2.273, 689, 3.725, 690, 2.283, 691, 2.283, 692,
          2.283, 693, 2.461, 694, 3.725, 695, 2.283, 696, 2.461, 697, 2.141,
          698, 3.725, 699, 2.461, 700, 2.141, 701, 2.461, 702, 2.461, 703,
          2.461, 704, 3.725, 705, 2.461, 706, 2.141, 707, 2.461, 708, 3.725,
          709, 3.063, 710, 3.725, 711, 2.141, 712, 2.141, 713, 2.461, 714,
          2.461, 715, 2.461, 716, 2.141, 717, 2.283, 718, 2.283, 719, 2.141,
          720, 0.785, 721, 2.461, 722, 1.834, 723, 2.141, 724, 2.023, 725,
          2.461, 726, 2.283, 727, 2.461, 728, 2.283, 729, 2.461, 730, 2.461,
          731, 2.283, 732, 2.461, 733, 2.461, 734, 2.461, 735, 2.461, 736,
          4.495, 737, 2.461, 738, 2.461, 739, 2.141, 740, 2.283, 741, 2.461,
          742, 2.461, 743, 2.283, 744, 2.141, 745, 2.461, 746, 2.461, 747,
          2.461, 748, 2.461, 749, 3.456, 750, 3.725, 751, 2.461, 752, 2.283,
        ],
      ],
      ["title/components/ArtistComponent.html", [104, 0.502, 131, 1.343]],
      [
        "body/components/ArtistComponent.html",
        [
          0, 0.039, 3, 0.042, 4, 0.021, 5, 0.021, 7, 0.018, 8, 0.141, 10, 0.442,
          11, 0.09, 12, 0.01, 13, 0.024, 14, 0.225, 15, 0.429, 21, 2.217, 22,
          0.255, 23, 1.013, 25, 0.939, 26, 1.055, 30, 1.586, 31, 1.664, 32,
          1.702, 36, 1.626, 37, 1.279, 39, 1.116, 47, 0.748, 56, 1.029, 68,
          1.306, 69, 1.28, 84, 1.879, 88, 1.261, 95, 0.003, 96, 0.003, 97, 0.6,
          98, 1.593, 99, 1.016, 100, 3.186, 101, 4.226, 102, 4.125, 103, 0.29,
          104, 0.387, 105, 1.555, 106, 2.602, 107, 0.17, 108, 1.42, 109, 0.545,
          110, 2.898, 111, 0.531, 112, 4.176, 113, 3.825, 114, 2.799, 115,
          1.851, 116, 1.851, 117, 1.851, 118, 1.851, 119, 2.81, 120, 3.571, 121,
          1.797, 122, 1.681, 123, 1.111, 124, 0.826, 125, 0.588, 126, 0.603,
          127, 1.851, 128, 1.401, 129, 2.439, 130, 0.063, 131, 1.23, 132, 1.078,
          133, 1.347, 134, 0.588, 135, 1.965, 136, 0.588, 137, 1.851, 138,
          2.189, 139, 1.848, 140, 1.851, 141, 1.075, 142, 1.075, 143, 1.662,
          144, 2.461, 145, 1.743, 146, 1.518, 147, 0.708, 148, 2.376, 149,
          1.259, 150, 2.887, 151, 1.662, 152, 0.881, 153, 1.075, 154, 1.075,
          155, 1.075, 156, 1.075, 157, 1.075, 158, 1.075, 159, 1.016, 160,
          1.792, 161, 1.219, 162, 1.851, 163, 0.685, 164, 0.965, 165, 2.295,
          166, 1.401, 167, 1.456, 168, 1.42, 169, 0.881, 170, 2.189, 171, 2.898,
          172, 1.075, 173, 2.898, 174, 1.075, 175, 1.075, 176, 0.921, 177,
          1.075, 178, 1.075, 179, 1.075, 180, 1.075, 181, 1.075, 182, 1.075,
          183, 1.075, 184, 1.075, 185, 1.075, 186, 1.851, 187, 1.075, 188,
          1.075, 189, 1.075, 190, 1.075, 191, 1.851, 192, 1.075, 193, 1.662,
          194, 0.664, 195, 1.016, 196, 1.075, 197, 3.206, 198, 1.662, 199,
          1.075, 200, 1.662, 201, 0.965, 202, 0.921, 203, 1.18, 204, 0.881, 205,
          0.685, 206, 0.965, 207, 0.965, 208, 2.143, 209, 0.76, 210, 1.851, 211,
          1.337, 212, 0.846, 213, 1.851, 214, 3.46, 215, 1.075, 216, 2.933, 217,
          2.189, 218, 0.965, 219, 0.965, 220, 1.016, 221, 1.016, 222, 1.075,
          223, 1.075, 224, 0.965, 225, 0.965, 226, 0.965, 227, 2.896, 228,
          1.662, 229, 1.075, 230, 1.075, 231, 2.189, 232, 0.965, 233, 2.28, 234,
          1.075, 235, 1.075, 236, 2.602, 237, 2.602, 238, 2.482, 239, 2.739,
          240, 2.933, 241, 0.965, 242, 1.075, 243, 1.851, 244, 0.965, 245,
          1.851, 246, 1.075, 247, 2.439, 248, 1.851, 249, 1.075, 250, 3.009,
          251, 1.075, 252, 1.075, 253, 1.016, 254, 0.965, 255, 1.075, 256,
          1.075, 257, 1.016, 258, 0.664, 259, 0.847, 260, 2.602, 261, 2.799,
          262, 2.933, 263, 1.075, 264, 1.075, 265, 1.075, 266, 3.375, 267,
          0.965, 268, 2.189, 269, 1.851, 270, 1.749, 271, 1.851, 272, 1.075,
          273, 0.965, 274, 0.965, 275, 1.075, 276, 3.68, 277, 0.965, 278, 0.965,
          279, 2.518, 280, 0.965, 281, 0.965, 282, 1.662, 283, 0.921, 284,
          0.965, 285, 1.851, 286, 1.174, 287, 0.965, 288, 2.189, 289, 0.965,
          290, 1.662, 291, 2.189, 292, 1.662, 293, 0.846, 294, 1.075, 295,
          2.189, 296, 0.965, 297, 2.602, 298, 2.602, 299, 2.439, 300, 2.189,
          301, 0.965, 302, 2.189, 303, 1.662, 304, 2.439, 305, 1.662, 306,
          0.965, 307, 2.439, 308, 1.662, 309, 1.075, 310, 0.685, 311, 1.259,
          312, 1.851, 313, 0.881, 314, 1.016, 315, 1.075, 316, 1.662, 317,
          0.965, 318, 0.965, 319, 0.965, 320, 0.846, 321, 1.075, 322, 1.075,
          323, 1.075, 324, 1.075, 325, 2.898, 326, 3.434, 327, 1.016, 328,
          1.303, 329, 0.965, 330, 1.662, 331, 1.662, 332, 0.965, 333, 1.016,
          334, 0.965, 335, 0.965, 336, 1.075, 337, 1.016, 338, 1.075, 339,
          1.075, 340, 1.075, 341, 1.851, 342, 1.075, 343, 1.019, 344, 2.898,
          345, 1.851, 346, 1.075, 347, 1.075, 348, 1.555, 349, 1.075, 350,
          1.075, 351, 1.075, 352, 1.075, 353, 1.075, 354, 1.075, 355, 1.075,
          356, 1.075, 357, 2.439, 358, 0.645, 359, 1.075, 360, 1.075, 361,
          1.851, 362, 1.075, 363, 1.075, 364, 1.075, 365, 1.075, 366, 1.075,
          367, 1.075, 368, 1.075, 369, 1.075, 370, 1.075, 371, 1.075, 372,
          1.918, 373, 1.016, 374, 1.075, 375, 1.749, 376, 1.075, 377, 1.401,
          378, 1.075, 379, 2.439, 380, 1.075, 381, 1.851, 382, 1.075, 383,
          1.075, 384, 1.075, 385, 1.075, 386, 0.881, 387, 1.075, 388, 1.35, 389,
          1.075, 390, 1.075, 391, 1.303, 392, 1.851, 393, 1.075, 394, 1.851,
          395, 1.075, 396, 1.075, 397, 1.075, 398, 1.075, 399, 1.075, 400,
          1.075, 401, 1.075, 402, 1.075, 403, 1.016, 404, 1.075, 405, 1.851,
          406, 1.075, 407, 1.075, 408, 1.075, 409, 1.075, 410, 0.846, 411,
          2.189, 412, 1.075, 413, 1.075, 414, 1.075, 415, 1.075, 416, 1.075,
          417, 1.016, 418, 1.075, 419, 1.749, 420, 1.075, 421, 1.075, 422,
          1.075, 423, 1.016, 424, 1.075, 425, 1.075, 426, 2.376, 427, 1.075,
          428, 0.846, 429, 1.075, 430, 1.075, 431, 1.851, 432, 2.602, 433,
          2.602, 434, 2.898, 435, 2.898, 436, 2.898, 437, 1.851, 438, 2.439,
          439, 1.851, 440, 3.818, 441, 1.586, 442, 1.851, 443, 1.586, 444,
          2.898, 445, 2.898, 446, 1.749, 447, 1.075, 448, 1.075, 449, 1.075,
          450, 1.075, 451, 1.075, 452, 1.075, 453, 0.965, 454, 1.075, 455,
          1.075, 456, 1.075, 457, 1.075, 458, 2.602, 459, 2.602, 460, 2.602,
          461, 0.965, 462, 1.851, 463, 1.851, 464, 1.075, 465, 1.016, 466,
          1.075, 467, 1.075, 468, 1.075, 469, 1.075, 470, 1.075, 471, 1.075,
          472, 1.075, 473, 1.075, 474, 1.075, 475, 1.075, 476, 1.075, 477,
          1.075, 478, 1.075, 479, 1.075, 480, 1.075, 481, 1.016, 482, 1.016,
          483, 1.075, 484, 1.518, 485, 1.303, 486, 1.518, 487, 1.075, 488,
          1.518, 489, 0.881, 490, 0.921, 491, 1.075, 492, 1.016, 493, 1.075,
          494, 0.881, 495, 1.075, 496, 2.439, 497, 3.571, 498, 1.075, 499,
          1.075, 500, 1.075, 501, 1.075, 502, 1.075, 503, 2.439, 504, 1.016,
          505, 1.075, 506, 1.075, 507, 1.075, 508, 1.075, 509, 1.075, 510,
          1.075, 511, 1.075, 523, 0.479, 544, 2.679, 636, 1.116, 638, 1.403,
          667, 4.125, 668, 1.456, 709, 1.016, 720, 0.679, 731, 1.974, 740,
          1.974, 758, 0.522, 769, 1.024, 771, 0.983, 780, 1.191, 793, 1.235,
          813, 0.696, 828, 2.739, 854, 2.602, 913, 0.868, 914, 1.764, 915,
          0.531, 916, 0.531, 918, 0.531, 920, 0.504, 921, 1.386, 934, 0.868,
          945, 0.786, 957, 0.531, 958, 0.915, 959, 0.915, 960, 0.531, 961,
          1.432, 962, 0.531, 963, 0.531, 964, 0.531, 965, 0.531, 966, 0.531,
          967, 1.292, 968, 1.205, 969, 0.492, 970, 0.531, 971, 0.504, 972,
          0.531, 973, 0.531, 974, 0.492, 975, 0.915, 976, 0.504, 977, 0.531,
          978, 0.504, 979, 0.531, 980, 0.504, 981, 0.531, 982, 0.531, 983,
          0.504, 984, 0.531, 985, 0.492, 986, 0.826, 987, 0.531, 988, 0.456,
          989, 0.468, 990, 0.531, 991, 0.531, 992, 0.468, 993, 0.479, 994,
          0.805, 995, 0.531, 996, 0.456, 997, 0.468, 998, 0.479, 999, 0.915,
          1000, 0.468, 1001, 0.479, 1002, 0.517, 1003, 0.531, 1004, 0.492, 1005,
          0.492, 1006, 1.144, 1007, 0.504, 1008, 0.531, 1009, 0.504, 1010,
          0.492, 1011, 0.531, 1012, 0.504, 1013, 0.531, 1014, 0.492, 1015,
          0.891, 1016, 0.504, 1017, 0.531, 1018, 0.504, 1019, 0.504, 1020,
          0.517, 1021, 0.531, 1022, 0.965, 1023, 2.333, 1024, 2.333, 1025,
          1.974, 1026, 2.333, 1027, 1.536, 1028, 2.645, 1029, 1.536, 1030,
          1.536, 1031, 1.354, 1032, 2.376, 1033, 1.536, 1034, 1.536, 1035,
          1.536, 1036, 1.536, 1037, 1.536, 1038, 1.536, 1039, 1.536, 1040,
          1.536, 1041, 2.645, 1042, 2.645, 1043, 2.645, 1044, 2.645, 1045,
          2.645, 1046, 2.645, 1047, 2.645, 1048, 2.645, 1049, 2.127, 1050,
          2.645, 1051, 3.484, 1052, 2.645, 1053, 2.439, 1054, 2.127, 1055,
          1.749, 1056, 2.333, 1057, 2.645, 1058, 2.645, 1059, 3.484, 1060,
          2.645, 1061, 2.645, 1062, 2.645, 1063, 2.645, 1064, 1.974, 1065,
          2.333, 1066, 3.088, 1067, 1.146, 1068, 4.278, 1069, 4.677, 1070, 3.46,
          1071, 1.536, 1072, 5.216, 1073, 1.016, 1074, 4.176, 1075, 1.536, 1076,
          1.536, 1077, 1.974, 1078, 3.571, 1079, 1.146, 1080, 1.851, 1081,
          5.867, 1082, 3.818, 1083, 4.668, 1084, 2.333, 1085, 1.146, 1086,
          1.146, 1087, 4.584, 1088, 4.145, 1089, 4.445, 1090, 2.127, 1091,
          1.974, 1092, 3.571, 1093, 3.09, 1094, 1.354, 1095, 2.898, 1096, 3.825,
          1097, 4.678, 1098, 3.33, 1099, 2.802, 1100, 3.571, 1101, 3.09, 1102,
          2.127, 1103, 4.078, 1104, 2.645, 1105, 1.851, 1106, 3.073, 1107,
          3.614, 1108, 3.614, 1109, 1.235, 1110, 1.354, 1111, 1.354, 1112,
          3.571, 1113, 1.354, 1114, 5.216, 1115, 1.974, 1116, 4.505, 1117,
          2.333, 1118, 3.818, 1119, 2.127, 1120, 1.536, 1121, 1.235, 1122,
          1.851, 1123, 1.354, 1124, 2.333, 1125, 2.333, 1126, 3.808, 1127,
          1.235, 1128, 1.974, 1129, 0.965, 1130, 3.793, 1131, 2.127, 1132, 3.33,
          1133, 1.235, 1134, 1.851, 1135, 1.146, 1136, 1.146, 1137, 2.6, 1138,
          1.146, 1139, 1.235, 1140, 3.484, 1141, 3.938, 1142, 2.898, 1143,
          3.268, 1144, 2.933, 1145, 4.14, 1146, 2.645, 1147, 2.6, 1148, 4.5,
          1149, 4.14, 1150, 1.354, 1151, 1.354, 1152, 1.354, 1153, 1.536, 1154,
          2.898, 1155, 1.536, 1156, 1.536, 1157, 2.127, 1158, 1.536, 1159,
          1.235, 1160, 4.104, 1161, 1.851, 1162, 4.668, 1163, 1.235, 1164,
          2.333, 1165, 3.33, 1166, 5.862, 1167, 4.118, 1168, 4.14, 1169, 3.073,
          1170, 1.536, 1171, 4.118, 1172, 1.536, 1173, 1.075, 1174, 1.235, 1175,
          1.536, 1176, 1.536, 1177, 1.536, 1178, 1.536, 1179, 1.536, 1180,
          1.536, 1181, 1.235, 1182, 1.536, 1183, 1.536, 1184, 3.484, 1185,
          1.536, 1186, 1.235, 1187, 1.354, 1188, 1.235, 1189, 1.974, 1190,
          1.235, 1191, 1.354, 1192, 1.354, 1193, 1.536, 1194, 1.235, 1195,
          2.645, 1196, 1.536,
        ],
      ],
      ["title/injectables/ArtistService.html", [753, 0.871, 1197, 3.637]],
      [
        "body/injectables/ArtistService.html",
        [
          3, 0.047, 4, 0.041, 5, 0.102, 7, 0.034, 8, 0.243, 10, 0.53, 11, 0.118,
          12, 0.01, 13, 0.047, 15, 0.895, 21, 0.828, 22, 0.29, 24, 0.891, 26,
          1.561, 29, 1.189, 30, 0.636, 32, 2.941, 37, 0.564, 47, 0.849, 56,
          1.052, 68, 1.55, 77, 1.124, 80, 3.355, 83, 1.758, 86, 2.313, 87, 2.07,
          88, 1.39, 89, 3.205, 95, 0.005, 96, 0.005, 97, 1.006, 103, 0.514, 107,
          0.333, 130, 0.123, 134, 0.668, 135, 1.488, 150, 2.103, 160, 1.975,
          168, 1.861, 205, 3.899, 208, 2.191, 209, 1.569, 211, 1.711, 227,
          1.861, 233, 1.653, 250, 4.775, 270, 3.019, 279, 3.059, 286, 1.538,
          293, 2.513, 310, 2.037, 337, 3.019, 348, 3.121, 377, 2.418, 391,
          3.974, 410, 4.619, 426, 2.619, 494, 2.619, 526, 1.71, 538, 1.038, 544,
          3.541, 636, 0.717, 739, 4.32, 753, 0.879, 754, 3.569, 755, 1.094, 758,
          0.901, 769, 1.33, 771, 1.647, 779, 3.169, 780, 1.687, 781, 4.969, 786,
          4.272, 813, 0.789, 818, 1.532, 824, 1.799, 825, 1.094, 826, 1.065,
          955, 3.019, 1019, 2.296, 1032, 2.619, 1053, 3.195, 1129, 2.868, 1197,
          3.671, 1198, 2.647, 1199, 4.564, 1200, 4.564, 1201, 4.564, 1202,
          4.564, 1203, 4.564, 1204, 5.523, 1205, 5.523, 1206, 4.564, 1207,
          4.564, 1208, 6.172, 1209, 4.564, 1210, 4.564, 1211, 4.564, 1212,
          4.564, 1213, 4.564, 1214, 5.523, 1215, 4.564, 1216, 5.523, 1217,
          4.564, 1218, 1.985, 1219, 4.564, 1220, 4.564, 1221, 3.001, 1222,
          4.564, 1223, 4.564, 1224, 6.993, 1225, 4.564, 1226, 3.001, 1227,
          4.564, 1228, 3.001, 1229, 4.564, 1230, 3.001, 1231, 4.564, 1232,
          3.001, 1233, 4.026, 1234, 3.671, 1235, 3.195, 1236, 3.001, 1237,
          3.001, 1238, 3.019, 1239, 3.001, 1240, 3.001, 1241, 4.564, 1242,
          3.001, 1243, 4.026, 1244, 4.564, 1245, 3.001, 1246, 3.001, 1247,
          4.564, 1248, 4.012, 1249, 4.564, 1250, 3.001, 1251, 4.564, 1252,
          4.564, 1253, 4.564, 1254, 3.001, 1255, 4.564, 1256, 3.001, 1257,
          4.564, 1258, 4.564, 1259, 3.001, 1260, 4.564, 1261, 3.001, 1262,
          3.019, 1263, 4.564, 1264, 3.001, 1265, 3.001, 1266, 4.564, 1267,
          3.001, 1268, 4.564, 1269, 3.001, 1270, 4.443, 1271, 3.001, 1272,
          3.195, 1273, 4.564, 1274, 3.001, 1275, 3.406, 1276, 1.886, 1277,
          2.414, 1278, 2.414, 1279, 2.414, 1280, 2.24, 1281, 4.026, 1282, 2.24,
          1283, 3.001, 1284, 3.001, 1285, 4.122, 1286, 3.001, 1287, 3.671, 1288,
          3.001, 1289, 3.001, 1290, 2.647, 1291, 3.001, 1292, 3.001, 1293,
          2.647, 1294, 3.001, 1295, 3.001, 1296, 2.414, 1297, 2.647, 1298,
          3.001, 1299, 2.414, 1300, 3.001, 1301, 2.647, 1302, 3.001,
        ],
      ],
      ["title/components/AsideMenu.html", [104, 0.502, 920, 1.485]],
      [
        "body/components/AsideMenu.html",
        [
          3, 0.065, 4, 0.056, 5, 0.056, 7, 0.047, 8, 0.306, 11, 0.056, 12, 0.01,
          13, 0.065, 14, 1.143, 15, 1.326, 22, 0.284, 45, 1.219, 47, 1.625, 56,
          0.701, 57, 1.351, 73, 1.317, 95, 0.006, 96, 0.006, 98, 1.979, 100,
          4.031, 103, 0.667, 104, 0.735, 107, 0.457, 111, 1.423, 121, 2.028,
          122, 1.89, 125, 1.278, 126, 1.309, 130, 0.168, 131, 1.222, 135, 1.784,
          136, 1.738, 328, 2.831, 358, 2.413, 485, 2.831, 486, 3.297, 488,
          3.297, 489, 3.297, 523, 1.284, 525, 4.303, 539, 1.727, 541, 3.801,
          554, 3.044, 564, 3.044, 565, 4.023, 636, 1.802, 712, 4.023, 720,
          1.475, 758, 1.134, 769, 1.204, 780, 0.812, 813, 1.984, 913, 1.887,
          914, 1.423, 915, 1.423, 916, 1.423, 918, 1.423, 920, 2.354, 921, 2.24,
          933, 6.451, 934, 2.687, 943, 3.8, 945, 1.707, 953, 4.622, 955, 3.801,
          956, 5.069, 957, 1.423, 958, 1.987, 959, 1.987, 960, 1.423, 961,
          2.479, 962, 1.423, 963, 1.423, 964, 1.423, 965, 2.608, 966, 1.423,
          967, 2.067, 968, 2.29, 969, 1.317, 970, 1.423, 971, 1.351, 972, 1.423,
          973, 1.423, 974, 1.317, 975, 1.987, 976, 1.351, 977, 1.423, 978,
          1.351, 979, 1.423, 980, 1.351, 981, 1.423, 982, 1.423, 983, 1.351,
          984, 1.423, 985, 1.317, 986, 1.794, 987, 1.423, 988, 1.222, 989,
          1.252, 990, 1.423, 991, 1.423, 992, 1.252, 993, 1.284, 994, 1.252,
          995, 1.423, 996, 1.222, 997, 1.252, 998, 1.284, 999, 1.987, 1000,
          1.252, 1001, 1.284, 1002, 1.386, 1003, 1.423, 1004, 1.317, 1005,
          1.317, 1006, 1.887, 1007, 1.351, 1008, 1.423, 1009, 1.351, 1010,
          1.317, 1011, 1.423, 1012, 1.351, 1013, 1.423, 1014, 2.295, 1015,
          2.415, 1016, 2.354, 1017, 1.423, 1018, 1.351, 1019, 2.175, 1020,
          1.386, 1021, 1.423, 1303, 7.074, 1304, 3.629, 1305, 1.887, 1306,
          1.887, 1307, 4.636, 1308, 3.647, 1309, 5.747, 1310, 4.298, 1311,
          3.263, 1312, 5.327, 1313, 5.47, 1314, 2.956, 1315, 3.849, 1316, 4.114,
          1317, 5.069, 1318, 4.114, 1319, 5.069, 1320, 4.114, 1321, 5.747, 1322,
          5.747, 1323, 5.747, 1324, 5.747, 1325, 4.622, 1326, 4.114, 1327,
          4.114, 1328, 5.747, 1329, 4.114, 1330, 1.351, 1331, 2.1, 1332, 3.309,
          1333, 3.07, 1334, 4.114, 1335, 1.959, 1336, 3.309, 1337, 3.309, 1338,
          1.959, 1339, 4.114, 1340, 4.114, 1341, 4.622, 1342, 4.023, 1343,
          5.747, 1344, 4.289, 1345, 4.298, 1346, 4.023, 1347, 5.747, 1348,
          4.289, 1349, 5.747, 1350, 3.445, 1351, 5.747, 1352, 4.289,
        ],
      ],
      ["title/classes/AuthError.html", [130, 0.185, 1353, 2.308]],
      [
        "body/classes/AuthError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.528, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 2.303, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.499, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 5.3, 1359, 6.041, 1360, 5.687, 1361,
          5.781, 1362, 5.781, 1363, 5.781, 1364, 5.687, 1365, 5.687, 1366,
          3.426, 1367, 3.824, 1368, 3.811, 1369, 3.824, 1370, 3.963, 1371,
          3.824, 1372, 4.129, 1373, 3.824, 1374, 3.673, 1375, 3.824,
        ],
      ],
      ["title/classes/AuthRepository.html", [130, 0.185, 1376, 1.957]],
      [
        "body/classes/AuthRepository.html",
        [
          0, 0.074, 3, 0.093, 4, 0.08, 5, 0.08, 7, 0.067, 10, 0.517, 11, 0.107,
          12, 0.009, 13, 0.13, 14, 1.158, 17, 1.702, 22, 0.279, 28, 1.284, 62,
          1.873, 65, 1.518, 66, 3.135, 95, 0.007, 96, 0.007, 97, 0.931, 103,
          0.607, 130, 0.242, 758, 1.44, 769, 1.308, 771, 1.524, 780, 1.675, 943,
          4.186, 944, 4.374, 1315, 4.071, 1354, 3.255, 1376, 3.157, 1377, 4.138,
          1378, 5.053, 1379, 5.193, 1380, 5.911, 1381, 3.188, 1382, 3.724, 1383,
          3.688, 1384, 5.911, 1385, 4.018, 1386, 5.911, 1387, 5.107, 1388,
          5.911, 1389, 3.864, 1390, 3.688, 1391, 5.911, 1392, 3.392, 1393,
          4.374, 1394, 4.412, 1395, 4.138, 1396, 2.638, 1397, 4.412,
        ],
      ],
      ["title/injectables/AuthRepositoryImpl.html", [753, 0.871, 1398, 3.375]],
      [
        "body/injectables/AuthRepositoryImpl.html",
        [
          3, 0.053, 4, 0.046, 5, 0.046, 7, 0.039, 10, 0.348, 11, 0.099, 12,
          0.01, 13, 0.053, 14, 1.108, 15, 0.551, 17, 1.952, 19, 1.175, 20,
          1.274, 22, 0.262, 39, 1.569, 56, 1.119, 62, 1.528, 65, 1.528, 66,
          2.774, 68, 1.557, 69, 0.965, 73, 2.425, 84, 0.961, 95, 0.005, 96,
          0.005, 97, 0.862, 103, 0.583, 107, 0.377, 130, 0.139, 133, 0.793, 134,
          0.756, 135, 1.974, 136, 0.756, 145, 1.751, 160, 2.168, 161, 2.309,
          167, 2.759, 168, 2.043, 194, 1.471, 195, 3.314, 202, 3.568, 203,
          3.543, 204, 1.951, 208, 2.601, 209, 1.427, 211, 1.943, 258, 1.471,
          259, 2.678, 286, 1.145, 293, 1.872, 310, 3.125, 311, 1.619, 313,
          3.415, 320, 2.759, 343, 1.309, 348, 2.236, 372, 2.759, 373, 2.248,
          391, 2.932, 535, 3.245, 538, 1.175, 578, 2.38, 611, 2.537, 660, 3.314,
          683, 2.558, 744, 3.508, 753, 0.965, 755, 1.24, 758, 0.989, 769, 1.198,
          771, 1.411, 780, 1.495, 798, 2.998, 802, 4.42, 825, 1.24, 826, 1.207,
          843, 3.74, 943, 4.632, 944, 3.004, 953, 2.734, 1248, 4.461, 1314,
          3.796, 1315, 3.236, 1338, 3.607, 1345, 4.839, 1346, 3.508, 1350,
          3.937, 1356, 3.149, 1368, 2.654, 1376, 3.365, 1379, 4.127, 1381,
          2.866, 1382, 2.558, 1383, 2.931, 1385, 3.277, 1387, 3.508, 1389,
          2.654, 1390, 2.931, 1393, 3.568, 1395, 2.38, 1396, 1.517, 1398, 3.74,
          1399, 5.793, 1400, 5.793, 1401, 2.998, 1402, 5.011, 1403, 5.011, 1404,
          3.399, 1405, 4.604, 1406, 3.399, 1407, 4.632, 1408, 3.399, 1409,
          3.399, 1410, 3.399, 1411, 5.011, 1412, 3.399, 1413, 2.38, 1414, 5.011,
          1415, 3.399, 1416, 2.734, 1417, 3.399, 1418, 3.399, 1419, 3.399, 1420,
          2.998, 1421, 3.399, 1422, 2.998, 1423, 3.399, 1424, 4.902, 1425,
          3.399, 1426, 4.166, 1427, 5.011, 1428, 4.42, 1429, 5.011, 1430, 5.011,
          1431, 5.583, 1432, 3.399, 1433, 3.314, 1434, 3.399, 1435, 3.399, 1436,
          3.399, 1437, 3.399, 1438, 4.166, 1439, 3.399, 1440, 3.399, 1441,
          5.011, 1442, 3.399, 1443, 3.399, 1444, 3.399, 1445, 3.399, 1446,
          3.399, 1447, 3.399, 1448, 2.998, 1449, 4.166, 1450, 2.38, 1451, 5.011,
          1452, 4.42, 1453, 6.568, 1454, 4.127, 1455, 5.011, 1456, 5.951, 1457,
          5.283, 1458, 3.399, 1459, 5.951, 1460, 5.793, 1461, 5.011, 1462,
          5.011, 1463, 5.951, 1464, 6.462, 1465, 5.011, 1466, 2.998, 1467,
          2.734, 1468, 2.734, 1469, 2.537, 1470, 4.031, 1471, 3.399, 1472,
          3.399, 1473, 5.011, 1474, 3.399, 1475, 3.399, 1476, 4.42, 1477, 3.399,
          1478, 3.399, 1479, 3.399, 1480, 3.399, 1481, 3.399, 1482, 2.734, 1483,
          2.998, 1484, 2.998, 1485, 2.998, 1486, 3.399, 1487, 2.998, 1488,
          3.399, 1489, 3.399, 1490, 3.399, 1491, 3.399, 1492, 3.399, 1493,
          3.004, 1494, 3.399, 1495, 2.734, 1496, 2.537, 1497, 7.003, 1498,
          3.399, 1499, 3.399, 1500, 2.734, 1501, 6.568, 1502, 3.399, 1503,
          2.998, 1504, 3.399, 1505, 3.399, 1506, 3.399, 1507, 2.734, 1508,
          3.399, 1509, 3.399, 1510, 3.399, 1511, 3.399, 1512, 3.399, 1513,
          5.011, 1514, 3.399, 1515, 5.011, 1516, 2.537, 1517, 3.399, 1518,
          3.399, 1519, 2.998, 1520, 2.136, 1521, 2.38, 1522, 2.998, 1523, 2.734,
          1524, 3.399, 1525, 3.399, 1526, 3.399, 1527, 2.734, 1528, 2.998, 1529,
          3.399, 1530, 2.734, 1531, 3.399, 1532, 2.734, 1533, 4.031, 1534,
          2.998, 1535, 2.734, 1536, 2.734, 1537, 3.399, 1538, 2.998, 1539,
          3.399, 1540, 3.399, 1541, 2.998, 1542, 3.399,
        ],
      ],
      ["title/interfaces/AuthResponse.html", [0, 0.042, 64, 1.844]],
      [
        "body/interfaces/AuthResponse.html",
        [
          0, 0.083, 1, 1.954, 2, 0.923, 3, 0.075, 4, 0.065, 5, 0.065, 6, 2.074,
          7, 0.055, 8, 0.34, 9, 2.678, 10, 0.549, 11, 0.104, 12, 0.009, 13,
          0.141, 14, 1.268, 15, 1.326, 16, 2.76, 17, 1.672, 18, 2.074, 19,
          2.829, 20, 2.981, 21, 2.258, 22, 0.268, 23, 1.173, 24, 2.269, 25,
          1.701, 26, 1.573, 27, 2.139, 28, 1.814, 29, 1.899, 30, 1.62, 31,
          1.419, 32, 2.325, 33, 3.551, 34, 2.139, 35, 2.139, 36, 1.561, 37,
          1.496, 38, 1.496, 39, 1.145, 40, 2.012, 41, 2.139, 42, 2.012, 43,
          2.139, 44, 2.139, 45, 1.353, 46, 2.76, 47, 1.355, 48, 3.41, 49, 2.139,
          50, 2.846, 51, 2.012, 52, 2.012, 53, 2.139, 54, 2.074, 55, 2.139, 56,
          0.817, 57, 1.574, 58, 2.074, 59, 1.954, 60, 1.954, 61, 1.954, 62,
          1.637, 63, 1.954, 64, 2.6, 65, 1.962, 66, 3.027, 67, 2.074, 68, 0.901,
          69, 0.923, 70, 1.954, 71, 1.954, 72, 2.389, 73, 2.041, 74, 2.678, 75,
          1.991, 76, 2.139, 77, 1.796, 78, 2.074, 79, 2.012, 80, 2.685, 81,
          1.954, 82, 2.074, 83, 1.846, 84, 1.355, 85, 2.012, 86, 1.796, 87,
          1.796, 88, 1.459, 89, 2.456, 90, 1.954, 91, 2.139, 92, 2.139, 93,
          2.139, 94, 2.139, 95, 0.006, 96, 0.006, 97, 0.75,
        ],
      ],
      ["title/interfaces/AuthResult.html", [0, 0.042, 1396, 2.018]],
      [
        "body/interfaces/AuthResult.html",
        [
          0, 0.076, 2, 1.216, 3, 0.099, 4, 0.086, 5, 0.086, 7, 0.072, 8, 0.405,
          10, 0.513, 11, 0.11, 12, 0.009, 13, 0.133, 14, 1.31, 17, 1.772, 22,
          0.213, 28, 1.769, 62, 1.95, 65, 2.17, 95, 0.008, 96, 0.008, 97, 0.893,
          103, 0.632, 130, 0.258, 1315, 3.11, 1376, 2.732, 1377, 4.419, 1378,
          4.836, 1379, 3.967, 1381, 3.07, 1382, 3.222, 1383, 3.389, 1387, 4.419,
          1389, 3.344, 1390, 3.389, 1392, 3.622, 1393, 5.067, 1394, 4.711, 1395,
          4.419, 1396, 3.389, 1397, 6.308,
        ],
      ],
      [
        "title/interfaces/AuthResult-1.html",
        [0, 0.035, 98, 1.047, 1396, 1.694],
      ],
      [
        "body/interfaces/AuthResult-1.html",
        [
          0, 0.078, 2, 1.194, 3, 0.097, 4, 0.084, 5, 0.084, 7, 0.071, 8, 0.4,
          10, 0.529, 11, 0.102, 12, 0.009, 13, 0.135, 14, 1.323, 17, 1.752, 22,
          0.209, 28, 1.346, 62, 1.928, 65, 2.209, 95, 0.008, 96, 0.008, 103,
          0.516, 130, 0.253, 133, 1.752, 1311, 3.053, 1315, 3.053, 1378, 4.916,
          1381, 3.141, 1382, 3.163, 1383, 3.352, 1389, 3.283, 1390, 3.352, 1392,
          3.556, 1396, 3.352, 1543, 3.894, 1544, 3.894, 1545, 3.413, 1546,
          2.602, 1547, 4.099, 1548, 3.894, 1549, 3.894, 1550, 3.894, 1551,
          3.413, 1552, 3.413, 1553, 3.715, 1554, 3.715, 1555, 3.413,
        ],
      ],
      ["title/injectables/AuthService.html", [753, 0.871, 1310, 2.711]],
      [
        "body/injectables/AuthService.html",
        [
          3, 0.045, 4, 0.039, 5, 0.093, 7, 0.032, 8, 0.234, 10, 0.498, 11,
          0.113, 12, 0.01, 13, 0.045, 14, 1.18, 17, 1.664, 22, 0.265, 23, 0.696,
          28, 1.304, 39, 0.68, 56, 0.485, 61, 2.447, 62, 1.664, 63, 2.447, 64,
          2.643, 65, 2.115, 66, 2.826, 68, 1.45, 73, 0.91, 75, 1.873, 95, 0.004,
          96, 0.004, 97, 0.923, 103, 0.539, 107, 0.316, 109, 1.01, 124, 1.367,
          130, 0.116, 133, 1.597, 134, 0.975, 135, 2.297, 145, 1.636, 161,
          2.018, 167, 2.412, 168, 1.16, 194, 1.896, 205, 3.056, 208, 2.131, 209,
          1.586, 211, 1.975, 258, 1.896, 259, 1.921, 310, 2.893, 320, 1.566,
          372, 2.412, 391, 1.401, 535, 2.249, 636, 1.549, 638, 1.758, 700,
          1.991, 743, 3.269, 744, 1.991, 753, 0.844, 754, 3.494, 755, 1.037,
          758, 0.864, 769, 1.346, 771, 1.512, 779, 3.066, 780, 1.683, 781,
          4.827, 813, 1.704, 818, 1.452, 820, 2.509, 824, 1.705, 825, 1.037,
          826, 1.01, 847, 1.991, 849, 2.897, 868, 6.496, 869, 3.864, 889, 3.864,
          943, 2.514, 944, 2.626, 1019, 2.248, 1032, 3.444, 1105, 3.74, 1218,
          1.881, 1248, 4.226, 1262, 4.718, 1270, 4.297, 1272, 3.066, 1275,
          3.269, 1276, 1.787, 1287, 4.297, 1310, 2.626, 1311, 2.957, 1315,
          2.957, 1331, 1.452, 1344, 3.269, 1345, 3.598, 1346, 3.066, 1348,
          3.269, 1357, 4.104, 1379, 3.771, 1382, 2.236, 1385, 2.412, 1433,
          4.528, 1438, 3.066, 1493, 1.705, 1500, 2.288, 1556, 2.509, 1557,
          4.712, 1558, 5.343, 1559, 5.343, 1560, 5.343, 1561, 4.381, 1562,
          6.002, 1563, 6.002, 1564, 4.381, 1565, 6.002, 1566, 6.002, 1567,
          6.002, 1568, 4.381, 1569, 6.002, 1570, 4.381, 1571, 4.381, 1572,
          3.864, 1573, 4.381, 1574, 4.381, 1575, 3.534, 1576, 4.381, 1577,
          4.381, 1578, 2.844, 1579, 3.524, 1580, 4.381, 1581, 2.844, 1582,
          2.844, 1583, 4.381, 1584, 2.844, 1585, 3.524, 1586, 2.844, 1587,
          4.712, 1588, 2.844, 1589, 4.201, 1590, 2.844, 1591, 4.381, 1592,
          2.844, 1593, 3.524, 1594, 2.844, 1595, 3.864, 1596, 2.844, 1597,
          2.844, 1598, 2.844, 1599, 3.864, 1600, 4.381, 1601, 2.844, 1602,
          5.294, 1603, 4.381, 1604, 2.844, 1605, 4.381, 1606, 4.381, 1607,
          2.844, 1608, 4.381, 1609, 4.381, 1610, 4.381, 1611, 2.844, 1612,
          3.864, 1613, 4.381, 1614, 4.381, 1615, 2.844, 1616, 4.381, 1617,
          2.844, 1618, 4.381, 1619, 2.844, 1620, 4.381, 1621, 4.381, 1622,
          2.844, 1623, 4.381, 1624, 2.844, 1625, 4.381, 1626, 2.844, 1627,
          3.269, 1628, 2.844, 1629, 4.381, 1630, 4.381, 1631, 2.844, 1632,
          1.881, 1633, 1.881, 1634, 2.844, 1635, 5.343, 1636, 2.844, 1637,
          2.844, 1638, 1.881, 1639, 2.844, 1640, 1.991, 1641, 2.844, 1642,
          7.133, 1643, 2.844, 1644, 5.343, 1645, 5.343, 1646, 2.844, 1647,
          2.844, 1648, 5.343, 1649, 4.287, 1650, 2.844, 1651, 2.844, 1652,
          2.844, 1653, 4.381, 1654, 4.381, 1655, 2.753, 1656, 4.381, 1657,
          4.381, 1658, 5.343, 1659, 6.002, 1660, 2.844, 1661, 2.844, 1662,
          4.381, 1663, 4.381, 1664, 2.844, 1665, 2.844, 1666, 2.844, 1667,
          2.844, 1668, 2.844, 1669, 2.844, 1670, 2.844, 1671, 2.844, 1672,
          2.844, 1673, 2.844, 1674, 2.844, 1675, 2.844, 1676, 4.381, 1677,
          2.844, 1678, 2.844, 1679, 2.844, 1680, 2.844, 1681, 4.381, 1682,
          2.844, 1683, 2.844, 1684, 2.844, 1685, 2.844, 1686, 2.844, 1687,
          2.844, 1688, 4.381, 1689, 2.844, 1690, 2.844, 1691, 2.844, 1692,
          2.844, 1693, 2.509, 1694, 2.844, 1695, 2.844, 1696, 2.844, 1697,
          2.844, 1698, 2.844, 1699, 4.381, 1700, 2.844, 1701, 2.844, 1702,
          2.844, 1703, 2.844, 1704, 2.844,
        ],
      ],
      [
        "title/injectables/AuthService-1.html",
        [98, 1.047, 753, 0.731, 1310, 2.275],
      ],
      [
        "body/injectables/AuthService-1.html",
        [
          3, 0.046, 4, 0.039, 5, 0.039, 7, 0.033, 8, 0.237, 10, 0.461, 11,
          0.105, 12, 0.01, 13, 0.046, 14, 1.185, 15, 0.877, 17, 1.676, 19,
          1.538, 20, 1.666, 22, 0.266, 62, 1.557, 65, 1.557, 68, 1.483, 69,
          1.26, 73, 1.941, 84, 1.257, 95, 0.005, 96, 0.005, 97, 0.811, 103,
          0.574, 107, 0.322, 109, 1.03, 111, 1.003, 130, 0.119, 133, 1.841, 134,
          1.203, 135, 2.291, 136, 1.954, 144, 3.021, 145, 1.816, 167, 2.449,
          168, 1.182, 194, 3.108, 203, 1.294, 209, 1.318, 211, 1.814, 258,
          3.108, 259, 2.872, 286, 2.203, 310, 1.294, 320, 1.597, 411, 2.794,
          516, 2.887, 535, 2.45, 636, 1.816, 638, 1.142, 700, 2.03, 753, 0.857,
          755, 1.057, 758, 0.877, 769, 1.317, 771, 1.329, 780, 1.53, 813, 1.998,
          825, 1.057, 826, 1.03, 891, 2.03, 1010, 0.928, 1032, 3.479, 1067,
          3.318, 1310, 2.665, 1311, 2.664, 1314, 3.883, 1331, 1.48, 1338, 3.528,
          1344, 2.164, 1345, 4.555, 1357, 3.635, 1381, 2.153, 1385, 2.449, 1405,
          3.81, 1413, 5.918, 1416, 5.961, 1424, 2.03, 1426, 2.03, 1431, 4.751,
          1433, 2.941, 1450, 3.112, 1457, 2.332, 1467, 2.332, 1468, 3.576, 1469,
          2.164, 1470, 5.55, 1482, 2.332, 1493, 1.738, 1520, 2.794, 1523, 2.332,
          1527, 2.332, 1528, 2.558, 1530, 2.332, 1532, 3.576, 1533, 3.576, 1535,
          3.576, 1536, 3.576, 1548, 3.81, 1549, 2.794, 1550, 2.794, 1551, 2.978,
          1552, 2.978, 1553, 3.242, 1554, 3.242, 1555, 2.978, 1575, 3.577, 1589,
          2.03, 1632, 1.918, 1633, 1.918, 1638, 2.941, 1649, 1.918, 1655, 1.822,
          1705, 2.558, 1706, 5.408, 1707, 3.785, 1708, 5.408, 1709, 6.539, 1710,
          3.576, 1711, 4.446, 1712, 6.063, 1713, 4.446, 1714, 3.576, 1715,
          6.063, 1716, 4.446, 1717, 2.9, 1718, 2.9, 1719, 6.539, 1720, 2.9,
          1721, 2.9, 1722, 4.446, 1723, 3.576, 1724, 5.408, 1725, 3.922, 1726,
          4.446, 1727, 2.9, 1728, 4.446, 1729, 4.446, 1730, 2.794, 1731, 5.408,
          1732, 2.9, 1733, 4.446, 1734, 3.576, 1735, 5.348, 1736, 4.446, 1737,
          2.9, 1738, 2.9, 1739, 4.446, 1740, 2.9, 1741, 2.9, 1742, 3.576, 1743,
          4.446, 1744, 4.446, 1745, 4.446, 1746, 4.446, 1747, 4.446, 1748,
          3.922, 1749, 4.446, 1750, 3.112, 1751, 2.9, 1752, 4.446, 1753, 2.9,
          1754, 4.83, 1755, 2.9, 1756, 2.9, 1757, 3.318, 1758, 2.9, 1759, 4.446,
          1760, 2.9, 1761, 2.9, 1762, 3.318, 1763, 2.9, 1764, 2.9, 1765, 3.922,
          1766, 2.9, 1767, 4.77, 1768, 4.446, 1769, 4.446, 1770, 2.9, 1771,
          1.822, 1772, 2.9, 1773, 2.332, 1774, 2.332, 1775, 2.9, 1776, 2.558,
          1777, 3.922, 1778, 3.922, 1779, 4.525, 1780, 4.036, 1781, 2.558, 1782,
          4.525, 1783, 2.9, 1784, 2.9, 1785, 4.88, 1786, 5.149, 1787, 2.9, 1788,
          2.9, 1789, 4.446, 1790, 4.446, 1791, 4.446, 1792, 5.408, 1793, 2.9,
          1794, 2.9, 1795, 2.9, 1796, 2.9, 1797, 4.446, 1798, 2.9, 1799, 2.558,
          1800, 2.9, 1801, 2.9, 1802, 2.9, 1803, 2.9, 1804, 2.558, 1805, 2.9,
          1806, 2.558, 1807, 2.9, 1808, 2.9, 1809, 2.9, 1810, 2.9, 1811, 2.9,
          1812, 2.9, 1813, 2.9, 1814, 2.9, 1815, 2.332, 1816, 2.9, 1817, 2.558,
          1818, 2.558, 1819, 2.9, 1820, 2.9, 1821, 2.9, 1822, 2.9, 1823, 2.9,
          1824, 2.558, 1825, 2.9, 1826, 2.558, 1827, 2.9, 1828, 2.9, 1829, 2.9,
          1830, 2.9, 1831, 2.9, 1832, 4.446, 1833, 2.9, 1834, 2.9, 1835, 2.558,
          1836, 5.408, 1837, 2.9, 1838, 3.922, 1839, 2.9, 1840, 2.03,
        ],
      ],
      ["title/interfaces/AuthSession.html", [0, 0.042, 1545, 2.49]],
      [
        "body/interfaces/AuthSession.html",
        [
          0, 0.078, 2, 1.171, 3, 0.096, 4, 0.082, 5, 0.082, 7, 0.069, 8, 0.396,
          10, 0.527, 11, 0.109, 12, 0.009, 13, 0.134, 14, 1.319, 17, 1.732, 22,
          0.205, 28, 1.74, 62, 1.905, 65, 2.197, 95, 0.008, 96, 0.008, 103,
          0.506, 130, 0.249, 133, 2.031, 1311, 4.11, 1315, 2.994, 1378, 4.899,
          1381, 3.129, 1382, 3.102, 1383, 3.312, 1389, 3.219, 1390, 3.312, 1392,
          3.487, 1396, 2.713, 1543, 3.819, 1544, 3.819, 1545, 4.087, 1546,
          2.552, 1547, 4.02, 1548, 3.819, 1549, 3.819, 1550, 3.819, 1551, 3.347,
          1552, 3.347, 1553, 3.644, 1554, 3.644, 1555, 3.347,
        ],
      ],
      ["title/injectables/AuthSessionUseCase.html", [753, 0.871, 926, 3.375]],
      [
        "body/injectables/AuthSessionUseCase.html",
        [
          3, 0.104, 4, 0.09, 5, 0.09, 7, 0.076, 11, 0.09, 12, 0.009, 13, 0.104,
          22, 0.223, 95, 0.008, 96, 0.008, 97, 0.778, 103, 0.65, 107, 0.734,
          130, 0.27, 134, 1.471, 136, 1.471, 538, 2.287, 753, 1.504, 755, 2.411,
          758, 1.541, 769, 1.203, 771, 1.274, 780, 1.305, 825, 2.411, 826,
          2.348, 926, 5.826, 1314, 3.707, 1338, 3.149, 1376, 3.378, 1546, 3.603,
          1841, 7.327, 1842, 5.833, 1843, 8.582, 1844, 3.964, 1845, 6.613, 1846,
          6.613, 1847, 4.155, 1848, 3.258, 1849, 5.319,
        ],
      ],
      ["title/injectables/AuthStateService.html", [753, 0.871, 1850, 3.165]],
      [
        "body/injectables/AuthStateService.html",
        [
          3, 0.08, 4, 0.069, 5, 0.069, 7, 0.058, 8, 0.355, 11, 0.09, 12, 0.01,
          13, 0.08, 14, 1.082, 22, 0.225, 65, 1.899, 95, 0.007, 96, 0.007, 97,
          0.783, 103, 0.554, 107, 0.567, 130, 0.209, 133, 1.979, 134, 1.138,
          135, 1.993, 136, 2.011, 145, 2.027, 194, 2.213, 209, 1.528, 258,
          2.213, 259, 2.13, 530, 2.637, 538, 1.768, 636, 1.942, 638, 2.012, 753,
          1.282, 755, 1.865, 758, 1.313, 769, 1.339, 771, 1.282, 780, 1.46, 813,
          2.137, 825, 1.865, 826, 1.815, 1311, 3.645, 1314, 3.302, 1338, 2.435,
          1376, 2.88, 1381, 2.363, 1413, 6.222, 1545, 4.315, 1546, 3.29, 1754,
          4.658, 1767, 7.481, 1771, 3.213, 1844, 3.065, 1848, 2.519, 1849,
          4.113, 1850, 4.658, 1851, 7.736, 1852, 4.51, 1853, 7.399, 1854, 7.836,
          1855, 6.912, 1856, 6.655, 1857, 6.655, 1858, 5.113, 1859, 5.113, 1860,
          6.655, 1861, 5.113, 1862, 8.329, 1863, 6.655, 1864, 5.113, 1865,
          6.655, 1866, 5.113, 1867, 5.87, 1868, 5.113, 1869, 6.655, 1870, 5.113,
          1871, 3.816, 1872, 6.655, 1873, 5.113, 1874, 5.113, 1875, 6.655,
        ],
      ],
      ["title/interfaces/AuthToken.html", [0, 0.042, 1393, 2.711]],
      [
        "body/interfaces/AuthToken.html",
        [
          0, 0.063, 2, 1.314, 3, 0.107, 4, 0.092, 5, 0.092, 7, 0.078, 8, 0.424,
          10, 0.522, 11, 0.114, 12, 0.009, 13, 0.107, 66, 3.434, 95, 0.008, 96,
          0.008, 517, 5.288, 1393, 4.766, 1538, 7.646, 1541, 7.646, 1876, 6.017,
          1877, 6.017,
        ],
      ],
      [
        "title/interceptors/AuthTokenInterceptor.html",
        [833, 3.165, 1878, 3.637],
      ],
      [
        "body/interceptors/AuthTokenInterceptor.html",
        [
          3, 0.087, 4, 0.075, 5, 0.075, 7, 0.063, 8, 0.374, 11, 0.075, 12, 0.01,
          13, 0.087, 22, 0.187, 39, 1.675, 56, 0.945, 65, 2.245, 69, 1.068, 95,
          0.007, 96, 0.007, 97, 0.652, 103, 0.693, 107, 0.615, 109, 1.968, 130,
          0.227, 132, 2.261, 134, 1.71, 135, 2.292, 136, 1.893, 145, 1.675, 149,
          3.66, 203, 2.474, 209, 1.286, 211, 1.357, 279, 2.555, 636, 1.675, 679,
          3.713, 753, 1.35, 758, 1.383, 769, 1.244, 771, 1.068, 775, 5.231, 780,
          1.094, 781, 4.233, 792, 4.46, 813, 1.843, 816, 4.138, 818, 2.83, 830,
          4.89, 833, 5.831, 847, 3.881, 850, 4.89, 891, 3.881, 892, 4.46, 1331,
          2.83, 1493, 3.324, 1575, 5.084, 1632, 3.667, 1633, 3.667, 1638, 4.636,
          1649, 3.667, 1655, 3.484, 1850, 5.654, 1879, 4.89, 1880, 7.348, 1881,
          4.89, 1882, 6.78, 1883, 7.01, 1884, 4.89, 1885, 7.124, 1886, 5.084,
          1887, 7.124, 1888, 5.544, 1889, 7.01, 1890, 5.544, 1891, 4.89, 1892,
          6.183, 1893, 5.544, 1894, 5.544, 1895, 4.138, 1896, 5.544, 1897, 7.01,
          1898, 5.544, 1899, 5.544, 1900, 5.544, 1901, 7.01, 1902, 7.01, 1903,
          7.01, 1904, 4.89, 1905, 4.89, 1906, 4.89, 1907, 5.544, 1908, 4.89,
          1909, 4.46, 1910, 5.544,
        ],
      ],
      ["title/interfaces/Award.html", [0, 0.042, 112, 2.841]],
      [
        "body/interfaces/Award.html",
        [
          0, 0.053, 2, 0.505, 3, 0.041, 4, 0.036, 5, 0.036, 7, 0.03, 8, 0.219,
          10, 0.502, 11, 0.069, 12, 0.01, 13, 0.041, 15, 0.667, 21, 1.586, 22,
          0.264, 23, 1.007, 25, 1.461, 26, 1.252, 30, 1.68, 31, 1.862, 32,
          0.957, 36, 1.882, 37, 1.174, 39, 1.492, 56, 1.256, 68, 1.508, 69,
          1.505, 84, 2.133, 88, 1.253, 95, 0.004, 96, 0.004, 98, 1.401, 99,
          1.735, 100, 3.532, 101, 5.018, 102, 4.77, 103, 0.422, 104, 0.457, 105,
          1.836, 106, 2.585, 107, 0.291, 108, 1.677, 109, 0.931, 110, 2.88, 111,
          0.907, 112, 4.632, 113, 5.28, 114, 3.742, 115, 2.88, 116, 2.88, 117,
          2.88, 118, 2.88, 119, 2.266, 120, 2.88, 121, 0.584, 122, 0.543, 123,
          1.102, 124, 0.819, 125, 0.584, 126, 0.598, 127, 1.836, 128, 1.39, 129,
          1.836, 130, 0.107, 131, 0.779, 132, 1.07, 133, 1.341, 134, 0.584, 135,
          1.865, 136, 0.915, 137, 1.836, 138, 1.649, 139, 1.171, 140, 2.88, 141,
          1.836, 142, 1.836, 143, 1.649, 144, 2.069, 145, 1.972, 146, 1.505,
          147, 1.209, 148, 2.361, 149, 1.959, 150, 3.303, 151, 2.585, 152,
          1.505, 153, 1.836, 154, 1.836, 155, 1.836, 156, 1.836, 157, 1.836,
          158, 1.836, 159, 1.735, 160, 2.487, 161, 1.896, 162, 2.88, 163, 1.171,
          164, 1.649, 165, 2.621, 166, 1.39, 167, 2.266, 168, 2.069, 169, 1.505,
          170, 3.189, 171, 1.836, 172, 1.836, 173, 4.023, 174, 1.836, 175,
          1.836, 176, 1.573, 177, 1.836, 178, 1.836, 179, 1.836, 180, 1.836,
          181, 1.836, 182, 1.836, 183, 1.836, 184, 1.836, 185, 1.836, 186, 2.88,
          187, 1.836, 188, 1.836, 189, 1.836, 190, 1.836, 191, 2.88, 192, 1.836,
          193, 1.649, 194, 1.135, 195, 1.735, 196, 1.836, 197, 4.162, 198,
          2.585, 199, 1.836, 200, 2.585, 201, 1.649, 202, 1.573, 203, 1.836,
          204, 1.505, 205, 1.171, 206, 1.649, 207, 1.649, 208, 2.216, 209,
          1.054, 210, 2.88, 211, 1.695, 212, 1.445, 213, 2.88, 214, 4.298, 215,
          1.836, 216, 3.922, 217, 3.189, 218, 1.649, 219, 1.649, 220, 1.735,
          221, 1.735, 222, 1.836, 223, 1.836, 224, 1.649, 225, 1.649, 226,
          1.649, 227, 2.541, 228, 2.585, 229, 1.836, 230, 1.836, 231, 2.585,
          232, 1.649, 233, 2.266, 234, 1.836, 235, 1.836, 236, 3.611, 237,
          3.611, 238, 3.445, 239, 3.801, 240, 3.922, 241, 1.649, 242, 1.836,
          243, 2.88, 244, 1.649, 245, 2.88, 246, 1.836, 247, 3.553, 248, 2.88,
          249, 1.836, 250, 1.445, 251, 1.836, 252, 1.836, 253, 1.735, 254,
          1.649, 255, 1.836, 256, 1.836, 257, 1.735, 258, 1.135, 259, 1.317,
          260, 1.649, 261, 3.445, 262, 3.611, 263, 1.836, 264, 1.836, 265,
          1.836, 266, 4.38, 267, 1.649, 268, 1.649, 269, 2.88, 270, 2.721, 271,
          2.88, 272, 1.836, 273, 1.649, 274, 1.649, 275, 1.836, 276, 3.303, 277,
          1.649, 278, 1.649, 279, 3.19, 280, 1.649, 281, 1.649, 282, 2.585, 283,
          1.573, 284, 1.649, 285, 2.88, 286, 1.71, 287, 1.649, 288, 3.189, 289,
          1.649, 290, 2.585, 291, 3.189, 292, 1.649, 293, 1.445, 294, 1.836,
          295, 3.189, 296, 1.649, 297, 3.611, 298, 3.611, 299, 3.553, 300,
          3.189, 301, 1.649, 302, 3.189, 303, 2.585, 304, 3.553, 305, 2.585,
          306, 1.649, 307, 3.553, 308, 2.585, 309, 1.836, 310, 1.171, 311,
          1.959, 312, 2.88, 313, 1.505, 314, 1.735, 315, 1.836, 316, 2.585, 317,
          1.649, 318, 1.649, 319, 1.649, 320, 1.445, 321, 1.836, 322, 1.836,
          323, 1.836, 324, 1.836, 325, 1.836, 326, 4.351, 327, 1.735, 328,
          2.027, 329, 1.649, 330, 2.585, 331, 2.585, 332, 1.649, 333, 1.735,
          334, 1.649, 335, 1.649, 336, 1.836, 337, 1.735, 338, 1.836, 339,
          1.836, 340, 1.836, 341, 2.88, 342, 1.836, 343, 1.585, 344, 4.023, 345,
          2.88, 346, 1.836, 347, 1.836, 348, 1.836, 349, 1.836, 350, 1.836, 351,
          1.836, 352, 1.836, 353, 1.836, 354, 1.836, 355, 1.836, 356, 1.836,
          357, 3.553, 358, 1.102, 359, 1.836, 360, 1.836, 361, 2.88, 362, 1.836,
          363, 1.836, 364, 1.836, 365, 1.836, 366, 1.836, 367, 1.836, 368,
          1.836, 369, 1.836, 370, 1.836, 371, 1.836, 372, 2.795, 373, 1.735,
          374, 1.836, 375, 2.721, 376, 1.836, 377, 2.179, 378, 1.836, 379,
          3.553, 380, 1.836, 381, 2.88, 382, 1.836, 383, 1.836, 384, 1.836, 385,
          1.836, 386, 1.505, 387, 1.836, 388, 2.1, 389, 1.836, 390, 1.836, 391,
          2.027, 392, 2.88, 393, 1.836, 394, 2.88, 395, 1.836, 396, 1.836, 397,
          1.836, 398, 1.836, 399, 1.836, 400, 1.836, 401, 1.836, 402, 1.836,
          403, 1.735, 404, 1.836, 405, 2.88, 406, 1.836, 407, 1.836, 408, 1.836,
          409, 1.836, 410, 1.445, 411, 1.649, 412, 1.836, 413, 1.836, 414,
          1.836, 415, 1.836, 416, 1.836, 417, 1.735, 418, 1.836, 419, 2.721,
          420, 1.836, 421, 1.836, 422, 1.836, 423, 1.735, 424, 1.836, 425,
          1.836, 426, 1.505, 427, 1.836, 428, 1.445, 429, 1.836, 430, 1.836,
          431, 2.88, 432, 3.611, 433, 3.611, 434, 4.023, 435, 4.023, 436, 4.023,
          437, 2.88, 438, 3.553, 439, 2.88, 440, 4.742, 441, 2.466, 442, 2.88,
          443, 2.466, 444, 4.023, 445, 4.023, 446, 2.721, 447, 1.836, 448,
          1.836, 449, 1.836, 450, 1.836, 451, 1.836, 452, 1.836, 453, 1.649,
          454, 1.836, 455, 1.836, 456, 1.836, 457, 1.836, 458, 3.611, 459,
          3.611, 460, 3.611, 461, 1.649, 462, 2.88, 463, 2.88, 464, 1.836, 465,
          1.735, 466, 1.836, 467, 1.836, 468, 1.836, 469, 1.836, 470, 1.836,
          471, 1.836, 472, 1.836, 473, 1.836, 474, 1.836, 475, 1.836, 476,
          1.836, 477, 1.836, 478, 1.836, 479, 1.836, 480, 1.836, 481, 1.735,
          482, 1.735, 483, 1.836, 484, 2.361, 485, 2.027, 486, 2.361, 487,
          1.836, 488, 2.361, 489, 1.505, 490, 1.573, 491, 1.836, 492, 1.735,
          493, 1.836, 494, 1.505, 495, 1.836, 496, 3.553, 497, 4.636, 498,
          1.836, 499, 1.836, 500, 1.836, 501, 1.836, 502, 1.836, 503, 3.553,
          504, 1.735, 505, 1.836, 506, 1.836, 507, 1.836, 508, 1.836, 509,
          1.836, 510, 1.836, 511, 1.836,
        ],
      ],
      ["title/components/Card.html", [104, 0.502, 967, 1.411]],
      [
        "body/components/Card.html",
        [
          3, 0.077, 4, 0.066, 5, 0.066, 7, 0.056, 10, 0.423, 11, 0.109, 12,
          0.009, 13, 0.077, 14, 0.715, 22, 0.218, 26, 0.854, 28, 1.061, 31,
          1.781, 52, 3.039, 95, 0.007, 96, 0.007, 103, 0.602, 104, 0.803, 107,
          0.542, 111, 1.69, 121, 2.052, 122, 1.912, 125, 1.437, 126, 1.472, 130,
          0.2, 131, 1.451, 227, 2.176, 521, 3.297, 523, 1.525, 530, 2.559, 636,
          1.913, 688, 2.999, 720, 1.977, 769, 1.233, 813, 2.106, 903, 5.976,
          913, 2.121, 914, 1.69, 915, 1.69, 916, 1.69, 918, 1.69, 920, 1.605,
          921, 2.378, 934, 2.121, 945, 1.919, 957, 1.69, 958, 2.234, 959, 2.234,
          960, 1.69, 961, 2.662, 962, 1.69, 963, 1.69, 964, 1.69, 965, 1.69,
          966, 1.69, 967, 2.658, 968, 2.502, 969, 2.465, 970, 1.69, 971, 1.605,
          972, 1.69, 973, 1.69, 974, 1.564, 975, 2.234, 976, 1.605, 977, 1.69,
          978, 1.605, 979, 1.69, 980, 1.605, 981, 1.69, 982, 1.69, 983, 1.605,
          984, 1.69, 985, 1.564, 986, 2.016, 987, 1.69, 988, 1.451, 989, 1.488,
          990, 1.69, 991, 1.69, 992, 1.488, 993, 1.525, 994, 1.967, 995, 1.69,
          996, 1.451, 997, 1.488, 998, 1.525, 999, 2.234, 1000, 1.488, 1001,
          1.525, 1002, 1.646, 1003, 1.69, 1004, 1.564, 1005, 1.564, 1006, 1.605,
          1007, 1.605, 1008, 1.69, 1009, 1.605, 1010, 1.564, 1011, 1.69, 1012,
          1.605, 1013, 1.69, 1014, 1.564, 1015, 2.176, 1016, 1.605, 1017, 1.69,
          1018, 1.605, 1019, 1.605, 1020, 1.646, 1021, 1.69, 1305, 2.121, 1306,
          2.121, 1307, 5.065, 1330, 1.605, 1911, 4.31, 1912, 4.522, 1913, 5.196,
          1914, 3.182, 1915, 6.383, 1916, 8.007, 1917, 4.887, 1918, 4.887, 1919,
          4.887, 1920, 4.887, 1921, 4.887, 1922, 3.42,
        ],
      ],
      ["title/components/CardPlayButton.html", [104, 0.502, 969, 1.447]],
      [
        "body/components/CardPlayButton.html",
        [
          3, 0.068, 4, 0.059, 5, 0.059, 7, 0.05, 8, 0.318, 10, 0.254, 11, 0.092,
          12, 0.009, 13, 0.068, 14, 0.636, 15, 1.105, 22, 0.201, 26, 1.191, 28,
          1.296, 45, 0.921, 56, 0.74, 68, 0.817, 95, 0.006, 96, 0.006, 103,
          0.497, 104, 0.756, 107, 0.482, 121, 2.036, 122, 1.897, 124, 1.356,
          125, 1.328, 126, 1.36, 130, 0.178, 131, 1.29, 133, 1.712, 163, 1.939,
          165, 1.824, 209, 1.346, 211, 1.063, 227, 2.01, 521, 3.046, 523, 1.356,
          528, 2.002, 530, 2.364, 539, 2.506, 564, 3.161, 572, 3.424, 636,
          1.754, 638, 1.532, 667, 3.911, 688, 2.486, 720, 2.339, 758, 1.178,
          769, 1.277, 780, 0.857, 813, 1.93, 913, 1.959, 914, 1.502, 915, 1.502,
          916, 1.502, 918, 1.502, 920, 1.426, 921, 2.284, 934, 1.959, 945,
          1.772, 957, 1.502, 958, 2.063, 959, 2.063, 960, 1.502, 961, 2.538,
          962, 1.502, 963, 1.502, 964, 1.502, 965, 1.502, 966, 1.502, 967,
          2.588, 968, 2.357, 969, 2.349, 970, 1.502, 971, 1.426, 972, 1.502,
          973, 1.502, 974, 1.391, 975, 2.063, 976, 1.426, 977, 1.502, 978,
          1.426, 979, 1.502, 980, 1.426, 981, 1.502, 982, 1.502, 983, 1.426,
          984, 1.502, 985, 1.391, 986, 1.863, 987, 1.502, 988, 1.29, 989, 1.323,
          990, 1.502, 991, 1.502, 992, 1.323, 993, 1.356, 994, 2.075, 995,
          1.502, 996, 1.29, 997, 1.323, 998, 1.356, 999, 2.063, 1000, 1.323,
          1001, 1.356, 1002, 1.464, 1003, 1.502, 1004, 1.391, 1005, 1.391, 1006,
          1.426, 1007, 1.426, 1008, 1.502, 1009, 1.426, 1010, 1.391, 1011,
          1.502, 1012, 1.426, 1013, 1.502, 1014, 1.391, 1015, 2.01, 1016, 1.426,
          1017, 1.502, 1018, 1.426, 1019, 1.426, 1020, 1.464, 1021, 1.502, 1305,
          1.959, 1306, 1.959, 1308, 3.754, 1330, 1.426, 1335, 2.068, 1914, 2.94,
          1922, 5.889, 1923, 7.42, 1924, 3.832, 1925, 5.967, 1926, 5.967, 1927,
          5.483, 1928, 3.479, 1929, 6.473, 1930, 3.947, 1931, 7.692, 1932,
          6.816, 1933, 6.816, 1934, 4.344, 1935, 7.692, 1936, 5.967, 1937,
          4.344, 1938, 4.344, 1939, 4.344, 1940, 4.344, 1941, 4.344, 1942,
          4.344, 1943, 4.344, 1944, 4.344, 1945, 4.344, 1946, 4.344, 1947,
          2.217, 1948, 4.211, 1949, 5.483, 1950, 6.816, 1951, 4.344, 1952,
          5.967, 1953, 5.967, 1954, 4.344, 1955, 2.73, 1956, 2.873, 1957, 3.75,
          1958, 4.8,
        ],
      ],
      ["title/injectables/CheckAuthUseCase.html", [753, 0.871, 1959, 3.637]],
      [
        "body/injectables/CheckAuthUseCase.html",
        [
          3, 0.097, 4, 0.084, 5, 0.084, 7, 0.071, 8, 0.4, 12, 0.009, 13, 0.097,
          95, 0.008, 96, 0.008, 103, 0.625, 107, 0.688, 130, 0.253, 133, 1.446,
          135, 2.177, 136, 1.798, 145, 1.795, 194, 3.25, 209, 1.541, 258, 3.25,
          530, 2.455, 636, 1.481, 753, 1.447, 755, 2.26, 758, 1.482, 769, 1.245,
          780, 1.482, 813, 1.63, 825, 2.26, 826, 2.2, 910, 4.985, 1311, 4.138,
          1314, 3.903, 1331, 3.163, 1338, 3.576, 1376, 3.496, 1379, 5.278, 1381,
          2.666, 1413, 5.257, 1546, 2.602, 1847, 3.894, 1848, 3.053, 1849,
          6.041, 1959, 6.041, 1960, 7.408, 1961, 5.466, 1962, 6.197, 1963,
          6.197, 1964, 7.51, 1965, 6.197, 1966, 6.197, 1967, 6.197,
        ],
      ],
      [
        "title/components/ConnectionTestComponent.html",
        [104, 0.502, 971, 1.485],
      ],
      [
        "body/components/ConnectionTestComponent.html",
        [
          3, 0.038, 4, 0.033, 5, 0.033, 7, 0.028, 8, 0.206, 10, 0.374, 11,
          0.087, 12, 0.01, 13, 0.038, 14, 0.355, 22, 0.216, 39, 1.315, 56,
          0.822, 68, 1.204, 70, 0.99, 72, 1.45, 73, 1.544, 75, 1.999, 84, 0.686,
          95, 0.004, 96, 0.004, 97, 0.455, 103, 0.401, 104, 0.535, 105, 2.153,
          107, 0.269, 108, 1.967, 109, 0.862, 121, 1.925, 122, 1.798, 123,
          1.624, 124, 1.718, 125, 0.861, 130, 0.099, 131, 0.721, 132, 1.577,
          133, 1.284, 134, 0.54, 139, 2.456, 145, 0.58, 149, 2.297, 160, 1.05,
          161, 2.536, 168, 0.99, 169, 1.393, 194, 1.05, 203, 1.083, 208, 1.713,
          211, 0.594, 227, 2.158, 258, 1.05, 259, 2.552, 276, 3.776, 286, 2.025,
          310, 1.727, 333, 3.191, 523, 0.758, 530, 2.381, 538, 0.839, 636,
          1.436, 638, 1.238, 668, 2.656, 679, 2.555, 720, 0.993, 758, 0.763,
          769, 1.136, 771, 0.745, 776, 5.612, 779, 4.894, 780, 1.086, 789,
          1.812, 813, 1.581, 831, 2.141, 843, 2.887, 844, 3.112, 845, 1.952,
          846, 1.952, 848, 1.699, 849, 4.614, 851, 3.88, 856, 2.141, 878, 6.162,
          910, 3.112, 913, 1.27, 914, 1.338, 915, 0.839, 916, 0.839, 918, 0.839,
          920, 0.797, 921, 1.785, 934, 1.27, 945, 1.149, 957, 0.839, 958, 1.338,
          959, 1.338, 960, 0.839, 961, 1.903, 962, 0.839, 963, 0.839, 964,
          0.839, 965, 0.839, 966, 0.839, 967, 1.208, 968, 1.668, 969, 0.777,
          970, 0.839, 971, 1.807, 972, 2.215, 973, 0.839, 974, 0.777, 975,
          1.338, 976, 0.797, 977, 0.839, 978, 0.797, 979, 0.839, 980, 0.797,
          981, 0.839, 982, 0.839, 983, 0.797, 984, 0.839, 985, 0.777, 986,
          1.208, 987, 0.839, 988, 0.721, 989, 0.739, 990, 0.839, 991, 0.839,
          992, 0.739, 993, 0.758, 994, 0.739, 995, 0.839, 996, 0.721, 997,
          0.739, 998, 0.758, 999, 1.338, 1000, 0.739, 1001, 0.758, 1002, 0.818,
          1003, 0.839, 1004, 0.777, 1005, 1.762, 1006, 0.797, 1007, 0.797, 1008,
          0.839, 1009, 0.797, 1010, 0.777, 1011, 0.839, 1012, 0.797, 1013,
          0.839, 1014, 0.777, 1015, 1.303, 1016, 0.797, 1017, 0.839, 1018,
          0.797, 1019, 0.797, 1020, 0.818, 1021, 0.839, 1022, 3.031, 1049,
          5.929, 1068, 5.067, 1069, 3.6, 1070, 2.892, 1072, 5.067, 1073, 3.191,
          1074, 5.499, 1082, 3.191, 1087, 5.336, 1088, 4.756, 1089, 4.813, 1092,
          5.362, 1096, 3.377, 1097, 4.236, 1103, 3.6, 1114, 4.236, 1116, 3.6,
          1118, 4.236, 1125, 6.757, 1128, 6.067, 1129, 3.031, 1130, 3.031, 1134,
          3.377, 1135, 4.78, 1136, 3.6, 1141, 4.813, 1144, 4.813, 1147, 3.6,
          1161, 1.699, 1262, 2.559, 1314, 2.153, 1338, 1.156, 1503, 2.141, 1530,
          1.952, 1627, 3.6, 1723, 3.88, 1886, 1.605, 1968, 6.638, 1969, 6.638,
          1970, 2.141, 1971, 4.824, 1972, 4.824, 1973, 4.824, 1974, 4.824, 1975,
          4.824, 1976, 6.757, 1977, 3.88, 1978, 4.824, 1979, 4.824, 1980, 4.824,
          1981, 4.824, 1982, 4.824, 1983, 4.824, 1984, 4.824, 1985, 4.824, 1986,
          4.824, 1987, 4.824, 1988, 4.824, 1989, 4.824, 1990, 8.196, 1991, 7.19,
          1992, 5.649, 1993, 4.824, 1994, 4.824, 1995, 4.824, 1996, 4.824, 1997,
          4.824, 1998, 4.824, 1999, 4.824, 2000, 6.405, 2001, 4.824, 2002,
          4.824, 2003, 4.824, 2004, 4.824, 2005, 4.824, 2006, 6.405, 2007,
          4.255, 2008, 6.405, 2009, 4.756, 2010, 5.207, 2011, 5.649, 2012, 3.88,
          2013, 4.255, 2014, 4.255, 2015, 4.824, 2016, 4.824, 2017, 4.854, 2018,
          6.405, 2019, 4.824, 2020, 4.824, 2021, 4.824, 2022, 4.824, 2023,
          4.255, 2024, 4.824, 2025, 5.503, 2026, 4.854, 2027, 3.869, 2028,
          2.427, 2029, 4.107, 2030, 3.869, 2031, 3.869, 2032, 2.427, 2033,
          2.427, 2034, 2.427, 2035, 3.869, 2036, 2.427, 2037, 3.869, 2038,
          3.869, 2039, 3.869, 2040, 2.427, 2041, 3.869, 2042, 2.427, 2043,
          2.427, 2044, 2.427, 2045, 2.427, 2046, 2.427, 2047, 2.427, 2048,
          6.011, 2049, 6.72, 2050, 6.405, 2051, 2.141, 2052, 6.72, 2053, 5.503,
          2054, 3.869, 2055, 2.427, 2056, 3.413, 2057, 3.413, 2058, 2.427, 2059,
          3.869, 2060, 2.141, 2061, 2.141, 2062, 2.427, 2063, 2.427, 2064,
          2.141, 2065, 2.141, 2066, 1.952, 2067, 2.427, 2068, 2.427, 2069,
          2.141, 2070, 1.952, 2071, 2.141, 2072, 2.427, 2073, 2.141, 2074,
          2.427, 2075, 2.427, 2076, 2.427,
        ],
      ],
      ["title/interfaces/CreatePlaylistDto.html", [0, 0.042, 59, 1.844]],
      [
        "body/interfaces/CreatePlaylistDto.html",
        [
          0, 0.083, 1, 1.933, 2, 0.913, 3, 0.074, 4, 0.064, 5, 0.064, 6, 2.051,
          7, 0.054, 8, 0.337, 9, 2.658, 10, 0.549, 11, 0.107, 12, 0.009, 13,
          0.141, 14, 1.16, 15, 1.322, 16, 2.739, 17, 1.663, 18, 2.051, 19, 2.82,
          20, 2.97, 21, 2.251, 22, 0.285, 23, 1.16, 24, 2.473, 25, 1.683, 26,
          1.571, 27, 2.115, 28, 1.861, 29, 1.878, 30, 1.613, 31, 1.408, 32,
          2.308, 33, 3.776, 34, 2.115, 35, 2.115, 36, 1.549, 37, 1.49, 38,
          1.479, 39, 1.133, 40, 1.99, 41, 2.115, 42, 1.99, 43, 2.115, 44, 2.115,
          45, 1.343, 46, 2.739, 47, 1.34, 48, 3.716, 49, 2.115, 50, 2.825, 51,
          1.99, 52, 1.99, 53, 2.115, 54, 2.051, 55, 2.115, 56, 0.808, 57, 1.556,
          58, 2.051, 59, 2.581, 60, 1.933, 61, 1.933, 62, 1.625, 63, 1.933, 64,
          1.933, 65, 1.217, 66, 1.878, 67, 2.051, 68, 0.891, 69, 0.913, 70,
          1.933, 71, 1.933, 72, 2.372, 73, 2.026, 74, 2.658, 75, 1.976, 76,
          2.115, 77, 1.776, 78, 2.051, 79, 1.99, 80, 2.671, 81, 1.933, 82,
          2.051, 83, 1.826, 84, 1.34, 85, 1.99, 86, 1.776, 87, 1.776, 88, 1.443,
          89, 2.438, 90, 1.933, 91, 2.115, 92, 2.115, 93, 2.115, 94, 2.115, 95,
          0.006, 96, 0.006, 97, 0.959,
        ],
      ],
      ["title/interfaces/CurrentMusic.html", [0, 0.042, 2077, 2.395]],
      [
        "body/interfaces/CurrentMusic.html",
        [
          0, 0.069, 2, 1.006, 3, 0.082, 4, 0.071, 5, 0.071, 7, 0.06, 8, 0.36,
          10, 0.498, 11, 0.101, 12, 0.01, 13, 0.082, 15, 1.211, 22, 0.228, 23,
          1.278, 24, 2.003, 26, 1.38, 28, 1.465, 30, 1.431, 31, 1.161, 36,
          1.278, 37, 1.729, 38, 2.332, 45, 1.9, 47, 2.369, 56, 0.89, 68, 0.982,
          69, 1.439, 95, 0.007, 96, 0.007, 103, 0.561, 104, 0.749, 107, 0.579,
          121, 1.161, 122, 1.081, 124, 2.105, 125, 1.161, 126, 1.189, 130,
          0.213, 133, 2.015, 163, 2.33, 165, 2.192, 209, 1.449, 211, 1.278, 311,
          3.212, 526, 1.956, 528, 2.405, 530, 2.961, 539, 2.832, 638, 1.732,
          688, 2.725, 720, 1.34, 986, 2.105, 988, 1.55, 989, 2.405, 1055, 4.461,
          1305, 1.714, 1306, 1.714, 1308, 3.714, 1330, 1.714, 1335, 2.486, 1730,
          3.28, 1928, 2.665, 1947, 2.665, 1948, 4.532, 1955, 3.28, 1956, 3.453,
          2077, 4.184, 2078, 3.28, 2079, 3.28, 2080, 3.654, 2081, 3.896, 2082,
          3.654, 2083, 3.896, 2084, 3.896, 2085, 5.224, 2086, 3.896, 2087,
          5.034, 2088, 4.461, 2089, 3.896, 2090, 3.896, 2091, 4.48, 2092, 3.896,
          2093, 3.896, 2094, 3.896, 2095, 3.896, 2096, 3.129, 2097, 3.654, 2098,
          2.486, 2099, 3.896,
        ],
      ],
      [
        "title/interfaces/CurrentMusic-1.html",
        [0, 0.035, 98, 1.047, 2077, 2.01],
      ],
      [
        "body/interfaces/CurrentMusic-1.html",
        [
          0, 0.067, 2, 0.921, 3, 0.075, 4, 0.065, 5, 0.065, 7, 0.055, 8, 0.339,
          10, 0.488, 11, 0.097, 12, 0.01, 13, 0.075, 15, 1.237, 22, 0.161, 23,
          1.559, 24, 1.42, 26, 1.389, 30, 1.351, 31, 1.417, 36, 1.559, 37,
          1.687, 38, 1.988, 45, 1.838, 47, 2.312, 56, 1.085, 69, 0.921, 95,
          0.006, 96, 0.006, 98, 1.32, 103, 0.662, 104, 0.707, 105, 2.842, 107,
          0.531, 121, 1.064, 122, 0.99, 125, 1.064, 126, 1.09, 130, 0.196, 132,
          1.95, 133, 2.002, 139, 2.135, 145, 1.143, 209, 0.878, 211, 1.559, 286,
          1.611, 343, 1.842, 485, 2.356, 526, 2.386, 528, 2.204, 530, 2.523,
          539, 3.006, 638, 2.225, 683, 2.441, 720, 1.635, 921, 2.428, 945,
          1.891, 992, 1.939, 993, 2.383, 994, 1.939, 996, 1.891, 997, 1.939,
          998, 1.988, 1000, 1.939, 1001, 2.235, 1305, 1.57, 1306, 1.57, 1330,
          1.57, 1640, 3.348, 1928, 2.441, 1947, 2.441, 1948, 4.108, 1957, 3.005,
          2077, 4.044, 2091, 4.292, 2096, 2.867, 2098, 3.032, 2100, 3.348, 2101,
          4.458, 2102, 4.212, 2103, 3.57, 2104, 4.753, 2105, 3.163, 2106, 3.163,
          2107, 3.005, 2108, 4.002, 2109, 3.57, 2110, 3.57, 2111, 3.57, 2112,
          3.57, 2113, 3.005, 2114, 3.005, 2115, 3.005, 2116, 2.867, 2117, 3.163,
          2118, 3.163, 2119, 4.212, 2120, 3.163, 2121, 3.57, 2122, 5.698, 2123,
          4.753, 2124, 5.012, 2125, 3.163, 2126, 3.348, 2127, 4.753, 2128,
          3.348, 2129, 3.57, 2130, 3.57, 2131, 3.57, 2132, 3.57, 2133, 3.163,
          2134, 3.57, 2135, 3.57, 2136, 3.57, 2137, 3.348, 2138, 3.57, 2139,
          3.57, 2140, 3.348, 2141, 3.57, 2142, 3.57, 2143, 5.344, 2144, 3.57,
          2145, 3.348, 2146, 3.57, 2147, 3.57, 2148, 3.57,
        ],
      ],
      ["title/components/CurrentSongComponent.html", [104, 0.502, 974, 1.447]],
      [
        "body/components/CurrentSongComponent.html",
        [
          0, 0.012, 3, 0.048, 4, 0.018, 5, 0.018, 7, 0.042, 8, 0.122, 10, 0.327,
          11, 0.085, 12, 0.01, 13, 0.02, 14, 0.19, 15, 0.371, 21, 1.281, 22,
          0.189, 26, 0.93, 28, 0.283, 30, 0.783, 31, 1.245, 36, 0.561, 37,
          1.503, 39, 1.685, 42, 3.374, 56, 0.853, 57, 1.213, 68, 1.206, 69,
          1.265, 75, 0.715, 84, 0.648, 95, 0.002, 96, 0.002, 97, 0.589, 98,
          1.382, 100, 2.074, 102, 1.315, 103, 0.255, 104, 0.34, 105, 1.369, 106,
          2.321, 107, 0.144, 108, 1.251, 109, 0.462, 111, 0.45, 114, 2.214, 121,
          1.74, 122, 1.63, 123, 0.962, 124, 0.958, 125, 0.51, 126, 0.522, 128,
          1.214, 130, 0.053, 131, 0.387, 132, 0.934, 133, 0.862, 134, 0.51, 135,
          1.926, 136, 0.822, 138, 1.928, 139, 1.649, 143, 1.44, 144, 2.381, 145,
          1.709, 146, 1.315, 147, 0.6, 148, 2.12, 149, 0.62, 150, 0.6, 151,
          0.818, 152, 0.747, 159, 0.861, 160, 0.563, 161, 0.6, 163, 0.581, 164,
          0.818, 165, 2.757, 166, 1.214, 167, 1.262, 168, 1.251, 169, 0.747,
          170, 2.321, 193, 1.44, 194, 0.563, 197, 0.818, 198, 1.44, 200, 1.44,
          201, 0.818, 202, 0.781, 203, 1.369, 204, 0.747, 205, 0.581, 206,
          0.818, 207, 0.818, 208, 0.813, 209, 0.772, 211, 1.37, 212, 0.717, 214,
          0.781, 216, 2.645, 217, 0.818, 218, 0.818, 219, 0.818, 224, 0.818,
          225, 0.818, 226, 0.818, 227, 2.941, 228, 0.818, 231, 1.928, 232,
          0.818, 233, 3.825, 236, 2.321, 237, 2.321, 238, 2.214, 240, 2.321,
          241, 0.818, 244, 0.818, 254, 0.818, 258, 0.563, 259, 0.733, 260,
          2.321, 261, 2.782, 262, 2.645, 266, 0.861, 268, 1.928, 273, 0.818,
          274, 0.818, 276, 3.201, 277, 0.818, 278, 0.818, 280, 0.818, 281,
          0.818, 282, 1.44, 283, 0.781, 284, 0.818, 286, 0.772, 287, 0.818, 288,
          1.928, 289, 0.818, 290, 1.44, 291, 0.818, 292, 1.44, 295, 1.928, 296,
          0.818, 297, 2.321, 298, 2.321, 300, 1.928, 301, 0.818, 302, 1.928,
          303, 1.44, 305, 1.44, 306, 0.818, 308, 1.44, 314, 1.515, 316, 1.44,
          317, 0.818, 318, 0.818, 319, 0.818, 320, 0.717, 326, 0.818, 332,
          0.818, 334, 1.928, 335, 1.928, 348, 1.649, 358, 0.962, 372, 3.215,
          377, 0.69, 432, 0.818, 433, 0.818, 453, 0.818, 458, 0.818, 459, 0.818,
          460, 0.818, 461, 0.818, 465, 1.515, 516, 2.21, 523, 0.406, 528, 0.6,
          530, 0.908, 535, 0.858, 547, 2.916, 636, 0.547, 638, 1.646, 667,
          4.047, 668, 3.083, 675, 0.911, 706, 0.911, 709, 2.029, 716, 3.249,
          719, 0.911, 720, 0.948, 722, 1.373, 723, 1.604, 724, 1.515, 749, 1.71,
          758, 0.452, 769, 1.086, 771, 0.965, 780, 1.323, 789, 2.757, 793,
          2.971, 813, 0.603, 828, 4.844, 854, 1.44, 903, 1.71, 913, 0.752, 914,
          0.45, 915, 0.45, 916, 0.45, 918, 0.45, 920, 0.428, 921, 1.581, 925,
          0.972, 934, 0.752, 936, 2.971, 942, 1.843, 945, 1.904, 957, 0.45, 958,
          0.792, 959, 0.792, 960, 0.45, 961, 1.277, 962, 0.45, 963, 0.45, 964,
          0.45, 965, 0.45, 966, 0.45, 967, 0.715, 968, 1.061, 969, 0.417, 970,
          0.45, 971, 0.428, 972, 0.45, 973, 0.45, 974, 1.182, 975, 0.792, 976,
          0.428, 977, 0.45, 978, 0.428, 979, 0.45, 980, 0.428, 981, 0.45, 982,
          0.45, 983, 0.428, 984, 0.45, 985, 0.417, 986, 0.715, 987, 0.45, 988,
          0.387, 989, 0.396, 990, 0.45, 991, 0.45, 992, 0.396, 993, 1.747, 994,
          1.413, 995, 0.45, 996, 0.387, 997, 0.396, 998, 0.406, 999, 0.792,
          1000, 0.396, 1001, 0.406, 1002, 0.439, 1003, 0.45, 1004, 0.417, 1005,
          0.417, 1006, 0.428, 1007, 0.428, 1008, 0.45, 1009, 0.428, 1010, 0.417,
          1011, 0.45, 1012, 0.428, 1013, 0.45, 1014, 0.417, 1015, 0.772, 1016,
          0.428, 1017, 0.45, 1018, 0.428, 1019, 0.428, 1020, 0.439, 1021, 0.45,
          1022, 0.818, 1023, 2.021, 1024, 2.021, 1025, 1.71, 1026, 2.021, 1031,
          1.149, 1032, 2.12, 1064, 0.972, 1066, 3.862, 1067, 1.71, 1068, 4.003,
          1069, 1.71, 1070, 4.949, 1072, 4.789, 1073, 4.003, 1074, 4.739, 1077,
          3.464, 1078, 5.74, 1079, 4.178, 1080, 2.947, 1081, 4.868, 1082, 2.029,
          1084, 2.021, 1085, 4.658, 1086, 2.757, 1087, 4.55, 1088, 3.862, 1089,
          3.922, 1090, 4.503, 1091, 4.178, 1092, 4.862, 1093, 4.9, 1094, 2.021,
          1095, 5.127, 1096, 4.937, 1097, 5.263, 1098, 3.386, 1099, 2.971, 1100,
          4.693, 1101, 4.658, 1102, 1.843, 1103, 2.29, 1105, 2.586, 1106, 1.149,
          1107, 3.07, 1108, 1.515, 1109, 1.047, 1110, 1.149, 1111, 2.706, 1112,
          2.147, 1114, 4.896, 1115, 3.142, 1116, 3.464, 1118, 3.521, 1119,
          2.468, 1121, 1.843, 1122, 4.087, 1123, 2.706, 1126, 0.972, 1127,
          1.047, 1129, 2.916, 1130, 1.928, 1131, 5.494, 1132, 6.4, 1133, 3.386,
          1134, 2.947, 1135, 3.464, 1136, 3.464, 1137, 3.464, 1138, 3.142, 1139,
          4.282, 1141, 1.44, 1142, 1.604, 1143, 2.147, 1144, 1.928, 1147, 2.29,
          1148, 1.149, 1151, 1.149, 1152, 1.149, 1154, 5.366, 1161, 2.586, 1163,
          4.028, 1164, 1.149, 1165, 1.047, 1169, 2.706, 1173, 1.604, 1181,
          1.047, 1186, 4.282, 1187, 1.149, 1188, 2.468, 1189, 2.757, 1190,
          1.047, 1191, 1.149, 1192, 2.021, 1194, 1.047, 1331, 0.665, 1352, 1.71,
          1454, 0.818, 1493, 0.781, 1496, 0.972, 1575, 2.029, 1579, 2.468, 1589,
          0.911, 1632, 0.861, 1633, 0.861, 1638, 0.861, 1649, 2.029, 1655,
          1.928, 1815, 1.047, 1838, 2.021, 1840, 4.236, 1895, 1.71, 1928, 1.169,
          1947, 2.556, 2007, 2.706, 2098, 2.78, 2102, 2.029, 2106, 1.515, 2113,
          0.818, 2125, 2.443, 2133, 2.443, 2149, 5.751, 2150, 0.911, 2151,
          2.706, 2152, 2.021, 2153, 2.147, 2154, 2.706, 2155, 3.258, 2156,
          3.258, 2157, 2.291, 2158, 3.258, 2159, 3.258, 2160, 3.258, 2161,
          4.417, 2162, 2.291, 2163, 1.302, 2164, 1.302, 2165, 1.302, 2166,
          1.302, 2167, 1.302, 2168, 1.302, 2169, 1.302, 2170, 1.302, 2171,
          1.302, 2172, 1.302, 2173, 2.021, 2174, 2.706, 2175, 1.302, 2176,
          1.302, 2177, 1.302, 2178, 1.302, 2179, 1.302, 2180, 1.302, 2181, 1.71,
          2182, 4.696, 2183, 1.149, 2184, 1.149, 2185, 2.021, 2186, 3.258, 2187,
          2.021, 2188, 2.021, 2189, 2.021, 2190, 1.149, 2191, 1.149, 2192,
          1.149, 2193, 3.713, 2194, 2.021, 2195, 1.149, 2196, 2.706, 2197,
          1.149, 2198, 2.706, 2199, 4.417, 2200, 4.938, 2201, 1.149, 2202,
          1.149, 2203, 1.149, 2204, 2.021, 2205, 1.149, 2206, 1.149, 2207,
          1.149, 2208, 1.149, 2209, 1.149, 2210, 1.149, 2211, 2.021, 2212,
          1.149, 2213, 1.149, 2214, 1.149, 2215, 2.706, 2216, 1.149, 2217,
          1.149, 2218, 1.843, 2219, 1.149, 2220, 1.149, 2221, 1.047, 2222,
          2.021, 2223, 2.706, 2224, 1.149, 2225, 1.149, 2226, 1.149, 2227,
          1.149, 2228, 2.021, 2229, 2.291, 2230, 2.291, 2231, 2.291, 2232,
          2.291, 2233, 2.291, 2234, 1.302, 2235, 2.291, 2236, 3.694, 2237,
          1.302, 2238, 3.694, 2239, 2.291, 2240, 4.641, 2241, 2.291, 2242,
          2.291, 2243, 2.291, 2244, 2.291, 2245, 3.068, 2246, 2.291, 2247,
          2.291, 2248, 1.302, 2249, 2.291, 2250, 1.302, 2251, 2.291, 2252,
          2.291, 2253, 1.302, 2254, 2.291, 2255, 2.291, 2256, 2.291, 2257,
          2.291, 2258, 2.291, 2259, 2.291, 2260, 2.291, 2261, 2.291, 2262,
          2.291, 2263, 2.291, 2264, 2.291, 2265, 2.291, 2266, 5.324, 2267,
          3.694, 2268, 2.291, 2269, 4.641, 2270, 3.694, 2271, 2.291, 2272,
          2.291, 2273, 2.291, 2274, 2.291, 2275, 3.694, 2276, 2.291, 2277,
          2.291, 2278, 2.291, 2279, 2.291, 2280, 2.291, 2281, 2.291, 2282,
          2.291, 2283, 2.291, 2284, 2.291, 2285, 2.291, 2286, 2.291, 2287,
          2.291, 2288, 2.291, 2289, 2.291, 2290, 2.291, 2291, 2.291, 2292,
          1.302, 2293, 2.291, 2294, 2.291, 2295, 2.291, 2296, 3.694, 2297,
          2.291, 2298, 2.291, 2299, 2.291, 2300, 2.291, 2301, 2.291, 2302,
          2.291, 2303, 2.021, 2304, 4.641, 2305, 4.641, 2306, 5.281, 2307,
          3.068, 2308, 3.973, 2309, 3.068, 2310, 2.021, 2311, 2.291, 2312,
          3.738, 2313, 3.694, 2314, 1.302, 2315, 1.302, 2316, 2.971, 2317, 7.15,
          2318, 2.021, 2319, 2.021, 2320, 1.302, 2321, 2.291, 2322, 4.094, 2323,
          3.694, 2324, 4.209, 2325, 1.302, 2326, 6.704, 2327, 2.291, 2328,
          2.291, 2329, 1.302, 2330, 1.302, 2331, 1.302, 2332, 5.598, 2333,
          4.209, 2334, 2.291, 2335, 2.291, 2336, 2.291, 2337, 1.302, 2338,
          2.291, 2339, 1.302, 2340, 3.068, 2341, 3.068, 2342, 2.291, 2343,
          1.149, 2344, 2.706, 2345, 3.068, 2346, 3.068, 2347, 3.258, 2348,
          3.258, 2349, 4.9, 2350, 4.094, 2351, 1.149, 2352, 3.694, 2353, 1.302,
          2354, 1.302, 2355, 1.302, 2356, 2.291, 2357, 1.302, 2358, 1.302, 2359,
          2.291, 2360, 2.291, 2361, 2.291, 2362, 3.733, 2363, 4.094, 2364,
          4.209, 2365, 1.302, 2366, 3.068, 2367, 1.302, 2368, 1.302, 2369,
          1.302, 2370, 1.302, 2371, 1.149, 2372, 1.302, 2373, 1.302, 2374,
          2.291, 2375, 2.291, 2376, 1.302, 2377, 1.302, 2378, 2.29, 2379, 2.291,
          2380, 1.302, 2381, 1.302, 2382, 1.047, 2383, 3.068, 2384, 1.302, 2385,
          2.291, 2386, 2.291, 2387, 2.021, 2388, 1.302, 2389, 1.302, 2390,
          3.068, 2391, 1.149, 2392, 3.258, 2393, 1.302, 2394, 2.291, 2395,
          1.149, 2396, 0.972, 2397, 2.29, 2398, 1.302, 2399, 1.047, 2400, 1.302,
          2401, 1.302, 2402, 1.302, 2403, 5.15, 2404, 2.291, 2405, 1.302, 2406,
          1.149, 2407, 2.291, 2408, 3.694, 2409, 1.302, 2410, 2.291, 2411,
          2.291, 2412, 1.149, 2413, 1.302, 2414, 1.302, 2415, 2.291, 2416,
          1.149, 2417, 1.302, 2418, 1.302, 2419, 1.302, 2420, 1.302, 2421,
          1.149, 2422, 1.149, 2423, 1.302, 2424, 1.302, 2425, 1.302, 2426,
          1.302, 2427, 1.843, 2428, 1.302, 2429, 1.302, 2430, 1.047, 2431,
          1.302, 2432, 1.149, 2433, 2.291, 2434, 1.302, 2435, 1.302, 2436,
          1.302, 2437, 2.706, 2438, 1.302, 2439, 1.302, 2440, 1.302, 2441,
          2.291, 2442, 2.291, 2443, 2.291, 2444, 1.302, 2445, 1.302, 2446,
          1.302, 2447, 1.302, 2448, 1.302, 2449, 1.302, 2450, 1.302, 2451,
          1.302, 2452, 2.291, 2453, 3.068, 2454, 1.302, 2455, 1.302, 2456,
          1.302, 2457, 1.302,
        ],
      ],
      ["title/components/ExploreComponent.html", [104, 0.502, 976, 1.485]],
      [
        "body/components/ExploreComponent.html",
        [
          3, 0.081, 4, 0.07, 5, 0.07, 7, 0.059, 8, 0.357, 11, 0.07, 12, 0.009,
          13, 0.081, 14, 0.756, 22, 0.226, 29, 2.947, 88, 2.04, 95, 0.007, 96,
          0.007, 103, 0.619, 104, 0.825, 107, 0.574, 108, 3.032, 109, 1.835,
          121, 2.06, 122, 1.919, 123, 2.814, 124, 2.092, 125, 1.491, 126, 1.527,
          130, 0.211, 131, 1.535, 134, 1.655, 328, 3.302, 329, 4.211, 330,
          4.211, 331, 4.211, 388, 3.421, 423, 4.433, 521, 3.421, 523, 1.614,
          636, 1.235, 720, 1.721, 769, 1.032, 813, 1.359, 913, 2.201, 914,
          1.787, 915, 1.787, 916, 1.787, 918, 1.787, 920, 1.697, 921, 2.421,
          934, 2.201, 945, 1.991, 954, 5.912, 957, 1.787, 958, 2.318, 959,
          2.318, 960, 1.787, 961, 2.721, 962, 1.787, 963, 1.787, 964, 1.787,
          965, 1.787, 966, 1.787, 967, 2.092, 968, 2.572, 969, 1.655, 970,
          1.787, 971, 1.697, 972, 1.787, 973, 1.787, 974, 1.655, 975, 2.318,
          976, 2.584, 977, 1.787, 978, 1.697, 979, 1.787, 980, 1.697, 981,
          1.787, 982, 1.787, 983, 1.697, 984, 1.787, 985, 2.519, 986, 2.092,
          987, 1.787, 988, 1.535, 989, 2.04, 990, 1.787, 991, 1.787, 992, 1.574,
          993, 1.614, 994, 1.574, 995, 1.787, 996, 1.535, 997, 1.574, 998,
          1.614, 999, 2.318, 1000, 1.574, 1001, 1.614, 1002, 1.742, 1003, 1.787,
          1004, 1.655, 1005, 1.655, 1006, 1.697, 1007, 1.697, 1008, 1.787, 1009,
          1.697, 1010, 1.655, 1011, 1.787, 1012, 1.697, 1013, 1.787, 1014,
          1.655, 1015, 2.258, 1016, 1.697, 1017, 1.787, 1018, 1.697, 1019,
          1.697, 1020, 1.742, 1021, 1.787, 2458, 4.559, 2459, 5.912, 2460,
          6.702, 2461, 6.702, 2462, 6.702, 2463, 5.391, 2464, 5.912, 2465,
          4.559, 2466, 3.618, 2467, 6.702,
        ],
      ],
      ["title/components/Greeting.html", [104, 0.502, 978, 1.485]],
      [
        "body/components/Greeting.html",
        [
          3, 0.081, 4, 0.07, 5, 0.07, 7, 0.059, 8, 0.356, 10, 0.301, 11, 0.07,
          12, 0.009, 13, 0.081, 14, 0.753, 22, 0.226, 95, 0.007, 96, 0.007, 103,
          0.428, 104, 0.824, 105, 3.312, 107, 0.571, 121, 2.059, 122, 1.918,
          125, 1.145, 126, 1.523, 130, 0.21, 131, 1.529, 132, 2.725, 135, 1.999,
          139, 3.506, 145, 1.597, 517, 3.234, 521, 3.411, 523, 1.607, 535,
          1.928, 636, 1.23, 638, 2.017, 720, 1.716, 758, 1.319, 769, 1.143, 780,
          1.319, 813, 1.353, 913, 2.194, 914, 1.78, 915, 1.78, 916, 1.78, 918,
          1.78, 920, 1.69, 921, 2.418, 934, 2.194, 945, 1.985, 957, 1.78, 958,
          2.311, 959, 2.311, 960, 1.78, 961, 2.716, 962, 1.78, 963, 1.78, 964,
          1.78, 965, 1.78, 966, 1.78, 967, 2.086, 968, 2.566, 969, 1.647, 970,
          1.78, 971, 1.69, 972, 1.78, 973, 1.78, 974, 1.647, 975, 2.311, 976,
          1.69, 977, 1.78, 978, 2.904, 979, 1.78, 980, 1.69, 981, 1.78, 982,
          1.78, 983, 1.69, 984, 1.78, 985, 1.647, 986, 2.086, 987, 1.78, 988,
          1.529, 989, 1.567, 990, 1.78, 991, 1.78, 992, 1.567, 993, 1.607, 994,
          1.567, 995, 1.78, 996, 1.529, 997, 1.567, 998, 1.607, 999, 2.311,
          1000, 1.567, 1001, 1.607, 1002, 1.734, 1003, 1.78, 1004, 1.647, 1005,
          1.647, 1006, 1.69, 1007, 1.69, 1008, 1.78, 1009, 1.69, 1010, 1.647,
          1011, 1.78, 1012, 1.69, 1013, 1.78, 1014, 1.647, 1015, 2.252, 1016,
          1.69, 1017, 1.78, 1018, 1.69, 1019, 1.69, 1020, 1.734, 1021, 1.78,
          1305, 2.194, 1306, 2.194, 1330, 1.69, 2181, 3.841, 2468, 4.54, 2469,
          6.683, 2470, 6.683, 2471, 7.856, 2472, 5.147, 2473, 5.147, 2474,
          5.147, 2475, 5.147, 2476, 6.683, 2477, 5.147,
        ],
      ],
      ["title/components/HomeComponent.html", [104, 0.502, 980, 1.485]],
      [
        "body/components/HomeComponent.html",
        [
          3, 0.068, 4, 0.059, 5, 0.059, 7, 0.049, 8, 0.317, 11, 0.059, 12,
          0.009, 13, 0.068, 14, 0.633, 15, 1.342, 22, 0.201, 31, 1.842, 45,
          1.262, 56, 1.159, 57, 1.42, 95, 0.006, 96, 0.006, 98, 1.642, 100,
          4.08, 103, 0.661, 104, 0.755, 107, 0.48, 108, 2.773, 109, 1.535, 121,
          2.035, 122, 1.897, 123, 2.498, 124, 1.857, 125, 1.323, 126, 1.355,
          130, 0.177, 131, 1.284, 134, 1.513, 208, 2.112, 328, 2.931, 358,
          2.498, 388, 3.036, 417, 3.935, 440, 3.935, 485, 2.931, 486, 3.413,
          488, 3.413, 489, 3.413, 521, 3.036, 523, 1.35, 525, 2.381, 526, 3.103,
          539, 1.816, 542, 4.164, 554, 3.151, 557, 4.44, 564, 3.151, 565, 4.164,
          636, 1.033, 712, 4.164, 720, 1.527, 726, 4.44, 769, 0.916, 813, 1.137,
          913, 1.953, 914, 1.495, 915, 1.495, 916, 1.495, 918, 1.495, 920, 1.42,
          921, 2.281, 934, 1.953, 945, 1.767, 957, 1.495, 958, 2.057, 959,
          2.057, 960, 1.495, 961, 2.533, 962, 1.495, 963, 1.495, 964, 1.495,
          965, 1.495, 966, 1.495, 967, 2.477, 968, 2.351, 969, 1.384, 970,
          1.495, 971, 1.42, 972, 1.495, 973, 1.495, 974, 1.384, 975, 2.057, 976,
          1.42, 977, 1.495, 978, 2.405, 979, 1.495, 980, 2.405, 981, 1.495, 982,
          1.495, 983, 1.42, 984, 1.495, 985, 2.345, 986, 1.857, 987, 1.495, 988,
          1.284, 989, 1.811, 990, 1.495, 991, 1.495, 992, 1.317, 993, 1.35, 994,
          1.317, 995, 1.495, 996, 1.284, 997, 1.317, 998, 1.35, 999, 2.057,
          1000, 1.317, 1001, 1.35, 1002, 1.457, 1003, 1.495, 1004, 2.345, 1005,
          2.177, 1006, 2.233, 1007, 1.42, 1008, 1.495, 1009, 1.42, 1010, 1.384,
          1011, 1.495, 1012, 1.42, 1013, 1.495, 1014, 1.384, 1015, 2.004, 1016,
          1.42, 1017, 1.495, 1018, 1.42, 1019, 1.42, 1020, 1.457, 1021, 1.495,
          1325, 4.785, 1341, 4.785, 1350, 3.566, 1352, 4.44, 1454, 2.717, 2098,
          2.832, 2116, 3.566, 2463, 4.785, 2465, 3.814, 2466, 3.027, 2478,
          3.814, 2479, 5.949, 2480, 5.949, 2481, 7.68, 2482, 4.324, 2483, 4.785,
          2484, 4.785, 2485, 5.949, 2486, 5.949, 2487, 5.949, 2488, 5.949, 2489,
          5.949, 2490, 5.949, 2491, 5.949, 2492, 5.247, 2493, 5.949, 2494,
          5.949, 2495, 5.949, 2496, 5.949, 2497, 5.949, 2498, 5.949, 2499,
          5.949, 2500, 5.949, 2501, 5.949, 2502, 5.949, 2503, 5.949, 2504,
          4.324, 2505, 4.324, 2506, 4.324, 2507, 4.324, 2508, 3.227, 2509,
          5.949, 2510, 5.949, 2511, 7.324, 2512, 5.949, 2513, 5.949, 2514,
          5.949, 2515, 5.949,
        ],
      ],
      [
        "title/interceptors/HttpErrorInterceptor.html",
        [1878, 3.637, 2516, 3.375],
      ],
      [
        "body/interceptors/HttpErrorInterceptor.html",
        [
          3, 0.071, 4, 0.061, 5, 0.061, 7, 0.051, 8, 0.325, 11, 0.094, 12, 0.01,
          13, 0.071, 22, 0.234, 39, 1.074, 65, 1.781, 69, 0.865, 75, 1.402, 95,
          0.006, 96, 0.006, 97, 0.816, 103, 0.668, 107, 0.499, 109, 1.595, 130,
          0.184, 132, 1.832, 134, 0.999, 135, 2.163, 136, 1.656, 145, 1.658,
          161, 2.07, 168, 1.832, 176, 2.693, 208, 2.763, 209, 1.507, 211, 1.494,
          214, 2.693, 257, 2.971, 259, 2.57, 310, 2.725, 348, 3.096, 372, 3.362,
          391, 2.213, 535, 2.599, 538, 1.553, 630, 3.145, 632, 5.85, 636, 1.459,
          660, 4.588, 679, 2.38, 753, 1.176, 758, 1.205, 769, 1.147, 771, 1.336,
          775, 5.554, 780, 1.205, 781, 4.286, 813, 1.181, 816, 3.353, 817,
          6.564, 818, 2.293, 819, 3.963, 821, 3.963, 835, 7.055, 836, 3.963,
          837, 3.145, 838, 5.579, 839, 5.386, 840, 3.963, 841, 3.963, 842,
          3.963, 844, 4.911, 847, 4.274, 851, 6.722, 852, 3.963, 853, 3.963,
          854, 2.823, 855, 3.963, 858, 3.963, 891, 3.145, 939, 2.971, 1262,
          2.971, 1331, 2.293, 1345, 4.158, 1376, 2.642, 1449, 3.145, 1454,
          2.823, 1495, 3.614, 1522, 6.564, 1546, 3.125, 1575, 4.588, 1595,
          3.963, 1632, 2.971, 1633, 2.971, 1638, 4.039, 1649, 2.971, 1655,
          2.823, 1742, 5.579, 1844, 2.693, 1848, 2.213, 1867, 3.963, 1871,
          3.353, 1879, 3.963, 1882, 6.118, 1884, 3.963, 1885, 7.244, 1886,
          5.432, 1887, 7.244, 1891, 3.963, 1892, 5.386, 1895, 3.353, 1905,
          3.963, 1906, 3.963, 1908, 3.963, 1909, 4.911, 1976, 3.963, 2064,
          3.963, 2073, 3.963, 2437, 5.386, 2516, 4.557, 2517, 6.865, 2518,
          3.963, 2519, 6.936, 2520, 6.106, 2521, 4.493, 2522, 4.493, 2523,
          4.493, 2524, 6.106, 2525, 4.493, 2526, 4.493, 2527, 4.493, 2528,
          6.106, 2529, 6.106, 2530, 4.493, 2531, 4.493, 2532, 4.493, 2533,
          6.106, 2534, 4.493, 2535, 4.493, 2536, 4.493, 2537, 3.963, 2538,
          4.493, 2539, 4.493, 2540, 4.493, 2541, 4.493, 2542, 4.493, 2543,
          4.493, 2544, 4.493, 2545, 4.493, 2546, 4.493, 2547, 4.493, 2548,
          4.493, 2549, 4.493, 2550, 4.493, 2551, 4.493, 2552, 4.493, 2553,
          4.493, 2554, 4.493, 2555, 4.493, 2556, 4.493, 2557, 4.493, 2558,
          6.936, 2559, 6.106, 2560, 6.106, 2561, 4.493, 2562, 4.493, 2563,
          4.493, 2564, 4.493, 2565, 4.493, 2566, 4.493,
        ],
      ],
      ["title/classes/IAuthRepository.html", [130, 0.185, 1546, 1.899]],
      [
        "body/classes/IAuthRepository.html",
        [
          0, 0.074, 3, 0.085, 4, 0.073, 5, 0.073, 7, 0.062, 10, 0.518, 11,
          0.109, 12, 0.009, 13, 0.13, 14, 1.21, 17, 1.773, 22, 0.279, 28, 1.175,
          62, 1.772, 65, 1.772, 95, 0.007, 96, 0.007, 97, 0.942, 103, 0.45, 130,
          0.221, 133, 1.611, 758, 1.362, 769, 1.324, 771, 1.542, 780, 1.696,
          943, 3.96, 944, 4.138, 1311, 2.666, 1315, 3.944, 1354, 2.98, 1378,
          5.071, 1381, 3.208, 1382, 3.523, 1383, 3.573, 1385, 3.801, 1389,
          3.656, 1390, 3.573, 1392, 3.105, 1396, 2.415, 1543, 5.467, 1544, 3.4,
          1545, 2.98, 1546, 2.898, 1547, 5.295, 1548, 5.03, 1549, 4.337, 1550,
          4.337, 1551, 4.185, 1552, 4.185, 1553, 4.556, 1554, 4.556, 1555,
          4.185, 1710, 5.552, 1714, 5.552, 1750, 3.788, 2567, 5.411, 2568,
          5.411, 2569, 5.411, 2570, 5.411, 2571, 5.411, 2572, 5.411, 2573,
          5.411,
        ],
      ],
      ["title/classes/IAuthService.html", [130, 0.185, 2574, 3.637]],
      [
        "body/classes/IAuthService.html",
        [
          3, 0.097, 4, 0.084, 5, 0.084, 7, 0.071, 11, 0.084, 12, 0.009, 13,
          0.097, 22, 0.209, 28, 1.631, 95, 0.008, 96, 0.008, 97, 0.729, 103,
          0.516, 130, 0.253, 133, 1.96, 638, 2.156, 758, 1.482, 769, 1.325, 771,
          1.194, 780, 1.698, 1311, 4.138, 1354, 3.413, 1378, 5.076, 1381, 2.666,
          1413, 5.257, 1543, 5.495, 1545, 4.737, 1799, 6.624, 1848, 3.053, 1855,
          7.408, 2128, 4.338, 2574, 6.041, 2575, 5.466, 2576, 8.399, 2577,
          8.399, 2578, 6.197, 2579, 6.197, 2580, 6.197, 2581, 6.197, 2582, 7.51,
          2583, 6.197, 2584, 6.197,
        ],
      ],
      ["title/components/LoginComponent.html", [104, 0.502, 983, 1.485]],
      [
        "body/components/LoginComponent.html",
        [
          3, 0.051, 4, 0.044, 5, 0.044, 7, 0.037, 8, 0.259, 11, 0.066, 12, 0.01,
          13, 0.051, 14, 0.478, 17, 1.356, 22, 0.196, 62, 1.249, 68, 1.093, 84,
          0.924, 95, 0.005, 96, 0.005, 97, 0.384, 98, 0.901, 103, 0.665, 104,
          0.645, 107, 0.362, 108, 2.37, 109, 1.159, 111, 1.129, 121, 1.988, 122,
          1.854, 123, 2.042, 124, 1.518, 125, 1.082, 126, 1.108, 128, 2.576,
          130, 0.134, 131, 0.97, 135, 2.213, 136, 1.828, 145, 0.78, 165, 2.441,
          194, 1.413, 209, 0.599, 227, 2.52, 258, 1.413, 259, 2.723, 276, 2.967,
          286, 2.589, 343, 1.874, 377, 2.576, 446, 3.217, 514, 3.845, 515,
          1.958, 516, 3.067, 523, 1.019, 534, 4.555, 636, 1.787, 638, 1.854,
          667, 1.874, 668, 1.798, 683, 1.667, 720, 1.249, 722, 2.916, 758, 0.96,
          763, 3.63, 769, 1.279, 771, 0.629, 780, 1.425, 799, 3.63, 813, 1.967,
          828, 2.16, 837, 2.286, 848, 3.405, 913, 1.597, 914, 1.129, 915, 1.129,
          916, 1.129, 918, 1.129, 920, 1.072, 921, 2.045, 934, 1.597, 939, 4.26,
          943, 4.507, 945, 1.445, 952, 3.913, 957, 1.129, 958, 1.682, 959,
          1.682, 960, 1.129, 961, 2.227, 962, 1.129, 963, 1.129, 964, 1.129,
          965, 1.129, 966, 1.129, 967, 1.518, 968, 2.01, 969, 1.045, 970, 1.129,
          971, 1.072, 972, 1.129, 973, 1.129, 974, 1.045, 975, 1.682, 976,
          1.072, 977, 1.129, 978, 1.072, 979, 1.129, 980, 1.072, 981, 1.129,
          982, 1.129, 983, 2.115, 984, 1.129, 985, 1.045, 986, 1.518, 987,
          1.129, 988, 0.97, 989, 0.994, 990, 1.129, 991, 1.129, 992, 0.994, 993,
          1.019, 994, 0.994, 995, 1.129, 996, 0.97, 997, 0.994, 998, 1.019, 999,
          1.682, 1000, 0.994, 1001, 1.019, 1002, 1.1, 1003, 1.129, 1004, 1.045,
          1005, 1.045, 1006, 1.072, 1007, 1.072, 1008, 1.129, 1009, 1.072, 1010,
          1.045, 1011, 1.129, 1012, 1.072, 1013, 1.129, 1014, 1.045, 1015,
          1.639, 1016, 1.072, 1017, 1.129, 1018, 1.072, 1019, 1.072, 1020, 1.1,
          1021, 1.129, 1022, 2.052, 1066, 2.16, 1068, 3.845, 1070, 3.861, 1072,
          2.16, 1074, 3.057, 1077, 2.437, 1078, 3.405, 1079, 2.437, 1080, 2.286,
          1082, 3.217, 1085, 2.437, 1086, 2.437, 1087, 4.047, 1088, 3.217, 1089,
          2.052, 1092, 2.286, 1095, 2.286, 1096, 3.405, 1097, 2.16, 1100, 2.286,
          1101, 2.437, 1107, 3.217, 1108, 3.217, 1112, 2.286, 1114, 2.16, 1115,
          2.437, 1118, 3.217, 1119, 2.627, 1121, 2.627, 1122, 3.405, 1126,
          2.437, 1129, 2.052, 1130, 2.052, 1134, 3.405, 1141, 2.052, 1142,
          2.286, 1143, 2.286, 1144, 2.052, 1154, 3.405, 1157, 2.627, 1173,
          2.286, 1174, 2.627, 1233, 4.29, 1305, 1.597, 1306, 1.597, 1312, 4.675,
          1313, 5.054, 1314, 2.594, 1330, 1.072, 1331, 1.667, 1335, 1.555, 1336,
          2.627, 1337, 2.627, 1338, 1.555, 1345, 5.023, 1346, 5.75, 1350, 3.861,
          1353, 2.483, 1366, 2.316, 1368, 2.576, 1374, 2.483, 1381, 1.727, 1383,
          2.594, 1385, 3.201, 1433, 4.555, 1438, 3.405, 1449, 3.405, 1450,
          3.405, 1520, 3.057, 1521, 3.405, 1551, 2.679, 1552, 2.679, 1555,
          3.547, 1707, 4.821, 1754, 3.405, 1757, 3.63, 1762, 3.63, 1771, 2.052,
          1779, 2.437, 1780, 2.437, 1782, 3.63, 1785, 2.437, 1786, 2.437, 1840,
          2.286, 1848, 1.609, 2009, 2.16, 2306, 2.627, 2308, 2.437, 2312, 2.437,
          2349, 3.63, 2362, 3.913, 2396, 2.437, 2397, 2.437, 2399, 2.627, 2416,
          2.881, 2427, 3.913, 2585, 2.881, 2586, 4.675, 2587, 4.338, 2588,
          5.813, 2589, 4.864, 2590, 4.807, 2591, 4.508, 2592, 6.44, 2593, 6.44,
          2594, 6.44, 2595, 6.44, 2596, 6.44, 2597, 3.266, 2598, 3.266, 2599,
          3.266, 2600, 3.266, 2601, 3.266, 2602, 3.266, 2603, 3.266, 2604,
          3.266, 2605, 3.266, 2606, 4.864, 2607, 3.266, 2608, 3.266, 2609,
          3.266, 2610, 4.29, 2611, 3.266, 2612, 3.266, 2613, 3.266, 2614, 2.881,
          2615, 2.881, 2616, 2.437, 2617, 2.437, 2618, 4.29, 2619, 3.266, 2620,
          3.266, 2621, 2.881, 2622, 2.881, 2623, 2.627, 2624, 3.266, 2625,
          3.266, 2626, 2.881, 2627, 2.627, 2628, 2.627, 2629, 3.266, 2630,
          2.881, 2631, 2.881, 2632, 2.881, 2633, 2.881, 2634, 4.864, 2635,
          4.864, 2636, 4.29, 2637, 3.913, 2638, 4.864, 2639, 4.29, 2640, 4.29,
          2641, 4.29, 2642, 4.864, 2643, 4.864, 2644, 2.881, 2645, 3.266, 2646,
          3.266, 2647, 3.266, 2648, 3.266, 2649, 2.881, 2650, 3.266, 2651,
          3.266, 2652, 3.266, 2653, 2.881, 2654, 2.881, 2655, 3.266, 2656,
          3.266, 2657, 3.266, 2658, 2.881,
        ],
      ],
      ["title/interfaces/LoginCredentials.html", [0, 0.042, 1383, 2.018]],
      [
        "body/interfaces/LoginCredentials.html",
        [
          0, 0.076, 2, 1.231, 3, 0.1, 4, 0.087, 5, 0.087, 7, 0.073, 8, 0.408,
          10, 0.531, 11, 0.104, 12, 0.009, 13, 0.133, 14, 1.198, 17, 2.024, 22,
          0.216, 28, 1.388, 62, 2.227, 65, 1.64, 95, 0.008, 96, 0.008, 103,
          0.637, 130, 0.261, 1315, 3.148, 1376, 2.765, 1377, 4.473, 1378, 4.85,
          1379, 4.015, 1381, 3.08, 1382, 3.261, 1383, 3.654, 1387, 4.473, 1389,
          3.384, 1390, 3.414, 1392, 3.666, 1393, 4.585, 1394, 4.769, 1395,
          4.473, 1396, 2.852, 1397, 4.769,
        ],
      ],
      [
        "title/interfaces/LoginCredentials-1.html",
        [0, 0.035, 98, 1.047, 1383, 1.694],
      ],
      [
        "body/interfaces/LoginCredentials-1.html",
        [
          0, 0.078, 2, 1.194, 3, 0.097, 4, 0.084, 5, 0.084, 7, 0.071, 8, 0.4,
          10, 0.533, 11, 0.102, 12, 0.009, 13, 0.135, 14, 1.259, 17, 2.007, 22,
          0.209, 28, 1.346, 62, 2.209, 65, 1.928, 95, 0.008, 96, 0.008, 103,
          0.516, 130, 0.253, 133, 1.752, 1311, 3.053, 1315, 3.053, 1378, 4.916,
          1381, 3.141, 1382, 3.163, 1383, 3.606, 1389, 3.283, 1390, 3.352, 1392,
          3.556, 1396, 2.766, 1543, 3.894, 1544, 3.894, 1545, 3.413, 1546,
          2.602, 1547, 4.099, 1548, 3.894, 1549, 3.894, 1550, 3.894, 1551,
          3.413, 1552, 3.413, 1553, 3.715, 1554, 3.715, 1555, 3.413,
        ],
      ],
      ["title/interfaces/LoginDto.html", [0, 0.042, 61, 1.844]],
      [
        "body/interfaces/LoginDto.html",
        [
          0, 0.084, 1, 1.972, 2, 0.932, 3, 0.076, 4, 0.066, 5, 0.066, 6, 2.093,
          7, 0.055, 8, 0.342, 9, 2.694, 10, 0.549, 11, 0.098, 12, 0.009, 13,
          0.141, 14, 1.167, 15, 1.329, 16, 2.776, 17, 1.914, 18, 2.093, 19,
          2.836, 20, 2.99, 21, 2.264, 22, 0.269, 23, 1.184, 24, 2.277, 25,
          1.717, 26, 1.575, 27, 2.159, 28, 1.818, 29, 1.916, 30, 1.626, 31,
          1.427, 32, 2.34, 33, 3.561, 34, 2.159, 35, 2.159, 36, 1.57, 37, 1.5,
          38, 1.51, 39, 1.156, 40, 2.031, 41, 2.159, 42, 2.031, 43, 2.159, 44,
          2.159, 45, 1.361, 46, 2.776, 47, 1.368, 48, 3.422, 49, 2.159, 50,
          2.864, 51, 2.031, 52, 2.031, 53, 2.159, 54, 2.093, 55, 2.159, 56,
          0.824, 57, 1.588, 58, 2.093, 59, 1.972, 60, 1.972, 61, 2.616, 62,
          2.049, 63, 1.972, 64, 1.972, 65, 1.242, 66, 1.916, 67, 2.093, 68,
          0.909, 69, 0.932, 70, 1.972, 71, 1.972, 72, 2.404, 73, 2.054, 74,
          2.694, 75, 2.003, 76, 2.159, 77, 1.812, 78, 2.093, 79, 2.031, 80,
          2.698, 81, 1.972, 82, 2.093, 83, 1.863, 84, 1.368, 85, 2.031, 86,
          1.812, 87, 1.812, 88, 1.472, 89, 2.471, 90, 1.972, 91, 2.159, 92,
          2.159, 93, 2.159, 94, 2.159, 95, 0.007, 96, 0.007,
        ],
      ],
      ["title/classes/LoginError.html", [130, 0.185, 1368, 2.395]],
      [
        "body/classes/LoginError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.523, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 1.851, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.567, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 4.923, 1359, 6.041, 1360, 5.687, 1364,
          5.687, 1365, 5.687, 1366, 3.426, 1367, 3.824, 1368, 4.15, 1369, 3.824,
          1370, 3.963, 1371, 3.824, 1372, 4.129, 1373, 3.824, 1374, 3.673, 1375,
          3.824, 1407, 4.76, 2659, 5.781, 2660, 4.047, 2661, 4.047,
        ],
      ],
      ["title/interfaces/LoginRequestDTO.html", [0, 0.042, 2662, 3.375]],
      [
        "body/interfaces/LoginRequestDTO.html",
        [
          0, 0.074, 2, 1.312, 3, 0.107, 4, 0.092, 5, 0.092, 7, 0.078, 8, 0.423,
          10, 0.533, 11, 0.108, 12, 0.009, 13, 0.125, 17, 2.059, 22, 0.23, 62,
          2.265, 95, 0.008, 96, 0.008, 2662, 5.929, 2663, 5.48, 2664, 5.084,
        ],
      ],
      ["title/injectables/LoginUseCase.html", [753, 0.871, 2590, 3.375]],
      [
        "body/injectables/LoginUseCase.html",
        [
          3, 0.097, 4, 0.084, 5, 0.084, 7, 0.071, 10, 0.439, 11, 0.11, 12,
          0.009, 13, 0.097, 17, 1.752, 22, 0.273, 28, 1.346, 62, 1.591, 95,
          0.008, 96, 0.008, 97, 0.95, 103, 0.673, 107, 0.688, 130, 0.253, 134,
          1.379, 135, 2.023, 136, 1.379, 535, 2.814, 538, 2.143, 753, 1.447,
          755, 2.26, 758, 1.482, 769, 1.245, 771, 1.556, 780, 1.482, 825, 2.26,
          826, 2.2, 1314, 3.606, 1366, 2.951, 1376, 3.25, 1381, 2.666, 1383,
          3.749, 1385, 3.413, 1396, 2.766, 1424, 4.338, 1426, 4.338, 1431,
          4.967, 1546, 3.527, 1844, 3.715, 1847, 3.894, 1848, 3.053, 2590,
          5.605, 2665, 5.466, 2666, 4.967, 2667, 6.041, 2668, 6.197, 2669,
          6.624, 2670, 6.197, 2671, 4.985, 2672, 6.197, 2673, 4.985, 2674,
          5.466, 2675, 4.625, 2676, 5.466, 2677, 4.985, 2678, 4.985, 2679,
          5.466,
        ],
      ],
      ["title/injectables/LogoutUseCase.html", [753, 0.871, 2680, 3.637]],
      [
        "body/injectables/LogoutUseCase.html",
        [
          3, 0.104, 4, 0.09, 5, 0.09, 7, 0.076, 11, 0.09, 12, 0.009, 13, 0.104,
          22, 0.223, 95, 0.008, 96, 0.008, 97, 0.779, 103, 0.65, 107, 0.735,
          130, 0.271, 134, 1.473, 136, 1.473, 538, 2.29, 753, 1.505, 755, 2.415,
          758, 1.542, 769, 1.204, 771, 1.276, 780, 1.307, 825, 2.415, 826,
          2.351, 1314, 3.71, 1338, 3.153, 1376, 3.381, 1381, 2.774, 1546, 3.605,
          1844, 3.97, 1847, 4.161, 1848, 3.262, 2666, 5.679, 2680, 6.285, 2681,
          5.841, 2682, 6.622, 2683, 6.622, 2684, 6.622,
        ],
      ],
      ["title/components/MusicsTable.html", [104, 0.502, 985, 1.447]],
      [
        "body/components/MusicsTable.html",
        [
          0, 0.037, 3, 0.062, 4, 0.054, 5, 0.054, 7, 0.085, 8, 0.298, 10, 0.434,
          11, 0.095, 12, 0.01, 13, 0.062, 14, 0.578, 15, 1.205, 22, 0.219, 23,
          1.819, 26, 1.23, 28, 1.214, 30, 1.576, 31, 1.653, 36, 1.819, 37,
          1.616, 38, 2.32, 47, 2.29, 56, 0.952, 73, 1.265, 95, 0.006, 96, 0.006,
          97, 0.465, 98, 2.051, 103, 0.539, 104, 0.719, 107, 0.439, 121, 2.021,
          122, 1.884, 125, 1.243, 126, 1.273, 130, 0.162, 131, 1.174, 133, 1.89,
          134, 1.442, 209, 0.725, 211, 0.967, 313, 2.268, 358, 1.66, 428, 3.077,
          485, 1.947, 486, 2.268, 488, 2.268, 489, 2.268, 523, 1.234, 526,
          2.784, 528, 1.821, 539, 2.346, 554, 2.094, 564, 2.094, 627, 3.911,
          636, 1.549, 688, 2.037, 720, 1.664, 758, 1.103, 769, 1.145, 771,
          0.761, 780, 0.78, 813, 1.704, 913, 1.835, 914, 1.367, 915, 1.367, 916,
          1.367, 918, 1.367, 920, 1.298, 921, 2.207, 934, 1.835, 945, 1.659,
          957, 1.367, 958, 1.932, 959, 1.932, 960, 1.367, 961, 2.436, 962,
          1.367, 963, 1.367, 964, 1.367, 965, 1.367, 966, 1.367, 967, 1.744,
          968, 2.241, 969, 1.265, 970, 1.367, 971, 1.298, 972, 1.367, 973,
          1.367, 974, 1.265, 975, 1.932, 976, 1.298, 977, 1.367, 978, 1.298,
          979, 1.367, 980, 1.298, 981, 1.367, 982, 1.367, 983, 1.298, 984,
          1.367, 985, 2.255, 986, 2.475, 987, 1.367, 988, 2.092, 989, 2.262,
          990, 1.367, 991, 1.367, 992, 1.203, 993, 1.234, 994, 1.203, 995,
          1.367, 996, 1.174, 997, 1.203, 998, 1.234, 999, 1.932, 1000, 1.203,
          1001, 1.234, 1002, 1.332, 1003, 1.367, 1004, 1.265, 1005, 1.265, 1006,
          1.298, 1007, 1.298, 1008, 1.367, 1009, 1.298, 1010, 1.265, 1011,
          1.367, 1012, 1.298, 1013, 1.367, 1014, 1.265, 1015, 1.882, 1016,
          1.298, 1017, 1.367, 1018, 1.298, 1019, 1.298, 1020, 1.332, 1021,
          1.367, 1054, 5.666, 1055, 3.695, 1056, 6.213, 1159, 3.179, 1305,
          1.835, 1306, 1.835, 1330, 1.298, 1335, 1.882, 1352, 5.257, 1914,
          2.753, 1927, 5.213, 1947, 2.017, 1949, 3.179, 2010, 2.95, 2078, 4.847,
          2079, 2.484, 2082, 3.911, 2085, 2.614, 2088, 4.915, 2114, 2.484, 2115,
          2.484, 2116, 2.369, 2117, 2.614, 2118, 2.614, 2119, 2.614, 2120,
          2.614, 2153, 4.536, 2466, 5.4, 2483, 4.494, 2484, 4.494, 2587, 4.837,
          2685, 3.179, 2686, 4.928, 2687, 3.953, 2688, 3.953, 2689, 4.928, 2690,
          3.953, 2691, 3.953, 2692, 3.953, 2693, 3.486, 2694, 3.486, 2695,
          4.928, 2696, 3.486, 2697, 3.486, 2698, 3.486, 2699, 3.486, 2700,
          3.486, 2701, 3.486, 2702, 3.486, 2703, 3.486, 2704, 3.486, 2705,
          3.486, 2706, 3.486, 2707, 2.95, 2708, 3.486, 2709, 3.486, 2710, 3.486,
          2711, 3.486, 2712, 3.486, 2713, 6.213, 2714, 5.587, 2715, 5.587,
        ],
      ],
      ["title/components/MusicsTablePlay.html", [104, 0.502, 988, 1.343]],
      [
        "body/components/MusicsTablePlay.html",
        [
          0, 0.06, 3, 0.061, 4, 0.053, 5, 0.053, 7, 0.045, 8, 0.296, 10, 0.462,
          11, 0.107, 12, 0.01, 13, 0.061, 14, 0.572, 15, 1.044, 22, 0.273, 23,
          0.957, 24, 1.647, 26, 1.225, 28, 1.608, 30, 1.176, 31, 0.87, 36,
          0.957, 37, 1.714, 38, 2.011, 45, 1.743, 47, 1.982, 56, 0.666, 68,
          0.735, 69, 1.241, 95, 0.006, 96, 0.006, 97, 0.824, 103, 0.461, 104,
          0.715, 107, 0.434, 121, 2.02, 122, 1.883, 124, 1.731, 125, 1.234, 126,
          1.263, 130, 0.16, 131, 1.161, 133, 1.794, 163, 1.745, 165, 1.642, 209,
          1.286, 211, 0.957, 311, 2.64, 523, 1.221, 526, 1.465, 528, 1.802, 530,
          2.932, 539, 2.328, 636, 1.54, 638, 1.8, 688, 2.349, 720, 1.8, 758,
          1.094, 769, 1.244, 771, 1.35, 780, 1.383, 813, 1.694, 913, 1.821, 914,
          1.352, 915, 1.352, 916, 1.352, 918, 1.352, 920, 1.284, 921, 2.198,
          934, 1.821, 945, 1.647, 957, 1.352, 958, 1.917, 959, 1.917, 960,
          1.352, 961, 2.424, 962, 1.352, 963, 1.352, 964, 1.352, 965, 1.352,
          966, 1.352, 967, 1.731, 968, 2.228, 969, 1.252, 970, 1.352, 971,
          1.284, 972, 1.352, 973, 1.352, 974, 1.252, 975, 1.917, 976, 1.284,
          977, 1.352, 978, 1.284, 979, 1.352, 980, 1.284, 981, 1.352, 982,
          1.352, 983, 1.284, 984, 1.352, 985, 1.252, 986, 2.399, 987, 1.352,
          988, 2.082, 989, 2.73, 990, 1.352, 991, 1.352, 992, 1.19, 993, 1.221,
          994, 1.19, 995, 1.352, 996, 1.161, 997, 1.19, 998, 1.221, 999, 1.917,
          1000, 1.19, 1001, 1.221, 1002, 1.317, 1003, 1.352, 1004, 1.252, 1005,
          1.252, 1006, 1.284, 1007, 1.284, 1008, 1.352, 1009, 1.284, 1010,
          1.252, 1011, 1.352, 1012, 1.284, 1013, 1.352, 1014, 1.252, 1015,
          1.868, 1016, 1.284, 1017, 1.352, 1018, 1.284, 1019, 1.284, 1020,
          1.317, 1021, 1.352, 1055, 3.667, 1305, 1.821, 1306, 1.821, 1308,
          3.548, 1330, 1.284, 1335, 1.862, 1730, 2.457, 1914, 2.732, 1928,
          3.288, 1929, 4.891, 1947, 1.996, 1948, 4.022, 1955, 2.457, 1956,
          2.586, 1957, 3.484, 1958, 4.46, 2077, 4.072, 2078, 5.163, 2079, 5.163,
          2080, 2.737, 2081, 4.138, 2082, 4.51, 2083, 4.138, 2084, 2.918, 2085,
          4.636, 2086, 5.232, 2087, 4.138, 2088, 3.667, 2089, 2.918, 2090,
          4.138, 2091, 3.862, 2092, 4.138, 2093, 2.918, 2094, 2.918, 2095,
          2.918, 2096, 2.344, 2097, 2.737, 2098, 1.862, 2099, 2.918, 2716,
          5.545, 2717, 5.545, 2718, 5.545, 2719, 3.91, 2720, 3.91, 2721, 3.91,
          2722, 3.91, 2723, 3.91, 2724, 3.91, 2725, 3.91, 2726, 3.91,
        ],
      ],
      ["title/classes/NetworkError.html", [130, 0.185, 1374, 2.308]],
      [
        "body/classes/NetworkError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.523, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 1.851, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.567, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 4.923, 1359, 6.041, 1360, 5.687, 1364,
          5.687, 1365, 5.687, 1366, 3.426, 1367, 3.824, 1368, 3.811, 1369,
          3.824, 1370, 3.963, 1371, 3.824, 1372, 4.129, 1373, 3.824, 1374,
          3.999, 1375, 3.824, 1407, 4.76, 2660, 4.047, 2661, 4.047, 2727, 5.781,
        ],
      ],
      ["title/interfaces/Notification.html", [0, 0.042, 2728, 3.375]],
      [
        "body/interfaces/Notification.html",
        [
          0, 0.053, 2, 1.094, 3, 0.132, 4, 0.077, 5, 0.077, 7, 0.065, 8, 0.379,
          10, 0.508, 11, 0.122, 12, 0.01, 13, 0.112, 26, 1.357, 36, 2.216, 72,
          3.052, 75, 2.742, 95, 0.007, 96, 0.007, 97, 0.837, 103, 0.473, 107,
          0.63, 130, 0.232, 135, 1.917, 136, 1.263, 145, 1.7, 163, 2.534, 209,
          1.042, 259, 2.608, 753, 1.371, 825, 2.07, 826, 2.016, 1073, 3.755,
          1771, 4.471, 2707, 4.237, 2728, 6.389, 2729, 4.567, 2730, 7.185, 2731,
          4.237, 2732, 5.008, 2733, 5.008, 2734, 5.008, 2735, 5.008, 2736,
          4.567, 2737, 7.185, 2738, 5.008, 2739, 5.008, 2740, 5.008, 2741,
          6.276, 2742, 5.008, 2743, 5.008, 2744, 6.276, 2745, 6.276, 2746,
          5.008, 2747, 4.567, 2748, 6.276, 2749, 5.008, 2750, 5.008, 2751,
          6.276, 2752, 5.008, 2753, 5.008, 2754, 5.008,
        ],
      ],
      ["title/injectables/NotificationService.html", [753, 0.871, 2731, 3.375]],
      [
        "body/injectables/NotificationService.html",
        [
          0, 0.046, 3, 0.115, 4, 0.067, 5, 0.067, 7, 0.057, 8, 0.348, 10, 0.52,
          11, 0.119, 12, 0.01, 13, 0.103, 22, 0.279, 26, 1.51, 36, 2.218, 72,
          2.445, 75, 2.698, 95, 0.007, 96, 0.007, 97, 0.972, 103, 0.413, 107,
          0.551, 130, 0.203, 135, 2.226, 136, 1.622, 145, 1.56, 163, 2.215, 209,
          0.911, 259, 2.089, 636, 1.923, 638, 2.162, 753, 1.257, 755, 1.81, 758,
          1.288, 769, 1.332, 771, 1.591, 780, 1.686, 813, 2.116, 825, 1.81, 826,
          1.762, 1073, 3.283, 1771, 4.582, 2707, 3.704, 2728, 6.512, 2729,
          3.992, 2730, 5.757, 2731, 4.871, 2732, 6.432, 2733, 6.833, 2734,
          4.378, 2735, 5.757, 2736, 5.25, 2737, 6.833, 2738, 5.757, 2739, 5.757,
          2740, 5.757, 2741, 6.833, 2742, 5.757, 2743, 5.757, 2744, 5.757, 2745,
          5.757, 2746, 4.378, 2747, 3.992, 2748, 5.757, 2749, 4.378, 2750,
          5.757, 2751, 5.757, 2752, 4.378, 2753, 5.757, 2754, 6.833, 2755,
          6.527, 2756, 6.527, 2757, 6.527, 2758, 6.527, 2759, 6.527, 2760,
          6.527, 2761, 4.963, 2762, 4.963, 2763, 4.963, 2764, 4.963, 2765,
          4.963, 2766, 4.963, 2767, 4.963, 2768, 4.963, 2769, 4.963,
        ],
      ],
      ["title/interfaces/PaginatedResponse.html", [0, 0.042, 77, 1.694]],
      [
        "body/interfaces/PaginatedResponse.html",
        [
          0, 0.083, 1, 1.936, 2, 0.915, 3, 0.075, 4, 0.064, 5, 0.064, 6, 2.055,
          7, 0.054, 8, 0.338, 9, 2.662, 10, 0.548, 11, 0.113, 12, 0.009, 13,
          0.141, 14, 1.16, 15, 1.323, 16, 2.743, 17, 1.665, 18, 2.055, 19,
          2.821, 20, 2.972, 21, 2.252, 22, 0.268, 23, 1.162, 24, 2.261, 25,
          1.686, 26, 1.571, 27, 2.12, 28, 1.861, 29, 1.882, 30, 1.615, 31, 1.41,
          32, 2.311, 33, 3.54, 34, 2.12, 35, 2.12, 36, 1.551, 37, 1.491, 38,
          1.482, 39, 1.135, 40, 1.994, 41, 2.12, 42, 1.994, 43, 2.12, 44, 2.12,
          45, 1.344, 46, 2.743, 47, 1.343, 48, 3.398, 49, 2.12, 50, 2.829, 51,
          1.994, 52, 1.994, 53, 2.12, 54, 2.055, 55, 2.12, 56, 0.809, 57, 1.559,
          58, 2.055, 59, 1.936, 60, 1.936, 61, 1.936, 62, 1.627, 63, 1.936, 64,
          1.936, 65, 1.219, 66, 1.882, 67, 2.055, 68, 0.893, 69, 0.915, 70,
          1.936, 71, 1.936, 72, 2.972, 73, 2.539, 74, 3.197, 75, 2.476, 76,
          2.12, 77, 2.375, 78, 3.294, 79, 1.994, 80, 2.673, 81, 1.936, 82,
          2.055, 83, 1.829, 84, 1.343, 85, 1.994, 86, 1.78, 87, 1.78, 88, 1.446,
          89, 2.442, 90, 1.936, 91, 2.12, 92, 2.12, 93, 2.12, 94, 2.12, 95,
          0.006, 96, 0.006, 97, 0.746, 1032, 3.637,
        ],
      ],
      ["title/components/PlayListItemCard.html", [104, 0.502, 1004, 1.447]],
      [
        "body/components/PlayListItemCard.html",
        [
          0, 0.044, 3, 0.074, 4, 0.064, 5, 0.064, 7, 0.054, 10, 0.463, 11,
          0.086, 12, 0.009, 13, 0.099, 14, 0.691, 15, 0.766, 22, 0.24, 26,
          0.825, 31, 1.051, 45, 1.728, 95, 0.006, 96, 0.006, 97, 0.556, 100,
          2.328, 103, 0.592, 104, 0.79, 107, 0.524, 111, 1.634, 121, 2.048, 122,
          1.908, 125, 1.405, 126, 1.439, 130, 0.193, 131, 1.403, 144, 3.098,
          145, 1.129, 146, 2.711, 147, 2.177, 148, 2.711, 152, 2.711, 166,
          3.346, 209, 0.867, 276, 2.177, 521, 3.225, 523, 1.475, 526, 1.771,
          638, 1.622, 688, 2.304, 720, 2.22, 758, 1.247, 769, 1.096, 771, 0.91,
          780, 0.933, 913, 2.074, 914, 1.634, 915, 1.634, 916, 1.634, 918,
          1.634, 920, 1.552, 921, 2.352, 934, 2.074, 945, 1.876, 957, 1.634,
          958, 2.185, 959, 2.185, 960, 1.634, 961, 2.627, 962, 1.634, 963,
          1.634, 964, 1.634, 965, 1.634, 966, 1.634, 967, 2.472, 968, 2.461,
          969, 2.432, 970, 1.634, 971, 1.552, 972, 1.634, 973, 1.634, 974,
          1.513, 975, 2.185, 976, 1.552, 977, 1.634, 978, 1.552, 979, 1.634,
          980, 1.552, 981, 1.634, 982, 1.634, 983, 1.552, 984, 1.634, 985,
          1.513, 986, 1.972, 987, 1.634, 988, 1.403, 989, 1.439, 990, 1.634,
          991, 1.634, 992, 1.439, 993, 1.475, 994, 1.923, 995, 1.634, 996,
          1.403, 997, 1.439, 998, 1.475, 999, 2.185, 1000, 1.439, 1001, 1.475,
          1002, 1.592, 1003, 1.634, 1004, 2.432, 1005, 2.856, 1006, 2.93, 1007,
          1.552, 1008, 1.634, 1009, 1.552, 1010, 1.513, 1011, 1.634, 1012,
          1.552, 1013, 1.634, 1014, 1.513, 1015, 2.128, 1016, 1.552, 1017,
          1.634, 1018, 1.552, 1019, 1.552, 1020, 1.592, 1021, 1.634, 1025,
          4.715, 1305, 2.074, 1306, 2.074, 1307, 4.982, 1330, 1.552, 1912,
          4.422, 1913, 5.082, 1914, 3.112, 1922, 3.308, 1930, 4.179, 2508, 5.67,
          2770, 6.111, 2771, 3.308, 2772, 6.984, 2773, 4.168, 2774, 4.726, 2775,
          4.726, 2776, 4.726, 2777, 4.168, 2778, 3.527, 2779, 6.318,
        ],
      ],
      ["title/components/Player.html", [104, 0.502, 921, 1.343]],
      [
        "body/components/Player.html",
        [
          0, 0.058, 3, 0.057, 4, 0.049, 5, 0.049, 7, 0.042, 8, 0.281, 10, 0.453,
          11, 0.098, 12, 0.01, 13, 0.057, 14, 0.534, 15, 1.101, 22, 0.243, 23,
          1.292, 24, 1.084, 26, 1.434, 30, 1.12, 31, 1.174, 36, 1.292, 37,
          1.563, 38, 1.648, 45, 1.593, 47, 1.921, 56, 0.9, 69, 0.703, 95, 0.005,
          96, 0.005, 97, 0.621, 98, 1.008, 103, 0.6, 104, 0.688, 105, 2.767,
          107, 0.405, 121, 2.008, 122, 1.872, 125, 1.174, 126, 1.203, 130,
          0.149, 131, 1.084, 132, 2.152, 133, 1.851, 139, 3.032, 145, 0.872,
          209, 0.67, 211, 1.292, 286, 1.23, 343, 1.406, 485, 1.799, 523, 1.14,
          526, 1.978, 528, 1.682, 530, 2.692, 539, 2.604, 636, 1.482, 638,
          2.264, 683, 1.864, 720, 1.989, 758, 1.042, 769, 1.326, 771, 1.017,
          780, 1.64, 813, 1.631, 913, 1.733, 914, 1.262, 915, 1.262, 916, 1.262,
          918, 1.262, 920, 1.199, 921, 2.538, 934, 1.733, 945, 2.018, 957,
          1.262, 958, 1.825, 959, 1.825, 960, 1.262, 961, 2.349, 962, 1.262,
          963, 1.262, 964, 1.262, 965, 1.262, 966, 1.262, 967, 1.648, 968,
          2.144, 969, 1.169, 970, 1.262, 971, 1.199, 972, 1.262, 973, 1.262,
          974, 1.169, 975, 1.825, 976, 1.199, 977, 1.262, 978, 1.199, 979,
          1.262, 980, 1.199, 981, 1.262, 982, 1.262, 983, 1.199, 984, 1.262,
          985, 1.169, 986, 1.648, 987, 1.262, 988, 1.084, 989, 1.112, 990,
          1.262, 991, 1.262, 992, 2.068, 993, 2.25, 994, 1.888, 995, 1.262, 996,
          2.018, 997, 2.068, 998, 1.936, 999, 1.825, 1000, 2.068, 1001, 2.418,
          1002, 1.23, 1003, 1.262, 1004, 1.169, 1005, 1.169, 1006, 1.199, 1007,
          1.199, 1008, 1.262, 1009, 1.199, 1010, 1.169, 1011, 1.262, 1012,
          1.199, 1013, 1.262, 1014, 1.169, 1015, 1.779, 1016, 1.199, 1017,
          1.262, 1018, 1.199, 1019, 1.199, 1020, 1.23, 1021, 1.262, 1305, 1.733,
          1306, 1.733, 1330, 1.199, 1640, 2.556, 1928, 3.165, 1947, 1.864, 1948,
          3.558, 1957, 4.269, 2077, 3.979, 2091, 3.717, 2096, 2.189, 2098,
          2.514, 2100, 2.556, 2101, 4.34, 2102, 4.101, 2103, 2.725, 2104, 4.628,
          2105, 2.415, 2106, 2.415, 2107, 2.294, 2108, 3.317, 2109, 3.94, 2110,
          2.725, 2111, 3.94, 2112, 4.628, 2113, 3.317, 2114, 2.294, 2115, 2.294,
          2116, 2.189, 2117, 2.415, 2118, 2.415, 2119, 3.492, 2120, 2.415, 2121,
          5.07, 2122, 5.07, 2123, 3.94, 2124, 4.34, 2125, 4.493, 2126, 2.556,
          2127, 3.94, 2128, 2.556, 2129, 2.725, 2130, 2.725, 2131, 2.725, 2132,
          2.725, 2133, 4.493, 2134, 2.725, 2135, 2.725, 2136, 3.94, 2137, 3.695,
          2138, 5.07, 2139, 2.725, 2140, 2.556, 2141, 2.725, 2142, 5.07, 2143,
          4.628, 2144, 2.725, 2145, 4.756, 2146, 2.725, 2147, 3.94, 2148, 2.725,
          2780, 4.656, 2781, 5.279, 2782, 3.651, 2783, 3.651, 2784, 3.651, 2785,
          3.651, 2786, 3.651, 2787, 3.651, 2788, 3.651, 2789, 3.651, 2790,
          3.651, 2791, 3.651, 2792, 3.651, 2793, 3.651, 2794, 3.651, 2795,
          3.651, 2796, 3.651, 2797, 3.651, 2798, 3.651,
        ],
      ],
      [
        "title/components/PlayerControlButtonBar.html",
        [104, 0.502, 992, 1.377],
      ],
      [
        "body/components/PlayerControlButtonBar.html",
        [
          3, 0.074, 4, 0.064, 5, 0.064, 7, 0.054, 11, 0.086, 12, 0.009, 13,
          0.074, 14, 0.692, 22, 0.213, 28, 1.028, 37, 1.189, 95, 0.006, 96,
          0.006, 103, 0.526, 104, 0.79, 107, 0.525, 121, 2.048, 122, 1.908, 125,
          1.406, 126, 1.44, 130, 0.193, 131, 1.405, 523, 1.477, 530, 2.505, 535,
          1.772, 636, 1.13, 638, 2.092, 688, 2.305, 720, 1.623, 758, 1.248, 769,
          1.22, 780, 1.405, 813, 1.244, 913, 2.076, 914, 1.636, 915, 1.636, 916,
          1.636, 918, 1.636, 920, 1.553, 921, 2.543, 934, 2.076, 945, 1.878,
          957, 1.636, 958, 2.186, 959, 2.186, 960, 1.636, 961, 2.628, 962,
          1.636, 963, 1.636, 964, 1.636, 965, 1.636, 966, 1.636, 967, 1.973,
          968, 2.462, 969, 1.514, 970, 1.636, 971, 1.553, 972, 1.636, 973,
          1.636, 974, 1.514, 975, 2.186, 976, 1.553, 977, 1.636, 978, 1.553,
          979, 1.636, 980, 1.553, 981, 1.636, 982, 1.636, 983, 1.553, 984,
          1.636, 985, 1.514, 986, 1.973, 987, 1.636, 988, 1.405, 989, 1.44, 990,
          1.636, 991, 1.636, 992, 2.314, 993, 2.807, 994, 2.737, 995, 1.636,
          996, 1.405, 997, 1.44, 998, 1.477, 999, 2.186, 1000, 1.44, 1001,
          1.477, 1002, 1.594, 1003, 1.636, 1004, 1.514, 1005, 1.514, 1006,
          1.553, 1007, 1.553, 1008, 1.636, 1009, 1.553, 1010, 1.514, 1011,
          1.636, 1012, 1.553, 1013, 1.636, 1014, 1.514, 1015, 2.13, 1016, 1.553,
          1017, 1.636, 1018, 1.553, 1019, 1.553, 1020, 1.594, 1021, 1.636, 1305,
          2.076, 1306, 2.076, 1308, 3.921, 1330, 1.553, 1335, 2.252, 1914,
          3.114, 1928, 4.043, 1957, 3.972, 1958, 5.085, 2105, 5.391, 2106,
          4.181, 2145, 5.32, 2799, 5.391, 2800, 4.172, 2801, 6.322, 2802, 7.601,
          2803, 7.601, 2804, 5.085, 2805, 7.121, 2806, 4.73, 2807, 5.727, 2808,
          4.73, 2809, 4.73, 2810, 4.73, 2811, 4.73, 2812, 5.085, 2813, 4.73,
          2814, 4.73, 2815, 4.73, 2816, 6.322, 2817, 6.322,
        ],
      ],
      ["title/components/PlayerCurrentSong.html", [104, 0.502, 996, 1.343]],
      [
        "body/components/PlayerCurrentSong.html",
        [
          0, 0.044, 3, 0.075, 4, 0.064, 5, 0.064, 7, 0.054, 10, 0.464, 11,
          0.086, 12, 0.009, 13, 0.075, 14, 0.695, 15, 0.771, 22, 0.241, 23,
          1.164, 26, 1.108, 30, 1.008, 31, 1.058, 36, 1.164, 37, 1.628, 38,
          1.484, 95, 0.006, 96, 0.006, 97, 0.559, 103, 0.594, 104, 0.792, 107,
          0.528, 111, 1.644, 121, 2.049, 122, 1.909, 125, 1.411, 126, 1.445,
          130, 0.194, 131, 1.412, 133, 1.777, 134, 1.058, 136, 1.058, 343,
          2.443, 516, 3.886, 523, 1.484, 526, 1.781, 538, 1.644, 636, 1.136,
          638, 1.221, 661, 4.44, 688, 2.313, 720, 1.628, 758, 1.252, 769, 1.1,
          771, 0.916, 780, 0.938, 813, 1.25, 913, 2.083, 914, 1.644, 915, 1.644,
          916, 1.644, 918, 1.644, 920, 1.561, 921, 2.546, 925, 3.548, 934,
          2.083, 945, 2.64, 957, 1.644, 958, 2.193, 959, 2.193, 960, 1.644, 961,
          2.633, 962, 1.644, 963, 1.644, 964, 1.644, 965, 1.644, 966, 1.644,
          967, 1.98, 968, 2.468, 969, 1.522, 970, 1.644, 971, 1.561, 972, 1.644,
          973, 1.644, 974, 1.522, 975, 2.193, 976, 1.561, 977, 1.644, 978,
          1.561, 979, 1.644, 980, 1.561, 981, 1.644, 982, 1.644, 983, 1.561,
          984, 1.644, 985, 1.522, 986, 1.98, 987, 1.644, 988, 1.412, 989, 1.447,
          990, 1.644, 991, 1.644, 992, 1.447, 993, 1.484, 994, 1.447, 995,
          1.644, 996, 2.262, 997, 1.447, 998, 1.484, 999, 2.193, 1000, 1.447,
          1001, 1.484, 1002, 1.602, 1003, 1.644, 1004, 1.522, 1005, 1.522, 1006,
          1.561, 1007, 1.561, 1008, 1.644, 1009, 1.561, 1010, 1.522, 1011,
          1.644, 1012, 1.561, 1013, 1.644, 1014, 1.522, 1015, 2.137, 1016,
          1.561, 1017, 1.644, 1018, 1.561, 1019, 1.561, 1020, 1.602, 1021,
          1.644, 1054, 5.102, 1305, 2.083, 1306, 2.083, 1308, 3.931, 1330,
          1.561, 1335, 2.264, 1493, 3.802, 1914, 3.125, 2098, 3.626, 2107,
          4.786, 2150, 3.328, 2713, 5.595, 2799, 5.037, 2818, 5.595, 2819,
          6.718, 2820, 6.343, 2821, 4.754, 2822, 4.193, 2823, 4.193, 2824,
          6.343,
        ],
      ],
      ["title/components/PlayerSoundControl.html", [104, 0.502, 997, 1.377]],
      [
        "body/components/PlayerSoundControl.html",
        [
          3, 0.068, 4, 0.059, 5, 0.059, 7, 0.049, 8, 0.317, 10, 0.348, 11,
          0.104, 12, 0.009, 13, 0.068, 14, 0.632, 22, 0.247, 26, 1.386, 36,
          1.663, 39, 1.032, 40, 1.814, 56, 0.736, 68, 0.812, 95, 0.006, 96,
          0.006, 97, 0.699, 103, 0.36, 104, 0.754, 105, 3.034, 107, 0.479, 121,
          2.035, 122, 1.897, 125, 0.961, 126, 1.354, 130, 0.177, 131, 1.283,
          132, 2.424, 133, 1.708, 139, 3.268, 144, 2.985, 145, 1.75, 147, 1.991,
          165, 1.814, 209, 1.247, 211, 1.057, 227, 2.738, 239, 3.932, 523,
          1.349, 539, 1.814, 636, 1.624, 638, 1.88, 649, 2.858, 650, 2.858, 688,
          2.168, 720, 1.526, 758, 1.341, 769, 1.252, 771, 1.145, 780, 1.341,
          813, 1.787, 913, 1.952, 914, 1.494, 915, 1.494, 916, 1.494, 918,
          1.494, 920, 1.419, 921, 2.495, 934, 1.952, 945, 1.766, 957, 1.494,
          958, 2.056, 959, 2.056, 960, 1.494, 961, 2.532, 962, 1.494, 963,
          1.494, 964, 1.494, 965, 1.494, 966, 1.494, 967, 1.856, 968, 2.35, 969,
          1.383, 970, 1.494, 971, 1.419, 972, 1.494, 973, 1.494, 974, 1.383,
          975, 2.056, 976, 1.419, 977, 1.494, 978, 1.419, 979, 1.494, 980,
          1.419, 981, 1.494, 982, 1.494, 983, 1.419, 984, 1.494, 985, 1.383,
          986, 1.856, 987, 1.494, 988, 1.283, 989, 1.315, 990, 1.494, 991,
          1.494, 992, 1.315, 993, 2.122, 994, 1.315, 995, 1.494, 996, 1.283,
          997, 2.229, 998, 2.813, 999, 2.056, 1000, 1.315, 1001, 1.349, 1002,
          1.456, 1003, 1.494, 1004, 1.383, 1005, 1.383, 1006, 1.419, 1007,
          1.419, 1008, 1.494, 1009, 1.419, 1010, 1.383, 1011, 1.494, 1012,
          1.419, 1013, 1.494, 1014, 1.383, 1015, 2.003, 1016, 1.419, 1017,
          1.494, 1018, 1.419, 1019, 1.419, 1020, 1.456, 1021, 1.494, 1305,
          1.952, 1306, 1.952, 1330, 1.419, 1914, 2.929, 1930, 3.932, 1955,
          3.736, 2101, 4.758, 2108, 5.203, 2140, 3.024, 2181, 5.073, 2218,
          3.475, 2799, 5.477, 2825, 3.475, 2826, 5.244, 2827, 5.945, 2828,
          5.945, 2829, 6.797, 2830, 6.797, 2831, 4.32, 2832, 5.945, 2833, 4.32,
          2834, 4.32, 2835, 4.32, 2836, 5.945, 2837, 4.32, 2838, 3.811, 2839,
          3.811, 2840, 4.32, 2841, 4.32, 2842, 6.797, 2843, 6.797, 2844, 4.32,
          2845, 5.945, 2846, 4.32, 2847, 4.32, 2848, 6.797, 2849, 3.811, 2850,
          4.32, 2851, 4.32, 2852, 4.32, 2853, 5.945, 2854, 4.32, 2855, 4.32,
          2856, 5.945, 2857, 5.945,
        ],
      ],
      ["title/components/PlayerVolumeControl.html", [104, 0.502, 1000, 1.377]],
      [
        "body/components/PlayerVolumeControl.html",
        [
          3, 0.072, 4, 0.062, 5, 0.062, 7, 0.052, 8, 0.329, 11, 0.095, 12,
          0.009, 13, 0.072, 14, 0.668, 22, 0.236, 26, 1.222, 39, 1.091, 95,
          0.006, 96, 0.006, 97, 0.537, 103, 0.514, 104, 0.776, 107, 0.507, 121,
          2.043, 122, 1.904, 125, 1.373, 126, 1.407, 130, 0.187, 131, 1.356,
          144, 3.055, 145, 1.475, 147, 2.104, 165, 1.917, 209, 1.133, 211,
          1.118, 227, 2.08, 523, 1.425, 535, 1.711, 636, 1.475, 638, 1.585, 649,
          3.02, 650, 3.02, 688, 2.251, 720, 1.585, 758, 1.218, 769, 1.243, 771,
          0.88, 780, 0.901, 813, 1.624, 913, 2.027, 914, 2.135, 915, 1.579, 916,
          1.579, 918, 1.579, 920, 1.499, 921, 2.525, 934, 2.027, 945, 1.834,
          957, 1.579, 958, 2.135, 959, 2.135, 960, 1.579, 961, 2.591, 962,
          1.579, 963, 1.579, 964, 1.579, 965, 1.579, 966, 1.579, 967, 1.927,
          968, 2.419, 969, 1.462, 970, 1.579, 971, 1.499, 972, 1.579, 973,
          1.579, 974, 1.462, 975, 2.135, 976, 1.499, 977, 1.579, 978, 1.499,
          979, 1.579, 980, 1.499, 981, 1.579, 982, 1.579, 983, 1.499, 984,
          1.579, 985, 1.462, 986, 1.927, 987, 1.579, 988, 1.356, 989, 1.39, 990,
          1.579, 991, 1.579, 992, 1.39, 993, 2.183, 994, 1.39, 995, 1.579, 996,
          1.356, 997, 1.39, 998, 1.425, 999, 2.135, 1000, 2.281, 1001, 2.855,
          1002, 1.538, 1003, 1.579, 1004, 1.462, 1005, 1.462, 1006, 1.499, 1007,
          1.499, 1008, 1.579, 1009, 1.499, 1010, 1.462, 1011, 1.579, 1012,
          1.499, 1013, 1.579, 1014, 1.462, 1015, 2.08, 1016, 1.499, 1017, 1.579,
          1018, 1.499, 1019, 1.499, 1020, 1.538, 1021, 1.579, 1305, 2.027, 1306,
          2.027, 1308, 3.852, 1330, 1.499, 1335, 2.174, 1500, 3.673, 1909,
          3.673, 1914, 3.041, 1930, 4.083, 2108, 5.182, 2113, 3.879, 2124,
          3.196, 2137, 3.196, 2780, 5.445, 2799, 5.455, 2804, 4.966, 2807,
          5.626, 2812, 4.966, 2825, 3.673, 2826, 5.445, 2838, 4.028, 2839,
          4.028, 2849, 4.028, 2858, 8.067, 2859, 6.994, 2860, 6.994, 2861,
          7.827, 2862, 6.174, 2863, 4.566, 2864, 4.566, 2865, 4.566, 2866,
          4.566, 2867, 4.566, 2868, 4.566, 2869, 4.566, 2870, 4.566, 2871,
          6.174, 2872, 6.174, 2873, 6.174,
        ],
      ],
      ["title/interfaces/Playlist.html", [0, 0.042, 45, 0.959]],
      [
        "body/interfaces/Playlist.html",
        [
          0, 0.083, 1, 1.83, 2, 0.865, 3, 0.071, 4, 0.061, 5, 0.061, 6, 1.942,
          7, 0.051, 8, 0.325, 9, 2.562, 10, 0.549, 11, 0.119, 12, 0.009, 13,
          0.14, 14, 1.253, 15, 1.373, 16, 2.64, 17, 1.618, 18, 1.942, 19, 2.929,
          20, 3.131, 21, 2.215, 22, 0.282, 23, 1.098, 24, 2.439, 25, 1.593, 26,
          1.58, 27, 2.003, 28, 1.84, 29, 1.778, 30, 1.578, 31, 1.357, 32, 2.225,
          33, 3.729, 34, 2.003, 35, 2.003, 36, 1.493, 37, 1.544, 38, 1.401, 39,
          1.073, 40, 1.885, 41, 2.003, 42, 1.885, 43, 2.003, 44, 2.003, 45,
          1.47, 46, 3.367, 47, 2.104, 48, 3.664, 49, 3.32, 50, 3.472, 51, 1.885,
          52, 1.885, 53, 2.003, 54, 1.942, 55, 2.003, 56, 0.765, 57, 1.474, 58,
          1.942, 59, 1.83, 60, 1.83, 61, 1.83, 62, 1.567, 63, 1.83, 64, 1.83,
          65, 1.152, 66, 1.778, 67, 1.942, 68, 0.844, 69, 0.865, 70, 1.83, 71,
          1.83, 72, 2.286, 73, 1.953, 74, 2.562, 75, 1.905, 76, 2.003, 77,
          1.682, 78, 1.942, 79, 1.885, 80, 2.598, 81, 1.83, 82, 1.942, 83,
          1.729, 84, 1.269, 85, 1.885, 86, 1.682, 87, 1.682, 88, 1.366, 89,
          2.35, 90, 1.83, 91, 2.003, 92, 2.003, 93, 2.003, 94, 2.003, 95, 0.006,
          96, 0.006, 97, 0.944,
        ],
      ],
      ["title/interfaces/Playlist-1.html", [0, 0.035, 45, 0.805, 98, 1.047]],
      [
        "body/interfaces/Playlist-1.html",
        [
          0, 0.069, 2, 1, 3, 0.082, 4, 0.07, 5, 0.07, 7, 0.059, 8, 0.358, 10,
          0.518, 11, 0.107, 12, 0.01, 13, 0.082, 15, 1.356, 22, 0.275, 23,
          1.271, 24, 2.425, 26, 1.507, 28, 1.46, 30, 1.425, 31, 1.155, 36,
          1.271, 37, 1.702, 38, 2.611, 45, 1.849, 47, 2.108, 56, 0.885, 68,
          0.976, 69, 1.436, 95, 0.007, 96, 0.007, 97, 0.984, 103, 0.559, 104,
          0.746, 107, 0.576, 121, 1.155, 122, 1.075, 124, 2.098, 125, 1.155,
          126, 1.183, 130, 0.212, 133, 1.839, 163, 2.317, 165, 2.18, 209, 1.446,
          211, 1.271, 311, 3.2, 526, 1.945, 528, 2.392, 530, 2.953, 539, 2.822,
          638, 1.726, 688, 2.718, 720, 1.333, 986, 2.098, 988, 1.542, 989, 2.4,
          1055, 4.445, 1305, 1.705, 1306, 1.705, 1308, 3.701, 1330, 1.705, 1335,
          2.472, 1730, 3.262, 1928, 2.65, 1947, 2.65, 1948, 4.523, 1955, 3.262,
          1956, 3.434, 2077, 3.948, 2078, 3.262, 2079, 3.262, 2080, 3.634, 2081,
          3.875, 2082, 3.634, 2083, 3.875, 2084, 3.875, 2085, 5.213, 2086,
          3.875, 2087, 5.016, 2088, 4.445, 2089, 3.875, 2090, 3.875, 2091,
          4.468, 2092, 3.875, 2093, 3.875, 2094, 3.875, 2095, 3.875, 2096,
          3.112, 2097, 3.634, 2098, 2.472, 2099, 3.875,
        ],
      ],
      ["title/interfaces/Playlist-2.html", [0, 0.035, 45, 0.805, 358, 1.593]],
      [
        "body/interfaces/Playlist-2.html",
        [
          0, 0.056, 2, 1.15, 3, 0.094, 4, 0.081, 5, 0.081, 7, 0.068, 8, 0.391,
          10, 0.533, 11, 0.115, 12, 0.009, 13, 0.115, 15, 1.344, 26, 1.389, 31,
          1.845, 45, 1.759, 95, 0.007, 96, 0.007, 97, 0.863, 100, 4.085, 103,
          0.662, 104, 0.815, 107, 0.663, 111, 2.065, 121, 1.328, 122, 1.236,
          125, 1.328, 126, 1.36, 130, 0.244, 144, 2.434, 145, 1.427, 146, 3.426,
          147, 2.751, 148, 3.426, 152, 3.426, 166, 3.163, 209, 1.096, 276,
          3.821, 521, 3.048, 526, 3.107, 638, 1.533, 688, 2.677, 720, 2.186,
          967, 2.291, 969, 2.35, 994, 1.818, 1004, 1.911, 1005, 2.725, 1006,
          2.795, 1305, 1.961, 1306, 1.961, 1307, 5.139, 1330, 1.961, 1912,
          4.179, 1913, 4.803, 1922, 4.179, 2508, 4.456, 2770, 4.803, 2771,
          4.179, 2772, 5.266, 2777, 5.266, 2778, 4.456,
        ],
      ],
      ["title/interfaces/Playlist-3.html", [0, 0.035, 45, 0.805, 554, 2.01]],
      [
        "body/interfaces/Playlist-3.html",
        [
          0, 0.067, 2, 0.925, 3, 0.075, 4, 0.065, 5, 0.065, 7, 0.055, 8, 0.34,
          10, 0.511, 11, 0.097, 12, 0.01, 13, 0.075, 15, 1.354, 22, 0.258, 23,
          1.563, 24, 2.271, 26, 1.459, 30, 1.354, 31, 1.421, 36, 1.563, 37,
          1.615, 38, 1.993, 45, 1.736, 47, 2.029, 56, 1.088, 69, 0.925, 95,
          0.006, 96, 0.006, 97, 0.899, 98, 1.325, 103, 0.663, 104, 0.709, 105,
          2.85, 107, 0.533, 121, 1.068, 122, 0.994, 125, 1.068, 126, 1.094, 130,
          0.196, 132, 1.958, 133, 1.858, 139, 2.143, 145, 1.148, 209, 0.881,
          211, 1.563, 286, 1.618, 343, 1.85, 485, 2.366, 526, 2.393, 528, 2.213,
          530, 2.53, 539, 3.012, 638, 2.227, 683, 2.451, 720, 1.639, 921, 2.431,
          945, 1.897, 992, 1.944, 993, 2.387, 994, 1.944, 996, 1.897, 997,
          1.944, 998, 1.993, 1000, 1.944, 1001, 2.239, 1305, 1.577, 1306, 1.577,
          1330, 1.577, 1640, 3.362, 1928, 2.451, 1947, 2.451, 1948, 4.117, 1957,
          3.018, 2077, 3.8, 2091, 4.301, 2096, 2.879, 2098, 3.041, 2100, 3.362,
          2101, 4.47, 2102, 4.224, 2103, 3.584, 2104, 4.766, 2105, 3.176, 2106,
          3.176, 2107, 3.018, 2108, 4.013, 2109, 3.584, 2110, 3.584, 2111,
          3.584, 2112, 3.584, 2113, 3.018, 2114, 3.018, 2115, 3.018, 2116,
          2.879, 2117, 3.176, 2118, 3.176, 2119, 4.224, 2120, 3.176, 2121,
          3.584, 2122, 5.707, 2123, 4.766, 2124, 5.022, 2125, 3.176, 2126,
          3.362, 2127, 4.766, 2128, 3.362, 2129, 3.584, 2130, 3.584, 2131,
          3.584, 2132, 3.584, 2133, 3.176, 2134, 3.584, 2135, 3.584, 2136,
          3.584, 2137, 3.362, 2138, 3.584, 2139, 3.584, 2140, 3.362, 2141,
          3.584, 2142, 3.584, 2143, 5.354, 2144, 3.584, 2145, 3.362, 2146,
          3.584, 2147, 3.584, 2148, 3.584,
        ],
      ],
      ["title/interfaces/Playlist-4.html", [0, 0.035, 45, 0.805, 564, 2.01]],
      [
        "body/interfaces/Playlist-4.html",
        [
          0, 0.058, 2, 1.205, 3, 0.098, 4, 0.085, 5, 0.085, 7, 0.071, 8, 0.403,
          10, 0.512, 11, 0.11, 12, 0.009, 13, 0.098, 15, 1.366, 22, 0.284, 26,
          1.417, 45, 1.787, 69, 1.205, 95, 0.008, 96, 0.008, 100, 4.151, 103,
          0.629, 104, 0.838, 107, 0.694, 111, 2.163, 121, 1.391, 122, 1.295,
          125, 1.391, 126, 1.425, 130, 0.256, 136, 1.391, 150, 3.479, 166,
          3.313, 176, 3.749, 267, 3.93, 310, 2.791, 343, 2.409, 516, 3.863, 538,
          2.163, 688, 2.754, 697, 4.378, 711, 4.378, 934, 2.767, 967, 1.952,
          1014, 2.002, 1015, 2.544, 1305, 2.054, 1306, 2.054, 1330, 2.054, 1333,
          4.668, 1516, 4.668, 1912, 4.378, 2771, 4.378, 2778, 4.668, 2874,
          4.668, 2875, 5.517, 2876, 5.517, 2877, 5.517,
        ],
      ],
      ["title/interfaces/Playlist-5.html", [0, 0.035, 45, 0.805, 572, 2.177]],
      [
        "body/interfaces/Playlist-5.html",
        [
          0, 0.052, 2, 0.589, 3, 0.048, 4, 0.041, 5, 0.099, 7, 0.035, 8, 0.247,
          10, 0.51, 11, 0.099, 12, 0.01, 13, 0.048, 15, 1.419, 19, 2.763, 21,
          2.206, 22, 0.289, 23, 2.156, 24, 2.434, 25, 2.501, 26, 1.17, 28,
          1.006, 30, 1.185, 31, 1.628, 39, 1.107, 45, 1.695, 56, 1.34, 57,
          1.521, 68, 1.259, 69, 1.29, 73, 1.995, 84, 0.865, 88, 2.145, 95,
          0.005, 96, 0.005, 98, 1.542, 102, 4.199, 103, 0.519, 104, 0.514, 107,
          0.339, 108, 1.888, 109, 1.086, 111, 1.058, 119, 3.077, 121, 0.681,
          122, 0.633, 123, 1.284, 124, 2.199, 125, 0.681, 126, 0.697, 130,
          0.125, 133, 1.758, 136, 0.681, 144, 2.541, 145, 1.844, 147, 2.134,
          149, 1.457, 150, 2.134, 160, 1.324, 203, 2.067, 208, 1.086, 209,
          1.343, 211, 1.368, 212, 1.685, 227, 2.1, 250, 1.685, 279, 1.409, 286,
          1.031, 311, 2.205, 328, 1.507, 343, 1.178, 358, 2.347, 386, 1.755,
          388, 2.852, 410, 1.685, 426, 1.755, 428, 1.685, 441, 1.834, 443,
          2.776, 484, 1.755, 490, 2.776, 512, 2.283, 513, 6.858, 514, 3.063,
          515, 1.834, 516, 2.661, 517, 4.942, 518, 5.667, 519, 2.283, 520,
          2.461, 521, 1.561, 522, 2.461, 523, 0.955, 524, 2.461, 525, 3.687,
          526, 2.094, 527, 2.461, 528, 2.134, 529, 2.461, 530, 2.791, 531,
          2.141, 532, 2.283, 533, 2.461, 534, 2.023, 535, 2.891, 536, 3.725,
          537, 3.725, 538, 1.058, 539, 2.347, 540, 2.461, 541, 2.023, 542,
          2.141, 543, 2.283, 544, 1.755, 545, 2.283, 546, 2.461, 547, 1.922,
          548, 4.363, 549, 2.283, 550, 2.283, 551, 2.283, 552, 2.461, 553,
          2.461, 554, 2.96, 555, 2.461, 556, 2.461, 557, 2.283, 558, 2.461, 559,
          2.461, 560, 2.461, 561, 2.461, 562, 2.461, 563, 2.461, 564, 2.96, 565,
          2.141, 566, 2.461, 567, 2.461, 568, 2.461, 569, 2.461, 570, 2.461,
          571, 2.461, 572, 3.576, 573, 2.461, 574, 2.461, 575, 2.461, 576,
          2.461, 577, 2.461, 578, 3.242, 579, 2.461, 580, 2.461, 581, 2.461,
          582, 2.461, 583, 2.461, 584, 2.461, 585, 4.495, 586, 4.495, 587,
          2.283, 588, 2.461, 589, 2.461, 590, 3.725, 591, 3.725, 592, 2.461,
          593, 2.461, 594, 3.725, 595, 2.461, 596, 2.461, 597, 2.461, 598,
          3.725, 599, 3.725, 600, 2.461, 601, 2.461, 602, 2.461, 603, 3.725,
          604, 3.725, 605, 2.461, 606, 2.461, 607, 2.461, 608, 2.461, 609,
          2.461, 610, 2.283, 611, 2.283, 612, 2.461, 613, 2.461, 614, 2.461,
          615, 3.725, 616, 2.461, 617, 2.461, 618, 2.461, 619, 2.461, 620,
          2.461, 621, 2.461, 622, 2.461, 623, 2.461, 624, 2.461, 625, 2.461,
          626, 2.461, 627, 2.141, 628, 2.461, 629, 2.461, 630, 2.141, 631,
          3.725, 632, 3.912, 633, 2.461, 634, 2.461, 635, 2.461, 636, 1.107,
          637, 2.461, 638, 2.175, 639, 2.461, 640, 2.283, 641, 3.725, 642,
          2.461, 643, 2.461, 644, 2.461, 645, 2.461, 646, 4.171, 647, 5.013,
          648, 2.283, 649, 2.023, 650, 3.696, 651, 2.283, 652, 3.456, 653,
          2.283, 654, 2.283, 655, 2.283, 656, 2.283, 657, 2.283, 658, 2.283,
          659, 2.283, 660, 2.023, 661, 2.141, 662, 2.283, 663, 2.283, 664,
          2.283, 665, 2.283, 666, 2.283, 667, 1.755, 668, 1.685, 669, 4.171,
          670, 3.456, 671, 3.456, 672, 2.283, 673, 2.283, 674, 2.283, 675,
          2.141, 676, 2.283, 677, 2.283, 678, 2.283, 679, 1.62, 680, 2.283, 681,
          2.283, 682, 2.283, 683, 1.561, 684, 2.283, 685, 2.283, 686, 2.461,
          687, 2.283, 688, 2.273, 689, 3.725, 690, 2.283, 691, 2.283, 692,
          2.283, 693, 2.461, 694, 3.725, 695, 2.283, 696, 2.461, 697, 2.141,
          698, 3.725, 699, 2.461, 700, 2.141, 701, 2.461, 702, 2.461, 703,
          2.461, 704, 3.725, 705, 2.461, 706, 2.141, 707, 2.461, 708, 3.725,
          709, 3.063, 710, 3.725, 711, 2.141, 712, 2.141, 713, 2.461, 714,
          2.461, 715, 2.461, 716, 2.141, 717, 2.283, 718, 2.283, 719, 2.141,
          720, 0.785, 721, 2.461, 722, 1.834, 723, 2.141, 724, 2.023, 725,
          2.461, 726, 2.283, 727, 2.461, 728, 2.283, 729, 2.461, 730, 2.461,
          731, 2.283, 732, 2.461, 733, 2.461, 734, 2.461, 735, 2.461, 736,
          4.495, 737, 2.461, 738, 2.461, 739, 2.141, 740, 2.283, 741, 2.461,
          742, 2.461, 743, 2.283, 744, 2.141, 745, 2.461, 746, 2.461, 747,
          2.461, 748, 2.461, 749, 3.456, 750, 3.725, 751, 2.461, 752, 2.283,
        ],
      ],
      ["title/interfaces/PlaylistFilters.html", [0, 0.042, 90, 1.844]],
      [
        "body/interfaces/PlaylistFilters.html",
        [
          0, 0.083, 1, 1.873, 2, 0.885, 3, 0.072, 4, 0.062, 5, 0.062, 6, 1.987,
          7, 0.052, 8, 0.33, 9, 2.602, 10, 0.548, 11, 0.112, 12, 0.009, 13,
          0.14, 14, 1.147, 15, 1.31, 16, 2.682, 17, 1.637, 18, 1.987, 19, 2.904,
          20, 2.938, 21, 2.23, 22, 0.279, 23, 1.124, 24, 2.23, 25, 1.631, 26,
          1.583, 27, 2.05, 28, 1.849, 29, 1.82, 30, 1.593, 31, 1.379, 32, 2.26,
          33, 3.5, 34, 2.05, 35, 2.05, 36, 1.517, 37, 1.474, 38, 1.434, 39,
          1.097, 40, 1.928, 41, 2.05, 42, 1.928, 43, 2.05, 44, 2.05, 45, 1.314,
          46, 3.394, 47, 1.299, 48, 3.686, 49, 2.05, 50, 3.352, 51, 1.928, 52,
          1.928, 53, 2.05, 54, 1.987, 55, 2.05, 56, 0.783, 57, 1.508, 58, 1.987,
          59, 1.873, 60, 1.873, 61, 1.873, 62, 1.591, 63, 1.873, 64, 1.873, 65,
          1.179, 66, 1.82, 67, 1.987, 68, 0.863, 69, 0.885, 70, 1.873, 71,
          1.873, 72, 2.322, 73, 1.984, 74, 2.602, 75, 1.935, 76, 2.05, 77,
          1.721, 78, 1.987, 79, 1.928, 80, 3.028, 81, 1.873, 82, 1.987, 83,
          1.769, 84, 1.299, 85, 1.928, 86, 1.721, 87, 1.721, 88, 1.398, 89,
          3.021, 90, 2.527, 91, 3.352, 92, 3.352, 93, 3.131, 94, 3.131, 95,
          0.006, 96, 0.006, 97, 1.029,
        ],
      ],
      ["title/injectables/PlaylistService.html", [753, 0.871, 2878, 3.637]],
      [
        "body/injectables/PlaylistService.html",
        [
          1, 2.67, 3, 0.053, 4, 0.046, 5, 0.105, 7, 0.039, 8, 0.266, 9, 2.749,
          10, 0.536, 11, 0.118, 12, 0.01, 13, 0.053, 15, 1.185, 22, 0.29, 26,
          1.321, 37, 0.635, 39, 1.192, 45, 1.872, 46, 2.158, 52, 3.432, 54,
          1.462, 56, 0.85, 57, 1.638, 59, 2.67, 60, 2.67, 68, 1.459, 69, 1.408,
          77, 1.266, 80, 2.617, 83, 1.921, 87, 2.222, 89, 2.69, 90, 2.67, 95,
          0.005, 96, 0.005, 97, 1.006, 103, 0.545, 107, 0.375, 130, 0.138, 134,
          0.751, 135, 1.597, 145, 0.807, 150, 2.298, 205, 3.597, 208, 1.771,
          209, 1.57, 211, 1.221, 227, 1.138, 279, 1.556, 286, 1.68, 293, 2.746,
          343, 3.364, 348, 2.922, 525, 4.501, 538, 1.168, 544, 3.757, 636,
          0.807, 640, 3.722, 739, 3.491, 753, 0.961, 754, 3.731, 755, 1.232,
          758, 0.984, 769, 1.333, 771, 1.648, 779, 3.757, 780, 1.688, 781,
          4.972, 786, 3.699, 813, 0.888, 818, 1.724, 824, 2.025, 825, 1.232,
          826, 1.199, 892, 4.011, 955, 3.299, 1032, 2.862, 1218, 2.234, 1234,
          4.011, 1235, 4.15, 1248, 3.757, 1272, 3.491, 1275, 3.722, 1276, 2.122,
          1277, 2.717, 1278, 2.717, 1279, 2.717, 1287, 4.769, 1290, 2.979, 1297,
          2.979, 1299, 2.717, 1585, 4.011, 1589, 3.491, 1693, 4.399, 1730,
          3.134, 2098, 3.117, 2878, 4.011, 2879, 2.979, 2880, 5.929, 2881,
          4.987, 2882, 5.929, 2883, 4.987, 2884, 6.547, 2885, 4.987, 2886,
          5.929, 2887, 4.987, 2888, 4.987, 2889, 4.987, 2890, 5.929, 2891,
          5.929, 2892, 4.987, 2893, 5.929, 2894, 4.987, 2895, 4.987, 2896,
          3.378, 2897, 5.775, 2898, 3.378, 2899, 4.987, 2900, 3.378, 2901,
          7.309, 2902, 4.987, 2903, 3.378, 2904, 3.378, 2905, 6.547, 2906,
          3.378, 2907, 4.987, 2908, 4.987, 2909, 3.378, 2910, 4.987, 2911,
          3.378, 2912, 4.987, 2913, 4.987, 2914, 3.378, 2915, 3.378, 2916,
          3.378, 2917, 4.399, 2918, 4.987, 2919, 3.378, 2920, 4.987, 2921,
          3.378, 2922, 4.987, 2923, 3.378, 2924, 4.987, 2925, 3.378, 2926,
          6.547, 2927, 3.378, 2928, 4.987, 2929, 3.378, 2930, 3.378, 2931,
          4.987, 2932, 4.987, 2933, 3.378, 2934, 3.378, 2935, 3.378, 2936,
          4.987, 2937, 3.378, 2938, 4.987, 2939, 3.378, 2940, 3.378, 2941,
          2.521, 2942, 3.378, 2943, 3.378, 2944, 3.378, 2945, 3.378, 2946,
          4.987, 2947, 3.378, 2948, 3.378, 2949, 3.378, 2950, 3.378, 2951,
          3.378, 2952, 4.987, 2953, 3.378,
        ],
      ],
      ["title/interfaces/PlaylistSong.html", [0, 0.042, 51, 1.899]],
      [
        "body/interfaces/PlaylistSong.html",
        [
          0, 0.083, 1, 1.917, 2, 0.906, 3, 0.074, 4, 0.064, 5, 0.064, 6, 2.035,
          7, 0.054, 8, 0.336, 9, 3.319, 10, 0.549, 11, 0.113, 12, 0.009, 13,
          0.141, 14, 1.156, 15, 1.386, 16, 2.725, 17, 1.656, 18, 2.035, 19,
          2.813, 20, 2.962, 21, 2.245, 22, 0.267, 23, 1.151, 24, 2.252, 25,
          1.669, 26, 1.579, 27, 2.099, 28, 1.805, 29, 1.863, 30, 1.608, 31,
          1.401, 32, 2.296, 33, 3.528, 34, 2.099, 35, 2.099, 36, 1.541, 37,
          1.625, 38, 1.468, 39, 1.124, 40, 1.974, 41, 2.099, 42, 1.974, 43,
          2.099, 44, 2.099, 45, 1.335, 46, 2.725, 47, 1.33, 48, 3.384, 49,
          2.099, 50, 2.81, 51, 2.644, 52, 3.184, 53, 3.384, 54, 3.281, 55,
          2.099, 56, 0.801, 57, 1.544, 58, 2.035, 59, 1.917, 60, 1.917, 61,
          1.917, 62, 1.617, 63, 1.917, 64, 1.917, 65, 1.207, 66, 1.863, 67,
          2.035, 68, 0.884, 69, 0.906, 70, 1.917, 71, 1.917, 72, 2.359, 73,
          2.016, 74, 2.644, 75, 1.965, 76, 2.099, 77, 1.762, 78, 2.035, 79,
          1.974, 80, 2.66, 81, 1.917, 82, 2.035, 83, 1.811, 84, 1.33, 85, 1.974,
          86, 1.762, 87, 1.762, 88, 1.432, 89, 2.425, 90, 1.917, 91, 2.099, 92,
          2.099, 93, 2.099, 94, 2.099, 95, 0.006, 96, 0.006,
        ],
      ],
      ["title/components/RegisterComponent.html", [104, 0.502, 1007, 1.485]],
      [
        "body/components/RegisterComponent.html",
        [
          3, 0.043, 4, 0.037, 5, 0.037, 7, 0.031, 8, 0.227, 11, 0.058, 12, 0.01,
          13, 0.043, 14, 0.401, 17, 1.217, 22, 0.215, 39, 0.654, 62, 1.092, 68,
          1.323, 69, 0.528, 72, 2.636, 84, 1.475, 95, 0.004, 96, 0.004, 97,
          0.322, 98, 0.756, 103, 0.635, 104, 0.579, 107, 0.304, 108, 2.127, 109,
          0.972, 111, 0.947, 121, 1.953, 122, 1.822, 123, 1.786, 124, 1.328,
          125, 0.947, 126, 0.969, 128, 2.254, 130, 0.112, 131, 0.813, 135,
          2.127, 136, 1.757, 145, 0.654, 160, 1.185, 161, 1.262, 163, 1.222,
          165, 2.191, 168, 1.117, 194, 1.185, 209, 0.503, 211, 1.041, 227, 2.94,
          258, 1.185, 259, 2.662, 276, 3.638, 286, 2.451, 293, 3.508, 343,
          1.639, 377, 2.254, 419, 2.814, 482, 1.812, 504, 1.812, 514, 3.451,
          515, 1.642, 516, 2.801, 523, 0.855, 534, 1.812, 636, 1.738, 638,
          1.731, 667, 2.441, 668, 1.508, 683, 1.398, 688, 0.999, 719, 1.917,
          720, 1.092, 722, 2.551, 758, 0.84, 763, 3.175, 769, 1.247, 771, 0.528,
          780, 1.331, 799, 3.175, 813, 1.913, 828, 2.814, 837, 1.917, 848,
          2.978, 854, 2.673, 913, 1.397, 914, 0.947, 915, 0.947, 916, 0.947,
          918, 0.947, 920, 0.899, 921, 1.892, 934, 1.397, 939, 3.891, 942,
          2.203, 944, 5.109, 945, 1.264, 952, 2.203, 957, 0.947, 958, 1.471,
          959, 1.471, 960, 0.947, 961, 2.034, 962, 0.947, 963, 0.947, 964,
          0.947, 965, 0.947, 966, 0.947, 967, 1.328, 968, 1.804, 969, 0.877,
          970, 0.947, 971, 0.899, 972, 0.947, 973, 0.947, 974, 0.877, 975,
          1.471, 976, 0.899, 977, 0.947, 978, 0.899, 979, 0.947, 980, 0.899,
          981, 0.947, 982, 0.947, 983, 0.899, 984, 0.947, 985, 0.877, 986,
          1.328, 987, 0.947, 988, 0.813, 989, 0.834, 990, 0.947, 991, 0.947,
          992, 0.834, 993, 0.855, 994, 1.295, 995, 0.947, 996, 0.813, 997,
          0.834, 998, 0.855, 999, 1.471, 1000, 0.834, 1001, 0.855, 1002, 0.923,
          1003, 0.947, 1004, 0.877, 1005, 0.877, 1006, 0.899, 1007, 1.932, 1008,
          0.947, 1009, 0.899, 1010, 0.877, 1011, 0.947, 1012, 0.899, 1013,
          0.947, 1014, 0.877, 1015, 1.433, 1016, 0.899, 1017, 0.947, 1018,
          0.899, 1019, 0.899, 1020, 0.923, 1021, 0.947, 1022, 1.721, 1066,
          3.891, 1067, 3.175, 1068, 5.05, 1069, 3.894, 1070, 4.218, 1072, 1.812,
          1074, 3.696, 1077, 3.894, 1078, 2.978, 1079, 2.044, 1080, 3.652, 1082,
          2.814, 1087, 4.571, 1088, 3.891, 1089, 4.237, 1092, 2.978, 1093,
          3.894, 1095, 4.118, 1096, 2.978, 1097, 2.814, 1100, 1.917, 1101,
          2.044, 1107, 4.213, 1108, 4.213, 1112, 4.72, 1114, 4.213, 1115, 2.044,
          1116, 3.894, 1118, 3.451, 1122, 2.978, 1126, 3.175, 1129, 1.721, 1130,
          2.673, 1134, 4.459, 1135, 2.044, 1136, 2.044, 1137, 3.894, 1138,
          2.044, 1141, 2.673, 1142, 4.118, 1143, 4.459, 1144, 2.673, 1150,
          3.753, 1154, 3.652, 1157, 2.203, 1160, 2.203, 1161, 1.917, 1165,
          2.203, 1173, 1.917, 1174, 2.203, 1186, 2.203, 1188, 3.422, 1189,
          3.175, 1194, 2.203, 1305, 1.397, 1306, 1.397, 1312, 4.196, 1313, 4.72,
          1314, 2.328, 1330, 0.899, 1331, 1.398, 1335, 1.304, 1336, 2.203, 1337,
          2.203, 1338, 1.304, 1345, 2.551, 1348, 5.429, 1350, 1.642, 1353,
          2.172, 1366, 2.026, 1370, 2.343, 1374, 2.172, 1381, 1.511, 1385,
          2.873, 1390, 2.328, 1433, 2.814, 1438, 5.229, 1449, 2.978, 1450,
          2.978, 1460, 2.416, 1464, 2.416, 1476, 3.753, 1507, 2.203, 1520,
          2.673, 1521, 2.978, 1551, 2.343, 1552, 2.343, 1555, 3.239, 1707,
          4.459, 1742, 3.422, 1748, 2.416, 1754, 4.118, 1757, 3.175, 1762,
          3.175, 1771, 1.721, 1779, 2.044, 1780, 2.044, 1782, 3.175, 1785,
          2.044, 1786, 2.044, 1840, 4.118, 1848, 1.349, 1871, 2.044, 1914,
          1.349, 2009, 1.812, 2012, 2.203, 2071, 3.753, 2306, 3.422, 2308,
          2.044, 2312, 2.044, 2318, 4.602, 2319, 4.602, 2322, 3.753, 2349, 4.39,
          2362, 3.422, 2378, 3.175, 2387, 2.416, 2396, 2.044, 2397, 2.044, 2399,
          2.203, 2403, 2.416, 2406, 2.416, 2427, 3.422, 2430, 2.203, 2432,
          3.753, 2586, 4.196, 2587, 3.894, 2591, 4.118, 2610, 3.753, 2614,
          2.416, 2615, 2.416, 2616, 2.044, 2617, 2.044, 2618, 3.753, 2621,
          2.416, 2622, 2.416, 2623, 2.203, 2626, 3.753, 2627, 2.203, 2628,
          2.203, 2630, 2.416, 2631, 2.416, 2632, 2.416, 2633, 2.416, 2637,
          3.422, 2639, 3.753, 2640, 3.753, 2641, 3.753, 2644, 2.416, 2649,
          3.753, 2653, 4.602, 2654, 5.189, 2658, 2.416, 2954, 2.416, 2955,
          5.217, 2956, 4.255, 2957, 4.39, 2958, 5.882, 2959, 5.882, 2960, 5.882,
          2961, 5.882, 2962, 5.882, 2963, 2.739, 2964, 2.739, 2965, 2.739, 2966,
          2.739, 2967, 2.739, 2968, 2.739, 2969, 2.739, 2970, 2.739, 2971,
          2.739, 2972, 4.255, 2973, 2.739, 2974, 2.739, 2975, 2.739, 2976,
          2.739, 2977, 2.739, 2978, 2.739, 2979, 2.416, 2980, 2.739, 2981,
          2.739, 2982, 2.739, 2983, 2.739, 2984, 2.416, 2985, 2.416, 2986,
          2.416, 2987, 2.739, 2988, 3.753, 2989, 4.255, 2990, 4.255, 2991,
          4.255, 2992, 2.739, 2993, 3.753, 2994, 2.739, 2995, 2.416, 2996,
          2.416, 2997, 2.739, 2998, 2.416, 2999, 2.739, 3000, 2.739, 3001,
          2.739, 3002, 2.739, 3003, 2.416, 3004, 4.255, 3005, 2.739, 3006,
          2.739, 3007, 2.739, 3008, 2.739, 3009, 2.739, 3010, 2.416, 3011,
          2.739, 3012, 2.739, 3013, 2.739, 3014, 4.255, 3015, 2.739,
        ],
      ],
      ["title/interfaces/RegisterCredentials.html", [0, 0.042, 1390, 2.018]],
      [
        "body/interfaces/RegisterCredentials.html",
        [
          0, 0.076, 2, 1.219, 3, 0.099, 4, 0.086, 5, 0.086, 7, 0.072, 8, 0.405,
          10, 0.535, 11, 0.111, 12, 0.009, 13, 0.133, 14, 1.193, 17, 2.019, 22,
          0.285, 28, 1.375, 62, 2.222, 65, 1.625, 95, 0.008, 96, 0.008, 103,
          0.633, 130, 0.259, 1315, 3.118, 1376, 2.739, 1377, 4.431, 1378, 4.839,
          1379, 3.977, 1381, 3.072, 1382, 3.231, 1383, 3.395, 1387, 4.431, 1389,
          3.353, 1390, 3.639, 1392, 3.632, 1393, 4.56, 1394, 4.724, 1395, 4.431,
          1396, 2.825, 1397, 4.724,
        ],
      ],
      [
        "title/interfaces/RegisterCredentials-1.html",
        [0, 0.035, 98, 1.047, 1390, 1.694],
      ],
      [
        "body/interfaces/RegisterCredentials-1.html",
        [
          0, 0.078, 2, 1.183, 3, 0.097, 4, 0.083, 5, 0.083, 7, 0.07, 8, 0.398,
          10, 0.536, 11, 0.109, 12, 0.009, 13, 0.135, 14, 1.255, 17, 2.002, 22,
          0.283, 28, 1.334, 62, 2.203, 65, 1.917, 95, 0.008, 96, 0.008, 103,
          0.511, 130, 0.251, 133, 1.743, 1311, 3.025, 1315, 3.025, 1378, 4.908,
          1381, 3.136, 1382, 3.134, 1383, 3.333, 1389, 3.253, 1390, 3.592, 1392,
          3.524, 1396, 2.741, 1543, 3.859, 1544, 3.859, 1545, 3.382, 1546,
          2.579, 1547, 4.062, 1548, 3.859, 1549, 3.859, 1550, 3.859, 1551,
          3.382, 1552, 3.382, 1553, 3.681, 1554, 3.681, 1555, 3.382,
        ],
      ],
      ["title/interfaces/RegisterDto.html", [0, 0.042, 63, 1.844]],
      [
        "body/interfaces/RegisterDto.html",
        [
          0, 0.083, 1, 1.958, 2, 0.925, 3, 0.075, 4, 0.065, 5, 0.065, 6, 2.078,
          7, 0.055, 8, 0.34, 9, 2.681, 10, 0.549, 11, 0.104, 12, 0.009, 13,
          0.141, 14, 1.165, 15, 1.327, 16, 3.445, 17, 1.91, 18, 2.078, 19, 2.83,
          20, 2.983, 21, 2.259, 22, 0.269, 23, 1.175, 24, 2.271, 25, 1.705, 26,
          1.573, 27, 2.143, 28, 1.814, 29, 1.903, 30, 1.622, 31, 1.421, 32,
          2.329, 33, 3.553, 34, 2.143, 35, 2.143, 36, 1.563, 37, 1.497, 38,
          1.499, 39, 1.148, 40, 2.016, 41, 2.143, 42, 2.016, 43, 2.143, 44,
          2.143, 45, 1.354, 46, 2.763, 47, 1.358, 48, 3.413, 49, 2.143, 50,
          2.85, 51, 2.016, 52, 2.016, 53, 2.143, 54, 2.078, 55, 2.143, 56,
          0.818, 57, 1.577, 58, 2.078, 59, 1.958, 60, 1.958, 61, 1.958, 62,
          2.044, 63, 2.604, 64, 1.958, 65, 1.233, 66, 1.903, 67, 2.078, 68,
          0.903, 69, 0.925, 70, 1.958, 71, 1.958, 72, 2.393, 73, 2.044, 74,
          2.681, 75, 1.993, 76, 2.143, 77, 1.799, 78, 2.078, 79, 2.016, 80,
          2.688, 81, 1.958, 82, 2.078, 83, 1.85, 84, 1.358, 85, 2.016, 86,
          1.799, 87, 1.799, 88, 1.462, 89, 2.46, 90, 1.958, 91, 2.143, 92,
          2.143, 93, 2.143, 94, 2.143, 95, 0.006, 96, 0.006,
        ],
      ],
      ["title/classes/RegisterError.html", [130, 0.185, 1370, 2.49]],
      [
        "body/classes/RegisterError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.523, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 1.851, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.567, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 4.923, 1359, 6.041, 1360, 5.687, 1364,
          5.687, 1365, 5.687, 1366, 3.426, 1367, 3.824, 1368, 3.811, 1369,
          3.824, 1370, 4.315, 1371, 3.824, 1372, 4.129, 1373, 3.824, 1374,
          3.673, 1375, 3.824, 1407, 4.76, 2660, 4.047, 2661, 4.047, 3016, 5.781,
        ],
      ],
      ["title/interfaces/RegisterRequestDTO.html", [0, 0.042, 2664, 3.375]],
      [
        "body/interfaces/RegisterRequestDTO.html",
        [
          0, 0.073, 2, 1.299, 3, 0.106, 4, 0.091, 5, 0.091, 7, 0.077, 8, 0.421,
          10, 0.537, 11, 0.114, 12, 0.009, 13, 0.124, 17, 2.054, 22, 0.291, 62,
          2.26, 95, 0.008, 96, 0.008, 2662, 5.034, 2663, 5.425, 2664, 5.894,
        ],
      ],
      ["title/injectables/RegisterUseCase.html", [753, 0.871, 2957, 3.375]],
      [
        "body/injectables/RegisterUseCase.html",
        [
          3, 0.097, 4, 0.084, 5, 0.084, 7, 0.07, 10, 0.438, 11, 0.109, 12,
          0.009, 13, 0.097, 17, 1.882, 22, 0.272, 28, 1.341, 62, 1.585, 95,
          0.008, 96, 0.008, 97, 0.949, 103, 0.671, 107, 0.685, 130, 0.252, 134,
          1.373, 135, 2.018, 136, 1.373, 535, 2.807, 538, 2.135, 753, 1.443,
          755, 2.251, 758, 1.478, 769, 1.243, 771, 1.554, 780, 1.478, 825,
          2.251, 826, 2.192, 1314, 3.6, 1366, 2.939, 1376, 3.242, 1381, 2.66,
          1385, 3.399, 1390, 3.744, 1396, 2.755, 1424, 4.321, 1426, 4.321, 1431,
          4.955, 1469, 4.607, 1546, 3.522, 1844, 3.701, 1847, 3.879, 1848,
          3.041, 2666, 4.955, 2667, 6.026, 2669, 6.608, 2671, 4.965, 2673,
          4.965, 2675, 4.607, 2676, 5.445, 2677, 4.965, 2678, 4.965, 2679,
          5.445, 2957, 5.591, 3017, 5.445, 3018, 6.173, 3019, 6.173, 3020,
          6.173, 3021, 6.173,
        ],
      ],
      [
        "title/components/ResetPasswordComponent.html",
        [104, 0.502, 1009, 1.485],
      ],
      [
        "body/components/ResetPasswordComponent.html",
        [
          3, 0.062, 4, 0.053, 5, 0.053, 7, 0.045, 8, 0.297, 10, 0.231, 11,
          0.076, 12, 0.01, 13, 0.062, 14, 0.577, 17, 1.51, 22, 0.218, 56, 0.672,
          62, 1.806, 68, 1.396, 72, 3.033, 75, 1.741, 95, 0.006, 96, 0.006, 97,
          0.464, 103, 0.642, 104, 0.718, 107, 0.438, 108, 2.639, 109, 1.4, 111,
          1.363, 121, 2.021, 122, 1.884, 123, 2.342, 124, 1.741, 125, 1.241,
          126, 1.271, 128, 2.954, 130, 0.161, 131, 1.171, 135, 2.076, 136, 1.44,
          194, 1.706, 209, 0.723, 227, 1.879, 258, 1.706, 259, 2.787, 276, 2.57,
          391, 1.942, 514, 4.281, 515, 2.364, 523, 1.231, 636, 1.774, 638,
          1.432, 668, 2.171, 683, 2.012, 720, 1.432, 758, 1.101, 763, 4.163,
          769, 1.221, 771, 0.759, 780, 1.101, 799, 4.163, 813, 1.952, 837, 2.76,
          848, 2.76, 913, 1.831, 914, 1.363, 915, 1.363, 916, 1.363, 918, 1.363,
          920, 1.295, 921, 2.205, 934, 1.831, 939, 4.281, 945, 1.656, 957,
          1.363, 958, 1.929, 959, 1.929, 960, 1.363, 961, 2.433, 962, 1.363,
          963, 1.363, 964, 1.363, 965, 1.363, 966, 1.363, 967, 1.741, 968,
          2.238, 969, 1.262, 970, 1.363, 971, 1.295, 972, 1.363, 973, 1.363,
          974, 1.262, 975, 1.929, 976, 1.295, 977, 1.363, 978, 1.295, 979,
          1.363, 980, 1.295, 981, 1.363, 982, 1.363, 983, 1.295, 984, 1.363,
          985, 1.262, 986, 1.741, 987, 1.363, 988, 1.171, 989, 1.2, 990, 1.363,
          991, 1.363, 992, 1.2, 993, 1.231, 994, 1.2, 995, 1.363, 996, 1.171,
          997, 1.2, 998, 1.231, 999, 1.929, 1000, 1.2, 1001, 1.231, 1002, 1.328,
          1003, 1.363, 1004, 1.262, 1005, 1.262, 1006, 1.295, 1007, 1.295, 1008,
          1.363, 1009, 2.31, 1010, 2.635, 1011, 1.363, 1012, 1.295, 1013, 1.363,
          1014, 1.262, 1015, 1.879, 1016, 1.295, 1017, 1.363, 1018, 1.295, 1019,
          1.295, 1020, 1.328, 1021, 1.363, 1022, 2.477, 1066, 2.608, 1068,
          4.281, 1070, 2.364, 1072, 2.608, 1073, 2.608, 1074, 4.067, 1082,
          2.608, 1087, 4.665, 1088, 4.281, 1089, 2.477, 1107, 2.608, 1108,
          2.608, 1118, 3.689, 1130, 3.505, 1141, 3.505, 1144, 3.505, 1305,
          1.831, 1306, 1.831, 1314, 2.888, 1330, 1.295, 1331, 2.012, 1338,
          1.877, 1350, 3.343, 1353, 2.847, 1366, 2.656, 1374, 2.847, 1381, 1.98,
          1433, 4.281, 1449, 3.904, 1450, 3.904, 1519, 3.478, 1520, 4.665, 1521,
          3.904, 1612, 5.708, 1707, 5.197, 1734, 4.486, 1754, 4.925, 1757,
          4.163, 1771, 2.477, 1779, 2.943, 1780, 2.943, 1782, 4.163, 1785,
          2.943, 1786, 2.943, 1977, 3.171, 2009, 2.608, 2378, 2.943, 2422,
          3.478, 2586, 5.206, 2616, 2.943, 2617, 2.943, 2623, 3.171, 2627,
          3.171, 2628, 4.486, 2979, 3.478, 3022, 7.14, 3023, 7.14, 3024, 3.478,
          3025, 6.472, 3026, 5.577, 3027, 5.251, 3028, 7.036, 3029, 3.943, 3030,
          3.943, 3031, 3.943, 3032, 3.943, 3033, 3.943, 3034, 5.577, 3035,
          3.943, 3036, 3.943, 3037, 3.943, 3038, 3.943, 3039, 3.943, 3040,
          3.943, 3041, 3.943, 3042, 3.943, 3043, 3.943, 3044, 5.577, 3045, 4.92,
          3046, 3.943, 3047, 3.943, 3048, 3.943, 3049, 3.943, 3050, 3.943, 3051,
          3.943, 3052, 3.943, 3053, 3.943,
        ],
      ],
      [
        "title/injectables/ResetPasswordUseCase.html",
        [753, 0.871, 3027, 3.375],
      ],
      [
        "body/injectables/ResetPasswordUseCase.html",
        [
          3, 0.095, 4, 0.082, 5, 0.082, 7, 0.069, 10, 0.508, 11, 0.108, 12,
          0.009, 13, 0.095, 17, 1.944, 22, 0.27, 28, 1.608, 95, 0.008, 96,
          0.008, 97, 0.941, 103, 0.666, 107, 0.672, 130, 0.248, 134, 1.347, 135,
          2.155, 136, 1.347, 145, 1.447, 209, 1.111, 535, 2.774, 538, 2.094,
          753, 1.426, 755, 2.208, 758, 1.461, 769, 1.232, 771, 1.541, 780,
          1.461, 825, 2.208, 826, 2.15, 1314, 3.57, 1338, 2.883, 1366, 2.883,
          1376, 3.204, 1381, 2.629, 1431, 4.897, 1546, 3.499, 1844, 3.63, 1847,
          3.805, 1848, 2.983, 2666, 4.897, 2667, 5.956, 2671, 5.956, 2673, 4.87,
          2674, 5.341, 2675, 4.519, 2677, 4.87, 2678, 4.87, 3027, 5.526, 3054,
          7.35, 3055, 5.341, 3056, 6.055, 3057, 7.404, 3058, 6.055, 3059, 6.055,
          3060, 6.055, 3061, 6.055, 3062, 6.055, 3063, 6.055, 3064, 6.055, 3065,
          6.055,
        ],
      ],
      ["title/components/SearchComponent.html", [104, 0.502, 1012, 1.485]],
      [
        "body/components/SearchComponent.html",
        [
          3, 0.06, 4, 0.052, 5, 0.052, 7, 0.044, 8, 0.29, 10, 0.459, 11, 0.094,
          12, 0.01, 13, 0.06, 14, 0.558, 22, 0.299, 24, 2.587, 29, 2.517, 56,
          0.928, 68, 1.194, 84, 2.343, 87, 1.429, 88, 1.934, 95, 0.006, 96,
          0.006, 97, 0.641, 103, 0.453, 104, 0.705, 107, 0.423, 108, 2.59, 109,
          1.354, 121, 2.015, 122, 1.879, 123, 2.287, 124, 1.7, 125, 1.212, 126,
          1.241, 130, 0.156, 131, 1.132, 134, 1.413, 208, 1.933, 276, 4.014,
          327, 3.602, 328, 2.683, 329, 3.422, 330, 3.422, 331, 3.422, 348,
          3.093, 377, 3.671, 386, 3.125, 388, 2.78, 521, 2.78, 523, 1.19, 548,
          3.812, 587, 4.064, 636, 1.301, 638, 1.631, 720, 1.398, 722, 3.265,
          724, 2.522, 758, 1.075, 769, 1.174, 771, 1.049, 780, 1.254, 813,
          1.432, 854, 5.474, 913, 1.788, 914, 1.318, 915, 1.318, 916, 1.318,
          918, 1.318, 920, 1.252, 921, 2.177, 934, 1.788, 945, 1.617, 955,
          4.584, 957, 1.318, 958, 1.883, 959, 1.883, 960, 1.318, 961, 2.396,
          962, 1.318, 963, 1.318, 964, 1.318, 965, 1.318, 966, 1.318, 967, 1.7,
          968, 2.197, 969, 1.22, 970, 1.318, 971, 1.252, 972, 1.318, 973, 1.318,
          974, 1.22, 975, 1.883, 976, 1.252, 977, 1.318, 978, 1.252, 979, 1.318,
          980, 1.252, 981, 1.318, 982, 1.318, 983, 1.252, 984, 1.318, 985, 1.22,
          986, 1.7, 987, 1.318, 988, 1.132, 989, 1.161, 990, 1.318, 991, 1.318,
          992, 1.161, 993, 1.19, 994, 1.161, 995, 1.318, 996, 1.132, 997, 1.161,
          998, 1.19, 999, 1.883, 1000, 1.161, 1001, 1.19, 1002, 1.284, 1003,
          1.318, 1004, 1.22, 1005, 1.22, 1006, 1.252, 1007, 1.252, 1008, 1.318,
          1009, 1.252, 1010, 1.22, 1011, 1.318, 1012, 2.276, 1013, 1.318, 1014,
          1.22, 1015, 1.835, 1016, 1.252, 1017, 1.318, 1018, 1.252, 1019, 1.252,
          1020, 1.284, 1021, 1.318, 1065, 4.804, 1117, 4.804, 1147, 6.321, 1238,
          4.584, 1325, 4.38, 1342, 3.812, 1448, 4.804, 1955, 2.396, 2371, 4.804,
          2463, 4.38, 2464, 4.804, 2492, 4.804, 3066, 3.363, 3067, 5.446, 3068,
          5.446, 3069, 7.33, 3070, 6.93, 3071, 5.446, 3072, 5.446, 3073, 3.813,
          3074, 3.813, 3075, 5.446, 3076, 3.813, 3077, 5.446, 3078, 3.813, 3079,
          5.446, 3080, 5.446, 3081, 5.446, 3082, 6.93, 3083, 5.446, 3084, 6.93,
          3085, 5.446, 3086, 5.446, 3087, 5.446, 3088, 6.93, 3089, 5.446, 3090,
          5.446, 3091, 5.446, 3092, 5.446, 3093, 5.446, 3094, 5.446, 3095,
          5.446, 3096, 5.446, 3097, 5.446, 3098, 5.446, 3099, 5.446, 3100,
          5.446, 3101, 5.446, 3102, 6.93, 3103, 3.813, 3104, 3.813, 3105, 7.33,
          3106, 3.813, 3107, 3.363, 3108, 6.454, 3109, 3.813, 3110, 3.813, 3111,
          5.446, 3112, 5.446, 3113, 6.93, 3114, 3.812, 3115, 5.446, 3116, 5.446,
        ],
      ],
      ["title/interfaces/SearchFilters.html", [0, 0.042, 86, 1.694]],
      [
        "body/interfaces/SearchFilters.html",
        [
          0, 0.083, 1, 1.889, 2, 0.892, 3, 0.073, 4, 0.063, 5, 0.063, 6, 2.005,
          7, 0.053, 8, 0.332, 9, 2.618, 10, 0.548, 11, 0.116, 12, 0.009, 13,
          0.14, 14, 1.151, 15, 1.313, 16, 2.698, 17, 1.644, 18, 2.005, 19,
          2.801, 20, 2.947, 21, 2.323, 22, 0.265, 23, 1.134, 24, 2.238, 25,
          1.645, 26, 1.585, 27, 2.068, 28, 1.798, 29, 1.836, 30, 1.718, 31,
          1.387, 32, 2.273, 33, 3.511, 34, 2.068, 35, 2.068, 36, 1.526, 37,
          1.556, 38, 1.446, 39, 1.107, 40, 1.945, 41, 2.068, 42, 1.945, 43,
          2.068, 44, 2.068, 45, 1.599, 46, 2.698, 47, 1.31, 48, 3.364, 49,
          2.068, 50, 2.783, 51, 1.945, 52, 1.945, 53, 2.068, 54, 2.005, 55,
          2.068, 56, 0.79, 57, 1.521, 58, 2.005, 59, 1.889, 60, 1.889, 61,
          1.889, 62, 1.601, 63, 1.889, 64, 1.889, 65, 1.189, 66, 1.836, 67,
          2.005, 68, 0.871, 69, 0.892, 70, 1.889, 71, 1.889, 72, 2.336, 73,
          1.996, 74, 2.618, 75, 1.946, 76, 2.068, 77, 1.736, 78, 2.005, 79,
          1.945, 80, 3.035, 81, 1.889, 82, 2.005, 83, 1.785, 84, 1.31, 85,
          1.945, 86, 2.336, 87, 2.824, 88, 2.295, 89, 3.03, 90, 1.889, 91,
          2.068, 92, 2.068, 93, 2.068, 94, 2.068, 95, 0.006, 96, 0.006, 97,
          1.014,
        ],
      ],
      ["title/interfaces/SearchResults.html", [0, 0.042, 3117, 3.375]],
      [
        "body/interfaces/SearchResults.html",
        [
          0, 0.044, 2, 0.921, 3, 0.075, 4, 0.065, 5, 0.065, 7, 0.055, 8, 0.339,
          10, 0.478, 11, 0.115, 12, 0.01, 13, 0.1, 21, 2.256, 26, 1.527, 30,
          1.734, 37, 1.537, 39, 1.522, 45, 1.686, 47, 2.159, 56, 0.815, 68,
          1.346, 69, 0.921, 80, 3.393, 81, 3.113, 83, 1.842, 85, 3.006, 86,
          2.386, 87, 3.127, 88, 1.456, 89, 2.758, 95, 0.006, 96, 0.006, 103,
          0.635, 107, 0.531, 119, 4.204, 130, 0.196, 135, 1.288, 145, 1.143,
          205, 3.196, 208, 1.698, 209, 1.59, 211, 1.171, 227, 1.611, 279, 3.517,
          286, 1.611, 348, 2.842, 494, 3.654, 525, 4.204, 526, 2.86, 538, 1.654,
          572, 2.744, 753, 1.227, 754, 3.655, 779, 3.654, 781, 4.813, 818,
          2.441, 824, 2.867, 825, 1.744, 826, 1.698, 1053, 3.348, 1235, 3.348,
          1238, 3.163, 1248, 2.744, 1276, 3.005, 1280, 3.57, 1282, 3.57, 1285,
          3.57, 1342, 3.348, 2316, 3.847, 2941, 3.57, 3108, 6.712, 3114, 3.348,
          3117, 4.753, 3118, 3.847, 3119, 3.57, 3120, 4.219, 3121, 4.219, 3122,
          4.219, 3123, 4.219, 3124, 4.219, 3125, 4.219, 3126, 4.219, 3127,
          4.219, 3128, 4.219, 3129, 4.219, 3130, 4.219, 3131, 4.219, 3132,
          4.219, 3133, 4.219, 3134, 4.219, 3135, 5.759, 3136, 4.219, 3137,
          4.219, 3138, 4.219, 3139, 3.847, 3140, 3.847, 3141, 4.219, 3142,
          4.219, 3143, 4.219, 3144, 4.219, 3145, 4.219, 3146, 4.219, 3147,
          4.219, 3148, 4.219,
        ],
      ],
      ["title/injectables/SearchService.html", [753, 0.871, 3119, 3.375]],
      [
        "body/injectables/SearchService.html",
        [
          0, 0.036, 3, 0.06, 4, 0.052, 5, 0.052, 7, 0.044, 8, 0.291, 10, 0.517,
          11, 0.119, 12, 0.01, 13, 0.086, 21, 2.216, 22, 0.28, 26, 1.571, 30,
          1.703, 37, 1.51, 39, 1.659, 45, 1.557, 47, 1.082, 56, 0.93, 68, 1.435,
          69, 1.051, 80, 3.406, 81, 1.56, 83, 2.103, 85, 3.204, 86, 2.601, 87,
          3.175, 88, 1.662, 89, 2.827, 95, 0.006, 96, 0.006, 97, 0.975, 103,
          0.578, 107, 0.424, 119, 2.106, 130, 0.156, 134, 0.851, 135, 1.715,
          145, 0.914, 205, 3.406, 208, 1.938, 209, 1.521, 211, 1.336, 227,
          1.289, 279, 3.198, 286, 1.839, 348, 3.098, 494, 3.132, 525, 2.106,
          526, 1.433, 538, 1.323, 572, 2.195, 636, 0.914, 753, 1.051, 754,
          3.895, 755, 1.395, 758, 1.077, 769, 1.306, 771, 1.597, 779, 3.982,
          780, 1.636, 781, 4.899, 786, 4.329, 813, 1.006, 818, 1.952, 824,
          2.293, 825, 1.395, 826, 1.358, 1053, 3.821, 1218, 2.53, 1235, 3.821,
          1238, 3.61, 1248, 3.132, 1276, 2.403, 1280, 2.855, 1282, 2.855, 1285,
          2.855, 1342, 3.821, 2316, 4.391, 2941, 2.855, 3108, 6.926, 3114,
          3.821, 3117, 2.855, 3118, 3.077, 3119, 4.074, 3120, 4.815, 3121,
          4.815, 3122, 4.815, 3123, 3.374, 3124, 4.815, 3125, 4.815, 3126,
          5.614, 3127, 3.374, 3128, 4.815, 3129, 4.815, 3130, 3.374, 3131,
          4.815, 3132, 4.815, 3133, 3.374, 3134, 4.815, 3135, 6.138, 3136,
          4.815, 3137, 3.374, 3138, 6.122, 3139, 3.077, 3140, 4.391, 3141,
          4.815, 3142, 3.374, 3143, 5.614, 3144, 3.374, 3145, 4.815, 3146,
          4.815, 3147, 5.614, 3148, 3.374, 3149, 5.458, 3150, 5.458, 3151,
          5.458, 3152, 5.458, 3153, 5.458, 3154, 5.458, 3155, 5.458, 3156,
          3.825, 3157, 3.825, 3158, 3.825, 3159, 3.825, 3160, 3.825, 3161,
          3.825, 3162, 3.825, 3163, 3.825, 3164, 3.825, 3165, 3.825, 3166,
          3.825, 3167, 3.825, 3168, 3.825,
        ],
      ],
      ["title/classes/SessionError.html", [130, 0.185, 1372, 2.594]],
      [
        "body/classes/SessionError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.523, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 1.851, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.567, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 4.923, 1359, 6.041, 1360, 5.687, 1364,
          5.687, 1365, 5.687, 1366, 3.426, 1367, 3.824, 1368, 3.811, 1369,
          3.824, 1370, 3.963, 1371, 3.824, 1372, 4.496, 1373, 3.824, 1374,
          3.673, 1375, 3.824, 1407, 4.76, 2660, 4.047, 2661, 4.047, 3169, 5.781,
        ],
      ],
      ["title/components/SideMenuCard.html", [104, 0.502, 1014, 1.447]],
      [
        "body/components/SideMenuCard.html",
        [
          0, 0.045, 3, 0.076, 4, 0.066, 5, 0.066, 7, 0.055, 10, 0.376, 11,
          0.098, 12, 0.009, 13, 0.076, 14, 0.709, 15, 0.786, 22, 0.269, 26,
          0.847, 45, 1.803, 69, 0.934, 95, 0.007, 96, 0.007, 97, 0.756, 100,
          2.388, 103, 0.535, 104, 0.8, 107, 0.538, 111, 1.676, 121, 2.051, 122,
          1.911, 125, 1.078, 126, 1.464, 130, 0.198, 131, 1.439, 134, 1.078,
          136, 1.078, 144, 1.976, 150, 2.96, 166, 3.403, 176, 2.905, 267, 3.045,
          310, 2.163, 343, 1.867, 516, 3.907, 523, 1.513, 538, 1.676, 638,
          1.649, 688, 2.343, 697, 3.392, 711, 3.392, 720, 1.649, 728, 4.795,
          758, 1.268, 769, 1.182, 771, 1.238, 780, 1.268, 913, 2.11, 914, 1.676,
          915, 1.676, 916, 1.676, 918, 1.676, 920, 1.591, 921, 2.372, 925,
          3.617, 934, 2.95, 945, 1.908, 957, 1.676, 958, 2.222, 959, 2.222, 960,
          1.676, 961, 2.654, 962, 1.676, 963, 1.676, 964, 1.676, 965, 1.676,
          966, 1.676, 967, 2.396, 968, 2.492, 969, 1.551, 970, 1.676, 971,
          1.591, 972, 1.676, 973, 1.676, 974, 1.551, 975, 2.222, 976, 1.591,
          977, 1.676, 978, 1.591, 979, 1.676, 980, 1.591, 981, 1.676, 982,
          1.676, 983, 1.591, 984, 1.676, 985, 1.551, 986, 2.005, 987, 1.676,
          988, 1.439, 989, 1.475, 990, 1.676, 991, 1.676, 992, 1.475, 993,
          1.513, 994, 1.475, 995, 1.676, 996, 1.439, 997, 1.475, 998, 1.513,
          999, 2.222, 1000, 1.475, 1001, 1.513, 1002, 1.633, 1003, 1.676, 1004,
          1.551, 1005, 1.551, 1006, 1.591, 1007, 1.591, 1008, 1.676, 1009,
          1.591, 1010, 1.551, 1011, 1.676, 1012, 1.591, 1013, 1.676, 1014,
          2.457, 1015, 2.765, 1016, 1.591, 1017, 1.676, 1018, 1.591, 1019,
          1.591, 1020, 1.633, 1021, 1.676, 1025, 4.795, 1305, 2.11, 1306, 2.11,
          1330, 1.591, 1333, 5.959, 1516, 3.617, 1912, 4.497, 1914, 3.165, 2771,
          3.392, 2773, 4.275, 2778, 3.617, 2874, 5.959, 2875, 4.275, 2876,
          6.769, 2877, 4.275, 3170, 6.425, 3171, 4.846,
        ],
      ],
      ["title/components/SideMenuItem.html", [104, 0.502, 1016, 1.485]],
      [
        "body/components/SideMenuItem.html",
        [
          3, 0.078, 4, 0.067, 5, 0.067, 7, 0.057, 8, 0.348, 11, 0.089, 12,
          0.009, 13, 0.078, 14, 0.727, 22, 0.246, 95, 0.007, 96, 0.007, 97,
          0.584, 103, 0.544, 104, 0.81, 107, 0.551, 111, 1.718, 121, 2.055, 122,
          1.914, 124, 1.551, 125, 1.453, 126, 1.488, 130, 0.203, 131, 1.476,
          144, 3.16, 523, 1.551, 535, 1.862, 638, 1.677, 688, 1.812, 718, 5.445,
          720, 1.677, 752, 3.708, 758, 1.289, 769, 1.194, 771, 0.957, 780, 0.98,
          913, 2.145, 914, 1.718, 915, 1.718, 916, 1.718, 918, 1.718, 920,
          1.631, 921, 2.391, 934, 2.959, 945, 1.94, 957, 1.718, 958, 2.258, 959,
          2.258, 960, 1.718, 961, 2.68, 962, 1.718, 963, 1.718, 964, 1.718, 965,
          1.718, 966, 1.718, 967, 2.039, 968, 2.523, 969, 1.59, 970, 1.718, 971,
          1.631, 972, 1.718, 973, 1.718, 974, 1.59, 975, 2.258, 976, 1.631, 977,
          1.718, 978, 1.631, 979, 1.718, 980, 1.631, 981, 1.718, 982, 1.718,
          983, 1.631, 984, 1.718, 985, 1.59, 986, 2.039, 987, 1.718, 988, 1.476,
          989, 1.513, 990, 1.718, 991, 1.718, 992, 1.513, 993, 1.551, 994,
          1.513, 995, 1.718, 996, 1.476, 997, 1.513, 998, 1.551, 999, 2.258,
          1000, 1.513, 1001, 1.551, 1002, 1.674, 1003, 1.718, 1004, 1.59, 1005,
          1.59, 1006, 2.396, 1007, 1.631, 1008, 1.718, 1009, 1.631, 1010, 1.59,
          1011, 1.718, 1012, 1.631, 1013, 1.718, 1014, 1.59, 1015, 2.784, 1016,
          2.545, 1017, 1.718, 1018, 1.631, 1019, 1.631, 1020, 1.674, 1021,
          1.718, 1305, 2.145, 1306, 2.145, 1307, 5.107, 1330, 1.631, 1332,
          6.475, 1914, 3.218, 1915, 7.101, 2675, 3.708, 2804, 5.253, 2807,
          5.869, 2812, 5.253, 2874, 6.008, 3172, 4.382, 3173, 6.531, 3174,
          6.531, 3175, 6.531, 3176, 4.969, 3177, 6.531, 3178, 4.969, 3179,
          4.969, 3180, 6.531, 3181, 4.969,
        ],
      ],
      ["title/injectables/SocialLoginUseCase.html", [753, 0.871, 2591, 3.165]],
      [
        "body/injectables/SocialLoginUseCase.html",
        [
          3, 0.099, 4, 0.085, 5, 0.085, 7, 0.072, 11, 0.103, 12, 0.009, 13,
          0.099, 22, 0.256, 95, 0.008, 96, 0.008, 97, 0.892, 103, 0.632, 107,
          0.7, 130, 0.258, 134, 1.403, 136, 1.403, 538, 2.18, 753, 1.462, 755,
          2.299, 758, 1.497, 769, 1.169, 771, 1.462, 780, 1.244, 825, 2.299,
          826, 2.238, 1314, 3.633, 1338, 3.002, 1376, 3.283, 1381, 2.694, 1546,
          3.547, 1551, 4.483, 1552, 4.483, 1553, 4.88, 1554, 4.88, 1555, 4.483,
          1750, 4.413, 1844, 3.779, 1847, 3.962, 1848, 3.106, 2591, 5.311, 2666,
          5.019, 3182, 7.18, 3183, 5.561, 3184, 6.305, 3185, 7.588, 3186, 6.305,
          3187, 6.305,
        ],
      ],
      ["title/interfaces/Song.html", [0, 0.042, 37, 0.85]],
      [
        "body/interfaces/Song.html",
        [
          0, 0.083, 1, 1.799, 2, 0.85, 3, 0.069, 4, 0.06, 5, 0.06, 6, 1.91, 7,
          0.05, 8, 0.322, 9, 2.533, 10, 0.549, 11, 0.12, 12, 0.009, 13, 0.14,
          14, 1.132, 15, 1.368, 16, 2.61, 17, 1.604, 18, 1.91, 19, 2.919, 20,
          3.118, 21, 2.379, 22, 0.261, 23, 1.08, 24, 2.194, 25, 1.567, 26,
          1.584, 27, 1.97, 28, 1.776, 29, 1.748, 30, 1.79, 31, 1.721, 32, 2.82,
          33, 3.714, 34, 1.97, 35, 1.97, 36, 1.893, 37, 1.501, 38, 2.306, 39,
          1.055, 40, 1.853, 41, 3.297, 42, 3.102, 43, 3.297, 44, 3.297, 45,
          1.279, 46, 2.61, 47, 1.248, 48, 3.297, 49, 1.97, 50, 2.692, 51, 1.853,
          52, 1.853, 53, 1.97, 54, 1.91, 55, 1.97, 56, 0.752, 57, 1.449, 58,
          1.91, 59, 1.799, 60, 1.799, 61, 1.799, 62, 1.549, 63, 1.799, 64,
          1.799, 65, 1.133, 66, 1.748, 67, 1.91, 68, 0.83, 69, 0.85, 70, 1.799,
          71, 1.799, 72, 2.26, 73, 1.931, 74, 2.533, 75, 1.883, 76, 1.97, 77,
          1.653, 78, 1.91, 79, 1.853, 80, 2.575, 81, 1.799, 82, 1.91, 83, 1.7,
          84, 1.248, 85, 1.853, 86, 1.653, 87, 1.653, 88, 1.344, 89, 2.323, 90,
          1.799, 91, 1.97, 92, 1.97, 93, 1.97, 94, 1.97, 95, 0.006, 96, 0.006,
          97, 1.004,
        ],
      ],
      ["title/interfaces/Song-1.html", [0, 0.035, 37, 0.713, 98, 1.047]],
      [
        "body/interfaces/Song-1.html",
        [
          0, 0.049, 2, 1.015, 3, 0.083, 4, 0.071, 5, 0.071, 7, 0.06, 8, 0.362,
          10, 0.529, 11, 0.116, 12, 0.01, 13, 0.083, 15, 1.402, 23, 2.118, 26,
          1.492, 28, 1.144, 30, 1.835, 31, 1.925, 36, 2.118, 37, 1.542, 38,
          2.701, 47, 1.918, 56, 1.156, 73, 1.686, 95, 0.007, 96, 0.007, 98,
          1.454, 103, 0.625, 104, 0.753, 107, 0.584, 121, 1.172, 122, 1.091,
          125, 1.172, 126, 1.2, 130, 0.215, 133, 1.849, 134, 1.172, 209, 0.966,
          211, 1.289, 313, 3.022, 358, 2.212, 485, 2.595, 486, 3.022, 488,
          3.022, 489, 3.022, 526, 3.242, 528, 2.427, 539, 2.848, 554, 2.79, 564,
          2.79, 627, 4.749, 688, 2.474, 720, 1.352, 985, 1.686, 986, 2.342, 988,
          2.015, 989, 2.285, 1159, 4.236, 1305, 1.729, 1306, 1.729, 1330, 1.729,
          1335, 2.508, 1927, 4.236, 1947, 2.688, 1949, 4.236, 2010, 3.931, 2078,
          3.31, 2079, 3.31, 2085, 3.484, 2088, 3.484, 2114, 3.31, 2115, 3.31,
          2116, 3.157, 2117, 3.484, 2118, 3.484, 2119, 3.484, 2120, 3.484, 2153,
          3.687, 2466, 3.687, 2483, 5.457, 2484, 5.457, 2587, 5.063, 2685,
          4.236, 2686, 4.646, 2689, 4.646, 2693, 4.646, 2694, 4.646, 2695,
          5.984, 2696, 4.646, 2697, 4.646, 2698, 4.646, 2699, 4.646, 2700,
          4.646, 2701, 4.646, 2702, 4.646, 2703, 4.646, 2704, 4.646, 2705,
          4.646, 2706, 4.646, 2707, 3.931, 2708, 4.646, 2709, 4.646, 2710,
          4.646, 2711, 4.646, 2712, 4.646,
        ],
      ],
      ["title/interfaces/Song-2.html", [0, 0.035, 37, 0.713, 358, 1.593]],
      [
        "body/interfaces/Song-2.html",
        [
          0, 0.069, 2, 0.984, 3, 0.08, 4, 0.069, 5, 0.069, 7, 0.058, 8, 0.354,
          10, 0.53, 11, 0.115, 12, 0.01, 13, 0.08, 15, 1.35, 22, 0.224, 23,
          1.917, 24, 1.975, 26, 1.502, 28, 1.445, 30, 1.723, 31, 1.743, 36,
          1.917, 37, 1.705, 38, 2.599, 45, 1.823, 47, 2.091, 56, 0.87, 68, 0.96,
          69, 1.424, 95, 0.007, 96, 0.007, 103, 0.554, 104, 0.738, 107, 0.567,
          121, 1.136, 122, 1.058, 124, 2.076, 125, 1.136, 126, 1.164, 130,
          0.209, 133, 1.828, 163, 2.28, 165, 2.145, 209, 1.437, 211, 1.25, 311,
          3.167, 526, 2.935, 528, 2.353, 530, 2.93, 539, 2.792, 638, 1.707, 688,
          2.696, 720, 1.311, 986, 2.076, 988, 1.517, 989, 2.385, 1055, 4.399,
          1305, 1.677, 1306, 1.677, 1308, 3.662, 1330, 1.677, 1335, 2.432, 1730,
          3.21, 1928, 2.607, 1947, 2.607, 1948, 4.495, 1955, 3.21, 1956, 3.378,
          2077, 3.917, 2078, 3.21, 2079, 3.21, 2080, 3.575, 2081, 3.812, 2082,
          3.575, 2083, 3.812, 2084, 3.812, 2085, 5.181, 2086, 3.812, 2087,
          4.963, 2088, 4.399, 2089, 3.812, 2090, 3.812, 2091, 4.433, 2092,
          3.812, 2093, 3.812, 2094, 3.812, 2095, 3.812, 2096, 3.062, 2097,
          3.575, 2098, 2.432, 2099, 3.812,
        ],
      ],
      ["title/interfaces/Song-3.html", [0, 0.035, 37, 0.713, 554, 2.01]],
      [
        "body/interfaces/Song-3.html",
        [
          0, 0.066, 2, 0.903, 3, 0.074, 4, 0.064, 5, 0.064, 7, 0.054, 8, 0.335,
          10, 0.525, 11, 0.113, 12, 0.01, 13, 0.074, 15, 1.346, 22, 0.158, 23,
          1.933, 24, 1.392, 26, 1.493, 30, 1.675, 31, 1.757, 36, 1.933, 37,
          1.624, 38, 2.465, 45, 1.675, 47, 2.005, 56, 1.071, 69, 0.903, 95,
          0.006, 96, 0.006, 98, 1.294, 103, 0.657, 104, 0.697, 105, 2.805, 107,
          0.52, 121, 1.043, 122, 0.971, 125, 1.043, 126, 1.068, 130, 0.192, 132,
          1.912, 133, 1.843, 139, 2.092, 145, 1.12, 209, 0.86, 211, 1.538, 286,
          1.579, 343, 1.806, 485, 2.31, 526, 2.959, 528, 2.16, 530, 2.49, 539,
          2.976, 638, 2.217, 683, 2.393, 720, 1.613, 921, 2.414, 945, 1.866,
          992, 1.913, 993, 2.364, 994, 1.913, 996, 1.866, 997, 1.913, 998,
          1.962, 1000, 1.913, 1001, 2.213, 1305, 1.539, 1306, 1.539, 1330,
          1.539, 1640, 3.282, 1928, 2.393, 1947, 2.393, 1948, 4.067, 1957,
          2.946, 2077, 3.755, 2091, 4.249, 2096, 2.81, 2098, 2.992, 2100, 3.282,
          2101, 4.399, 2102, 4.156, 2103, 3.499, 2104, 4.69, 2105, 3.101, 2106,
          3.101, 2107, 2.946, 2108, 3.949, 2109, 3.499, 2110, 3.499, 2111,
          3.499, 2112, 3.499, 2113, 2.946, 2114, 2.946, 2115, 2.946, 2116, 2.81,
          2117, 3.101, 2118, 3.101, 2119, 4.156, 2120, 3.101, 2121, 3.499, 2122,
          5.652, 2123, 4.69, 2124, 4.962, 2125, 3.101, 2126, 3.282, 2127, 4.69,
          2128, 3.282, 2129, 3.499, 2130, 3.499, 2131, 3.499, 2132, 3.499, 2133,
          3.101, 2134, 3.499, 2135, 3.499, 2136, 3.499, 2137, 3.282, 2138,
          3.499, 2139, 3.499, 2140, 3.282, 2141, 3.499, 2142, 3.499, 2143, 5.29,
          2144, 3.499, 2145, 3.282, 2146, 3.499, 2147, 3.499, 2148, 3.499,
        ],
      ],
      ["title/interfaces/Song-4.html", [0, 0.035, 37, 0.713, 564, 2.01]],
      [
        "body/interfaces/Song-4.html",
        [
          0, 0.056, 2, 1.157, 3, 0.094, 4, 0.081, 5, 0.081, 7, 0.069, 8, 0.393,
          10, 0.536, 11, 0.119, 12, 0.009, 13, 0.094, 15, 1.347, 23, 2.034, 26,
          1.516, 30, 1.763, 31, 1.849, 36, 2.034, 37, 1.603, 38, 2.594, 95,
          0.007, 96, 0.007, 103, 0.663, 104, 0.818, 107, 0.667, 111, 2.078, 121,
          1.337, 122, 1.244, 125, 1.337, 126, 1.369, 130, 0.246, 133, 1.72, 136,
          1.337, 516, 3.796, 526, 3.114, 538, 2.078, 688, 2.687, 921, 2.189,
          945, 2.468, 996, 1.785, 1305, 1.973, 1306, 1.973, 1308, 4.058, 1330,
          1.973, 1335, 2.861, 2107, 3.776, 2150, 4.206, 2799, 3.974, 2818, 5.3,
          2819, 5.3, 2822, 5.3, 2823, 5.3,
        ],
      ],
      ["title/interfaces/Song-5.html", [0, 0.035, 37, 0.713, 572, 2.177]],
      [
        "body/interfaces/Song-5.html",
        [
          0, 0.053, 2, 0.505, 3, 0.041, 4, 0.036, 5, 0.036, 7, 0.03, 8, 0.219,
          10, 0.502, 11, 0.069, 12, 0.01, 13, 0.041, 15, 0.667, 21, 1.586, 22,
          0.249, 23, 1.007, 25, 1.461, 26, 1.252, 30, 1.735, 31, 1.893, 32,
          0.957, 36, 1.963, 37, 1.245, 39, 1.492, 56, 1.256, 68, 1.508, 69,
          1.505, 84, 2.133, 88, 1.253, 95, 0.004, 96, 0.004, 98, 1.401, 99,
          1.735, 100, 3.532, 101, 5.018, 102, 4.651, 103, 0.422, 104, 0.457,
          105, 1.836, 106, 2.585, 107, 0.291, 108, 1.677, 109, 0.931, 110, 2.88,
          111, 0.907, 112, 4.505, 113, 4.847, 114, 3.742, 115, 2.88, 116, 2.88,
          117, 2.88, 118, 2.88, 119, 2.266, 120, 2.88, 121, 0.584, 122, 0.543,
          123, 1.102, 124, 0.819, 125, 0.584, 126, 0.598, 127, 1.836, 128, 1.39,
          129, 1.836, 130, 0.107, 131, 0.779, 132, 1.07, 133, 1.341, 134, 0.584,
          135, 1.865, 136, 0.915, 137, 1.836, 138, 1.649, 139, 1.171, 140, 2.88,
          141, 1.836, 142, 1.836, 143, 1.649, 144, 2.069, 145, 1.972, 146,
          1.505, 147, 1.209, 148, 2.361, 149, 1.959, 150, 3.303, 151, 2.585,
          152, 1.505, 153, 1.836, 154, 1.836, 155, 1.836, 156, 1.836, 157,
          1.836, 158, 1.836, 159, 1.735, 160, 2.487, 161, 1.896, 162, 2.88, 163,
          1.171, 164, 1.649, 165, 2.621, 166, 1.39, 167, 2.266, 168, 2.069, 169,
          1.505, 170, 3.189, 171, 1.836, 172, 1.836, 173, 4.023, 174, 1.836,
          175, 1.836, 176, 1.573, 177, 1.836, 178, 1.836, 179, 1.836, 180,
          1.836, 181, 1.836, 182, 1.836, 183, 1.836, 184, 1.836, 185, 1.836,
          186, 2.88, 187, 1.836, 188, 1.836, 189, 1.836, 190, 1.836, 191, 2.88,
          192, 1.836, 193, 1.649, 194, 1.135, 195, 1.735, 196, 1.836, 197,
          4.162, 198, 2.585, 199, 1.836, 200, 2.585, 201, 1.649, 202, 1.573,
          203, 1.836, 204, 1.505, 205, 1.171, 206, 1.649, 207, 1.649, 208,
          2.216, 209, 1.054, 210, 2.88, 211, 1.695, 212, 1.445, 213, 2.88, 214,
          4.298, 215, 1.836, 216, 3.922, 217, 3.189, 218, 1.649, 219, 1.649,
          220, 1.735, 221, 1.735, 222, 1.836, 223, 1.836, 224, 1.649, 225,
          1.649, 226, 1.649, 227, 2.541, 228, 2.585, 229, 1.836, 230, 1.836,
          231, 2.585, 232, 1.649, 233, 2.266, 234, 1.836, 235, 1.836, 236,
          3.611, 237, 3.611, 238, 3.445, 239, 3.801, 240, 3.922, 241, 1.649,
          242, 1.836, 243, 2.88, 244, 1.649, 245, 2.88, 246, 1.836, 247, 3.553,
          248, 2.88, 249, 1.836, 250, 1.445, 251, 1.836, 252, 1.836, 253, 1.735,
          254, 1.649, 255, 1.836, 256, 1.836, 257, 1.735, 258, 1.135, 259,
          1.317, 260, 1.649, 261, 3.445, 262, 3.611, 263, 1.836, 264, 1.836,
          265, 1.836, 266, 4.38, 267, 1.649, 268, 1.649, 269, 2.88, 270, 2.721,
          271, 2.88, 272, 1.836, 273, 1.649, 274, 1.649, 275, 1.836, 276, 3.303,
          277, 1.649, 278, 1.649, 279, 3.19, 280, 1.649, 281, 1.649, 282, 2.585,
          283, 1.573, 284, 1.649, 285, 2.88, 286, 1.71, 287, 1.649, 288, 3.189,
          289, 1.649, 290, 2.585, 291, 3.189, 292, 1.649, 293, 1.445, 294,
          1.836, 295, 3.189, 296, 1.649, 297, 3.611, 298, 3.611, 299, 3.553,
          300, 3.189, 301, 1.649, 302, 3.189, 303, 2.585, 304, 3.553, 305,
          2.585, 306, 1.649, 307, 3.553, 308, 2.585, 309, 1.836, 310, 1.171,
          311, 1.959, 312, 2.88, 313, 1.505, 314, 1.735, 315, 1.836, 316, 2.585,
          317, 1.649, 318, 1.649, 319, 1.649, 320, 1.445, 321, 1.836, 322,
          1.836, 323, 1.836, 324, 1.836, 325, 1.836, 326, 4.351, 327, 1.735,
          328, 2.027, 329, 1.649, 330, 2.585, 331, 2.585, 332, 1.649, 333,
          1.735, 334, 1.649, 335, 1.649, 336, 1.836, 337, 1.735, 338, 1.836,
          339, 1.836, 340, 1.836, 341, 2.88, 342, 1.836, 343, 1.585, 344, 4.023,
          345, 2.88, 346, 1.836, 347, 1.836, 348, 1.836, 349, 1.836, 350, 1.836,
          351, 1.836, 352, 1.836, 353, 1.836, 354, 1.836, 355, 1.836, 356,
          1.836, 357, 3.553, 358, 1.102, 359, 1.836, 360, 1.836, 361, 2.88, 362,
          1.836, 363, 1.836, 364, 1.836, 365, 1.836, 366, 1.836, 367, 1.836,
          368, 1.836, 369, 1.836, 370, 1.836, 371, 1.836, 372, 2.795, 373,
          1.735, 374, 1.836, 375, 2.721, 376, 1.836, 377, 2.179, 378, 1.836,
          379, 3.553, 380, 1.836, 381, 2.88, 382, 1.836, 383, 1.836, 384, 1.836,
          385, 1.836, 386, 1.505, 387, 1.836, 388, 2.1, 389, 1.836, 390, 1.836,
          391, 2.027, 392, 2.88, 393, 1.836, 394, 2.88, 395, 1.836, 396, 1.836,
          397, 1.836, 398, 1.836, 399, 1.836, 400, 1.836, 401, 1.836, 402,
          1.836, 403, 1.735, 404, 1.836, 405, 2.88, 406, 1.836, 407, 1.836, 408,
          1.836, 409, 1.836, 410, 1.445, 411, 1.649, 412, 1.836, 413, 1.836,
          414, 1.836, 415, 1.836, 416, 1.836, 417, 1.735, 418, 1.836, 419,
          2.721, 420, 1.836, 421, 1.836, 422, 1.836, 423, 1.735, 424, 1.836,
          425, 1.836, 426, 1.505, 427, 1.836, 428, 1.445, 429, 1.836, 430,
          1.836, 431, 2.88, 432, 3.611, 433, 3.611, 434, 4.023, 435, 4.023, 436,
          4.023, 437, 2.88, 438, 3.553, 439, 2.88, 440, 4.742, 441, 2.466, 442,
          2.88, 443, 2.466, 444, 4.023, 445, 4.023, 446, 2.721, 447, 1.836, 448,
          1.836, 449, 1.836, 450, 1.836, 451, 1.836, 452, 1.836, 453, 1.649,
          454, 1.836, 455, 1.836, 456, 1.836, 457, 1.836, 458, 3.611, 459,
          3.611, 460, 3.611, 461, 1.649, 462, 2.88, 463, 2.88, 464, 1.836, 465,
          1.735, 466, 1.836, 467, 1.836, 468, 1.836, 469, 1.836, 470, 1.836,
          471, 1.836, 472, 1.836, 473, 1.836, 474, 1.836, 475, 1.836, 476,
          1.836, 477, 1.836, 478, 1.836, 479, 1.836, 480, 1.836, 481, 1.735,
          482, 1.735, 483, 1.836, 484, 2.361, 485, 2.027, 486, 2.361, 487,
          1.836, 488, 2.361, 489, 1.505, 490, 1.573, 491, 1.836, 492, 1.735,
          493, 1.836, 494, 1.505, 495, 1.836, 496, 3.553, 497, 4.636, 498,
          1.836, 499, 1.836, 500, 1.836, 501, 1.836, 502, 1.836, 503, 3.553,
          504, 1.735, 505, 1.836, 506, 1.836, 507, 1.836, 508, 1.836, 509,
          1.836, 510, 1.836, 511, 1.836,
        ],
      ],
      ["title/interfaces/Song-6.html", [0, 0.035, 37, 0.713, 578, 2.656]],
      [
        "body/interfaces/Song-6.html",
        [
          0, 0.032, 2, 0.673, 3, 0.055, 4, 0.047, 5, 0.047, 7, 0.04, 8, 0.273,
          10, 0.52, 11, 0.112, 12, 0.01, 13, 0.055, 15, 1.148, 21, 1.955, 26,
          1.455, 28, 1.314, 30, 1.502, 31, 1.576, 36, 1.733, 37, 1.251, 39,
          1.445, 42, 2.795, 56, 0.871, 68, 1.332, 69, 1.425, 95, 0.005, 96,
          0.005, 97, 0.601, 98, 0.965, 100, 3.489, 103, 0.503, 104, 0.567, 105,
          2.282, 106, 3.213, 107, 0.388, 108, 2.085, 109, 1.241, 111, 1.208,
          114, 4.582, 121, 0.777, 122, 0.724, 123, 1.467, 124, 1.596, 125,
          0.777, 126, 0.796, 128, 1.851, 130, 0.143, 132, 1.425, 133, 1.193,
          134, 0.777, 135, 2.154, 136, 1.481, 138, 2.196, 139, 1.56, 143, 2.196,
          144, 2.466, 145, 2.087, 146, 2.005, 147, 1.61, 148, 2.934, 149, 1.664,
          150, 1.61, 151, 2.196, 152, 2.005, 163, 1.56, 164, 2.196, 165, 3.107,
          166, 1.851, 167, 2.816, 168, 2.085, 169, 2.005, 170, 4.182, 193,
          2.196, 194, 1.512, 197, 2.196, 198, 3.213, 200, 3.213, 201, 2.196,
          202, 2.095, 203, 2.282, 204, 2.005, 205, 1.56, 206, 2.196, 207, 2.196,
          208, 1.241, 209, 1.299, 211, 1.48, 216, 4.45, 217, 2.196, 218, 2.196,
          219, 2.196, 224, 2.196, 225, 2.196, 226, 2.196, 227, 2.806, 228,
          2.196, 231, 3.213, 232, 2.196, 233, 3.9, 236, 4.182, 237, 4.182, 238,
          3.99, 240, 4.182, 241, 2.196, 244, 2.196, 254, 2.196, 258, 1.512, 259,
          1.637, 260, 2.196, 261, 3.99, 262, 4.182, 268, 2.196, 273, 2.196, 274,
          2.196, 276, 1.61, 277, 2.196, 278, 2.196, 280, 2.196, 281, 2.196, 282,
          3.213, 283, 2.095, 284, 2.196, 287, 2.196, 288, 3.8, 289, 2.196, 290,
          3.213, 291, 2.196, 292, 2.196, 295, 3.8, 296, 2.196, 297, 4.182, 298,
          4.182, 300, 3.8, 301, 2.196, 302, 3.8, 303, 3.213, 305, 3.213, 306,
          2.196, 308, 3.213, 316, 3.213, 317, 2.196, 318, 2.196, 319, 2.196,
          320, 1.924, 326, 2.196, 332, 2.196, 334, 3.213, 335, 3.213, 432,
          2.196, 433, 2.196, 458, 2.196, 459, 2.196, 460, 2.196, 461, 2.196,
          516, 2.88, 530, 1.385, 547, 4.649, 706, 2.446, 709, 2.311, 716, 2.446,
          722, 3.066, 723, 3.58, 724, 3.382, 903, 2.608, 945, 1.519, 974, 1.119,
          1070, 3.066, 1091, 2.608, 1105, 2.446, 1331, 1.784, 1454, 2.196, 1575,
          2.311, 1579, 4.113, 1589, 2.446, 1632, 2.311, 1633, 2.311, 1638,
          2.311, 1649, 4, 1655, 3.213, 1815, 2.811, 1895, 3.816, 1928, 3.615,
          2098, 3.523, 2102, 3.382, 2125, 2.311, 2133, 2.311, 2149, 2.811, 2150,
          2.446, 2151, 3.082, 2152, 3.082, 2153, 2.446, 2154, 3.082, 2155,
          3.082, 2156, 3.082, 2158, 3.082, 2159, 3.082, 2160, 3.082, 2161,
          5.334, 2173, 3.082, 2174, 3.082, 2181, 5.286, 2182, 6.247, 2183,
          3.082, 2184, 3.082, 2185, 3.082, 2186, 4.511, 2187, 4.511, 2188,
          4.511, 2189, 4.511, 2190, 3.082, 2191, 3.082, 2192, 3.082, 2193,
          6.247, 2194, 4.511, 2195, 3.082, 2196, 3.082, 2197, 3.082, 2198,
          5.334, 2199, 3.082, 2200, 3.082, 2201, 3.082, 2202, 3.082, 2203,
          3.082, 2204, 4.511, 2205, 3.082, 2206, 3.082, 2207, 3.082, 2208,
          3.082, 2209, 3.082, 2210, 3.082, 2211, 4.511, 2212, 3.082, 2213,
          3.082, 2214, 3.082, 2215, 5.334, 2216, 3.082, 2217, 3.082, 2218,
          2.811, 2219, 3.082, 2220, 3.082, 2221, 2.811, 2222, 4.511, 2223,
          5.334, 2224, 3.082, 2225, 3.082, 2226, 3.082, 2227, 3.082,
        ],
      ],
      ["title/injectables/SongService.html", [753, 0.871, 3188, 3.637]],
      [
        "body/injectables/SongService.html",
        [
          3, 0.048, 4, 0.042, 5, 0.096, 7, 0.035, 8, 0.247, 9, 3.076, 10, 0.527,
          11, 0.117, 12, 0.01, 13, 0.048, 15, 0.908, 22, 0.289, 26, 1.555, 32,
          1.119, 37, 0.577, 38, 0.958, 39, 1.109, 47, 1.313, 56, 1.064, 57,
          1.524, 68, 1.48, 77, 1.15, 80, 3.32, 83, 1.788, 86, 2.339, 87, 2.098,
          88, 1.413, 89, 3.218, 95, 0.005, 96, 0.005, 97, 1.009, 103, 0.52, 107,
          0.341, 130, 0.125, 134, 0.683, 135, 1.508, 160, 2.009, 168, 1.893,
          205, 3.909, 208, 1.648, 209, 1.582, 211, 1.136, 227, 1.887, 233,
          2.557, 250, 2.557, 279, 2.876, 286, 1.564, 343, 3.286, 348, 3.367,
          428, 2.557, 453, 2.917, 494, 1.761, 538, 1.061, 544, 4.831, 636,
          0.733, 753, 0.894, 754, 3.6, 755, 1.119, 758, 0.916, 769, 1.34, 771,
          1.652, 779, 3.213, 780, 1.701, 781, 4.99, 786, 4.293, 813, 0.807, 818,
          1.566, 824, 1.84, 825, 1.119, 826, 1.09, 955, 3.071, 1053, 3.25, 1064,
          3.465, 1218, 2.03, 1234, 3.734, 1235, 3.25, 1238, 3.071, 1248, 4.047,
          1270, 4.504, 1272, 3.25, 1275, 3.465, 1276, 1.928, 1277, 2.469, 1278,
          2.469, 1279, 2.469, 1280, 2.29, 1281, 2.707, 1282, 2.29, 1285, 3.465,
          1299, 2.469, 1301, 2.707, 1466, 4.095, 1585, 3.734, 1730, 2.917, 2098,
          4.062, 2382, 5.674, 2897, 6.654, 2917, 4.095, 3114, 3.25, 3135, 5.022,
          3139, 2.469, 3188, 3.734, 3189, 2.707, 3190, 6.243, 3191, 4.643, 3192,
          6.243, 3193, 4.643, 3194, 5.6, 3195, 4.643, 3196, 4.643, 3197, 4.643,
          3198, 4.643, 3199, 4.643, 3200, 4.643, 3201, 4.643, 3202, 4.643, 3203,
          5.6, 3204, 4.643, 3205, 4.643, 3206, 5.6, 3207, 4.643, 3208, 4.643,
          3209, 4.643, 3210, 4.643, 3211, 3.069, 3212, 4.643, 3213, 3.069, 3214,
          3.069, 3215, 4.643, 3216, 4.643, 3217, 4.643, 3218, 3.069, 3219,
          6.243, 3220, 4.643, 3221, 3.069, 3222, 3.069, 3223, 4.643, 3224,
          3.069, 3225, 4.643, 3226, 3.069, 3227, 4.643, 3228, 4.643, 3229,
          3.069, 3230, 4.643, 3231, 3.069, 3232, 4.643, 3233, 4.643, 3234,
          3.069, 3235, 4.643, 3236, 4.643, 3237, 3.069, 3238, 4.643, 3239,
          3.069, 3240, 4.643, 3241, 3.069, 3242, 3.069, 3243, 3.069, 3244,
          4.643, 3245, 3.069, 3246, 4.643, 3247, 3.069, 3248, 3.069, 3249,
          3.069, 3250, 4.643, 3251, 3.069, 3252, 4.643, 3253, 4.643, 3254,
          3.069, 3255, 4.643, 3256, 3.069, 3257, 4.643, 3258, 3.069, 3259,
          3.069, 3260, 3.069, 3261, 3.069, 3262, 3.069, 3263, 3.069, 3264,
          3.069, 3265, 3.069, 3266, 3.069, 3267, 3.069, 3268, 3.069, 3269,
          3.069, 3270, 3.069,
        ],
      ],
      [
        "title/injectables/SupabaseAuthRepository.html",
        [753, 0.871, 3271, 3.375],
      ],
      [
        "body/injectables/SupabaseAuthRepository.html",
        [
          3, 0.056, 4, 0.049, 5, 0.049, 7, 0.041, 8, 0.278, 10, 0.359, 11,
          0.097, 12, 0.01, 13, 0.056, 14, 1.127, 15, 0.581, 17, 1.431, 19,
          1.239, 20, 1.342, 22, 0.26, 62, 1.337, 65, 1.729, 68, 1.483, 69,
          1.438, 73, 2.29, 95, 0.005, 96, 0.005, 97, 0.841, 103, 0.595, 107,
          0.397, 130, 0.146, 132, 1.46, 133, 1.571, 135, 2.01, 136, 1.365, 145,
          1.84, 168, 3.445, 194, 3.333, 203, 2.324, 204, 2.987, 205, 2.738, 208,
          1.848, 209, 1.369, 211, 1.274, 258, 3.333, 259, 2.95, 286, 1.754, 293,
          1.972, 535, 3.268, 636, 0.856, 753, 1.003, 755, 1.306, 758, 1.027,
          769, 1.239, 771, 1.378, 780, 1.557, 813, 0.942, 939, 5.094, 943,
          2.987, 944, 3.121, 1010, 1.147, 1248, 2.987, 1311, 2.565, 1314, 3.941,
          1315, 3.317, 1331, 1.828, 1338, 3.667, 1344, 3.886, 1345, 4.898, 1346,
          4.294, 1348, 3.886, 1353, 4.027, 1368, 1.897, 1370, 1.972, 1372,
          2.055, 1374, 1.828, 1381, 3.024, 1382, 2.657, 1383, 3.005, 1385,
          2.867, 1389, 2.758, 1390, 3.005, 1396, 1.599, 1405, 4.231, 1416,
          2.881, 1420, 3.159, 1422, 3.159, 1424, 2.507, 1426, 2.507, 1431,
          5.877, 1438, 2.507, 1452, 4.592, 1457, 5.753, 1467, 2.881, 1468,
          4.188, 1469, 2.673, 1520, 3.272, 1523, 2.881, 1527, 2.881, 1532,
          2.881, 1533, 2.881, 1534, 3.159, 1535, 2.881, 1536, 2.881, 1544,
          2.251, 1545, 1.972, 1546, 2.186, 1547, 4.454, 1548, 4.231, 1549,
          3.272, 1550, 3.272, 1551, 3.378, 1552, 3.378, 1553, 3.677, 1554,
          3.677, 1555, 3.378, 1599, 4.592, 1710, 4.188, 1714, 4.188, 1734,
          2.881, 1750, 4.713, 1765, 4.592, 1776, 3.159, 1777, 4.592, 1778,
          4.592, 1781, 3.159, 1804, 3.159, 1835, 3.159, 1848, 1.765, 1871,
          2.673, 2009, 5.094, 2616, 2.673, 3045, 4.592, 3271, 3.886, 3272,
          7.207, 3273, 5.206, 3274, 3.582, 3275, 3.582, 3276, 3.582, 3277,
          5.206, 3278, 3.582, 3279, 3.582, 3280, 3.582, 3281, 3.582, 3282,
          3.582, 3283, 3.582, 3284, 3.582, 3285, 3.582, 3286, 5.206, 3287,
          6.134, 3288, 7.463, 3289, 3.582, 3290, 3.582, 3291, 6.134, 3292,
          3.582, 3293, 5.206, 3294, 3.582, 3295, 3.582, 3296, 3.582, 3297,
          3.582, 3298, 3.582, 3299, 3.582,
        ],
      ],
      ["title/injectables/SupabaseService.html", [753, 0.871, 1405, 2.841]],
      [
        "body/injectables/SupabaseService.html",
        [
          3, 0.102, 4, 0.088, 5, 0.088, 7, 0.074, 8, 0.412, 11, 0.088, 12,
          0.009, 13, 0.102, 95, 0.008, 96, 0.008, 103, 0.687, 107, 0.722, 130,
          0.266, 134, 1.835, 135, 2.222, 136, 1.835, 209, 1.193, 753, 1.489,
          755, 2.372, 769, 1.271, 822, 4.302, 823, 5.231, 825, 2.372, 826,
          2.309, 1405, 4.858, 1773, 5.231, 1774, 5.231, 1930, 5.113, 3300,
          5.737, 3301, 8.249, 3302, 8.249, 3303, 7.73, 3304, 8.535, 3305, 6.504,
          3306, 6.504, 3307, 7.73, 3308, 7.73, 3309, 6.504, 3310, 6.504,
        ],
      ],
      [
        "title/injectables/TestConnectionService.html",
        [753, 0.871, 2029, 3.375],
      ],
      [
        "body/injectables/TestConnectionService.html",
        [
          3, 0.056, 4, 0.049, 5, 0.049, 7, 0.041, 10, 0.461, 11, 0.101, 12,
          0.01, 13, 0.056, 15, 1.091, 21, 0.989, 22, 0.26, 23, 0.877, 24, 1.546,
          29, 1.419, 31, 0.797, 36, 0.877, 39, 1.244, 45, 0.76, 47, 2.11, 56,
          1.272, 57, 1.176, 68, 1.536, 69, 1.438, 70, 2.123, 84, 1.013, 95,
          0.007, 96, 0.005, 97, 0.792, 98, 2.178, 103, 0.511, 107, 0.397, 124,
          2.102, 130, 0.146, 133, 1.741, 134, 0.797, 135, 1.652, 145, 0.856,
          149, 3.553, 160, 1.55, 161, 3.102, 168, 1.46, 205, 2.324, 209, 1.413,
          211, 1.751, 220, 2.369, 221, 3.444, 259, 2.29, 283, 3.677, 286, 2.269,
          310, 3.005, 313, 2.987, 328, 2.565, 358, 2.576, 391, 2.565, 484,
          2.055, 525, 4.11, 526, 2.796, 535, 1.951, 538, 1.239, 539, 2.186, 541,
          2.369, 542, 2.507, 543, 2.673, 544, 2.055, 545, 2.673, 547, 2.251,
          548, 2.507, 549, 2.673, 550, 2.673, 551, 2.673, 554, 2.758, 564,
          1.897, 638, 1.337, 679, 2.758, 753, 1.003, 754, 3.809, 755, 1.306,
          758, 1.027, 760, 4.592, 765, 4.934, 769, 1.239, 771, 1.297, 776,
          7.017, 777, 5.939, 778, 5.416, 779, 4.419, 780, 1.557, 781, 4.559,
          787, 4.592, 789, 3.886, 790, 4.592, 818, 1.828, 825, 1.306, 826,
          1.272, 843, 2.673, 846, 2.881, 847, 2.507, 849, 5.094, 878, 4.188,
          893, 2.507, 1032, 2.055, 1049, 6.47, 1128, 2.673, 1218, 2.369, 1262,
          4.454, 1276, 2.251, 1381, 2.391, 1428, 5.41, 1454, 3.272, 1493, 2.147,
          1496, 2.673, 1516, 2.673, 1627, 3.886, 1824, 5.939, 1826, 4.592, 1886,
          4.454, 2009, 4.057, 2011, 4.592, 2013, 5.41, 2014, 5.41, 2017, 5.41,
          2023, 4.592, 2026, 5.939, 2029, 3.886, 2051, 3.159, 2056, 3.159, 2057,
          6.309, 2060, 3.159, 2061, 4.592, 2065, 4.592, 2066, 4.188, 2069,
          3.159, 2070, 4.188, 2097, 2.507, 2114, 2.251, 2115, 2.251, 2116,
          3.121, 2537, 3.159, 2637, 2.881, 2941, 2.673, 2993, 3.159, 3311,
          7.207, 3312, 3.159, 3313, 6.733, 3314, 5.206, 3315, 6.733, 3316,
          6.733, 3317, 6.733, 3318, 5.206, 3319, 3.582, 3320, 3.582, 3321,
          5.206, 3322, 3.582, 3323, 5.206, 3324, 5.206, 3325, 3.582, 3326,
          3.582, 3327, 5.206, 3328, 3.582, 3329, 3.582, 3330, 3.582, 3331,
          5.206, 3332, 3.582, 3333, 3.582, 3334, 3.582, 3335, 3.582, 3336,
          3.582, 3337, 3.582, 3338, 3.582, 3339, 5.206, 3340, 3.582, 3341,
          3.582, 3342, 5.206, 3343, 3.582, 3344, 3.582, 3345, 3.582, 3346,
          3.582, 3347, 3.582, 3348, 3.582, 3349, 5.206, 3350, 3.582, 3351,
          3.582, 3352, 2.881, 3353, 3.582, 3354, 3.582, 3355, 3.582, 3356,
          3.582, 3357, 3.582, 3358, 3.582, 3359, 3.582, 3360, 3.582, 3361,
          3.582, 3362, 3.582, 3363, 3.159, 3364, 3.582, 3365, 3.582, 3366,
          3.582, 3367, 3.582, 3368, 3.582, 3369, 3.582, 3370, 3.582, 3371,
          3.582, 3372, 3.582, 3373, 3.582, 3374, 3.582, 3375, 3.582, 3376,
          3.582, 3377, 3.582, 3378, 3.582, 3379, 3.582, 3380, 3.582, 3381,
          6.134, 3382, 5.206, 3383, 3.582, 3384, 5.206, 3385, 7.463, 3386,
          7.463, 3387, 5.206, 3388, 5.206, 3389, 5.206, 3390, 3.582, 3391,
          5.206, 3392, 3.582, 3393, 3.582, 3394, 3.582, 3395, 3.582, 3396,
          3.582, 3397, 3.582, 3398, 3.582, 3399, 3.582, 3400, 5.206, 3401,
          3.582, 3402, 3.582, 3403, 3.582, 3404, 3.582, 3405, 3.582, 3406,
          3.582,
        ],
      ],
      ["title/injectables/TokenStorageService.html", [753, 0.871, 3407, 3.637]],
      [
        "body/injectables/TokenStorageService.html",
        [
          3, 0.102, 4, 0.088, 5, 0.088, 7, 0.074, 10, 0.509, 11, 0.088, 12,
          0.009, 13, 0.102, 22, 0.218, 65, 1.978, 95, 0.008, 96, 0.008, 97,
          0.761, 103, 0.641, 107, 0.718, 130, 0.264, 133, 1.798, 209, 1.187,
          638, 1.978, 753, 1.484, 755, 2.359, 758, 1.521, 769, 1.268, 771,
          1.246, 780, 1.624, 822, 4.278, 825, 2.359, 826, 2.296, 3407, 6.198,
          3408, 5.705, 3409, 8.52, 3410, 8.52, 3411, 7.705, 3412, 6.468, 3413,
          6.468, 3414, 7.705, 3415, 6.468, 3416, 6.468, 3417, 6.468, 3418,
          6.468, 3419, 6.468,
        ],
      ],
      ["title/interfaces/UpdatePlaylistDto.html", [0, 0.042, 60, 1.844]],
      [
        "body/interfaces/UpdatePlaylistDto.html",
        [
          0, 0.083, 1, 1.929, 2, 0.911, 3, 0.074, 4, 0.064, 5, 0.064, 6, 2.047,
          7, 0.054, 8, 0.337, 9, 2.655, 10, 0.549, 11, 0.107, 12, 0.009, 13,
          0.141, 14, 1.159, 15, 1.321, 16, 2.736, 17, 1.661, 18, 2.047, 19,
          2.818, 20, 2.968, 21, 2.249, 22, 0.285, 23, 1.158, 24, 2.472, 25,
          1.679, 26, 1.571, 27, 2.111, 28, 1.86, 29, 1.874, 30, 1.612, 31,
          1.406, 32, 2.305, 33, 3.774, 34, 2.111, 35, 2.111, 36, 1.547, 37,
          1.489, 38, 1.477, 39, 1.13, 40, 1.986, 41, 2.111, 42, 1.986, 43,
          2.111, 44, 2.111, 45, 1.341, 46, 2.736, 47, 1.338, 48, 3.714, 49,
          2.111, 50, 2.822, 51, 1.986, 52, 1.986, 53, 2.111, 54, 2.047, 55,
          2.111, 56, 0.806, 57, 1.553, 58, 2.047, 59, 1.929, 60, 2.578, 61,
          1.929, 62, 1.623, 63, 1.929, 64, 1.929, 65, 1.214, 66, 1.874, 67,
          2.047, 68, 0.889, 69, 0.911, 70, 1.929, 71, 1.929, 72, 2.369, 73,
          2.024, 74, 2.655, 75, 1.973, 76, 2.111, 77, 1.772, 78, 2.047, 79,
          1.986, 80, 2.668, 81, 1.929, 82, 2.047, 83, 1.822, 84, 1.338, 85,
          1.986, 86, 1.772, 87, 1.772, 88, 1.44, 89, 2.435, 90, 1.929, 91,
          2.111, 92, 2.111, 93, 2.111, 94, 2.111, 95, 0.006, 96, 0.006, 97,
          0.995,
        ],
      ],
      ["title/interfaces/User.html", [0, 0.042, 14, 0.661]],
      [
        "body/interfaces/User.html",
        [
          0, 0.083, 1, 1.913, 2, 0.904, 3, 0.074, 4, 0.064, 5, 0.064, 6, 2.031,
          7, 0.054, 8, 0.335, 9, 2.64, 10, 0.549, 11, 0.113, 12, 0.009, 13,
          0.141, 14, 1.19, 15, 1.386, 16, 3.418, 17, 1.897, 18, 3.278, 19,
          2.956, 20, 3.163, 21, 2.244, 22, 0.267, 23, 1.149, 24, 2.25, 25,
          1.666, 26, 1.569, 27, 2.094, 28, 1.804, 29, 1.859, 30, 1.607, 31,
          1.399, 32, 2.293, 33, 3.526, 34, 2.094, 35, 2.094, 36, 1.539, 37,
          1.485, 38, 1.465, 39, 1.121, 40, 1.97, 41, 2.094, 42, 1.97, 43, 2.094,
          44, 2.094, 45, 1.334, 46, 2.721, 47, 1.327, 48, 3.381, 49, 2.094, 50,
          2.807, 51, 1.97, 52, 1.97, 53, 2.094, 54, 2.031, 55, 2.094, 56, 0.8,
          57, 1.541, 58, 2.031, 59, 1.913, 60, 1.913, 61, 1.913, 62, 1.614, 63,
          1.913, 64, 1.913, 65, 1.205, 66, 1.859, 67, 2.031, 68, 0.882, 69,
          0.904, 70, 1.913, 71, 1.913, 72, 2.356, 73, 2.013, 74, 2.64, 75,
          1.963, 76, 2.094, 77, 1.758, 78, 2.031, 79, 1.97, 80, 2.657, 81,
          1.913, 82, 2.031, 83, 1.808, 84, 1.327, 85, 1.97, 86, 1.758, 87,
          1.758, 88, 1.429, 89, 2.422, 90, 1.913, 91, 2.094, 92, 2.094, 93,
          2.094, 94, 2.094, 95, 0.006, 96, 0.006, 97, 0.74,
        ],
      ],
      ["title/interfaces/User-1.html", [0, 0.035, 14, 0.555, 98, 1.047]],
      [
        "body/interfaces/User-1.html",
        [
          0, 0.062, 2, 1.283, 3, 0.105, 4, 0.09, 5, 0.09, 7, 0.076, 8, 0.418,
          10, 0.532, 11, 0.119, 12, 0.009, 13, 0.105, 14, 1.147, 15, 1.394, 17,
          2.007, 19, 2.974, 20, 3.223, 22, 0.29, 95, 0.008, 96, 0.008, 517,
          5.586, 3420, 5.874,
        ],
      ],
      ["title/interfaces/UserDTO.html", [0, 0.042, 3421, 3.375]],
      [
        "body/interfaces/UserDTO.html",
        [
          0, 0.063, 2, 1.295, 3, 0.106, 4, 0.091, 5, 0.091, 7, 0.077, 8, 0.42,
          10, 0.538, 11, 0.117, 12, 0.009, 13, 0.106, 15, 1.399, 17, 2.013, 22,
          0.291, 65, 2.215, 95, 0.008, 96, 0.008, 97, 0.927, 3421, 5.885, 3422,
          5.932,
        ],
      ],
      ["title/components/UserPerfilComponent.html", [104, 0.502, 1018, 1.485]],
      [
        "body/components/UserPerfilComponent.html",
        [
          3, 0.027, 4, 0.024, 5, 0.083, 7, 0.02, 8, 0.204, 10, 0.357, 11, 0.092,
          12, 0.01, 13, 0.027, 14, 1.139, 15, 0.283, 16, 2.85, 17, 1.537, 18,
          1.275, 19, 0.603, 20, 0.653, 22, 0.152, 23, 1.424, 24, 1.891, 39,
          0.704, 40, 0.732, 56, 1.042, 57, 0.572, 65, 1.156, 68, 1.51, 69,
          0.568, 84, 0.833, 95, 0.003, 96, 0.003, 97, 0.347, 98, 0.813, 103,
          0.419, 104, 0.425, 105, 1.709, 107, 0.193, 108, 1.561, 109, 0.619,
          114, 1.045, 121, 1.837, 122, 1.717, 123, 1.237, 124, 1.705, 125,
          0.656, 126, 0.671, 128, 1.561, 130, 0.071, 131, 0.518, 132, 1.202,
          133, 1.713, 134, 0.656, 135, 1.567, 136, 0.656, 139, 2.009, 144,
          1.835, 145, 1.695, 147, 0.803, 149, 2.911, 150, 1.764, 160, 0.754,
          161, 0.803, 163, 0.778, 165, 2.113, 168, 2.227, 169, 2.583, 208,
          2.406, 209, 1.002, 211, 1.823, 212, 0.96, 214, 2.698, 227, 2.837, 233,
          2.108, 253, 1.949, 259, 2.169, 261, 1.767, 276, 2.319, 279, 1.764,
          286, 0.587, 310, 1.315, 311, 2.601, 343, 1.135, 348, 0.778, 375,
          1.153, 377, 2.028, 388, 1.504, 391, 1.452, 410, 1.623, 411, 1.852,
          515, 1.045, 523, 0.544, 525, 1.623, 530, 2.685, 531, 3.523, 532,
          2.857, 534, 1.153, 535, 0.653, 541, 1.949, 544, 1.691, 547, 1.095,
          554, 2.028, 572, 1, 610, 2.199, 636, 1.461, 638, 2, 646, 2.199, 648,
          2.199, 649, 1.153, 650, 2.532, 651, 1.301, 652, 2.199, 653, 1.301,
          654, 1.301, 655, 1.301, 656, 1.301, 657, 1.301, 658, 1.301, 659,
          1.301, 660, 1.153, 661, 1.22, 662, 1.301, 663, 1.301, 664, 1.301, 665,
          1.301, 666, 1.301, 667, 1.691, 668, 1.623, 669, 2.857, 670, 2.199,
          671, 2.199, 672, 1.301, 673, 1.301, 674, 1.301, 675, 1.22, 676, 1.301,
          677, 1.301, 678, 1.301, 679, 0.923, 680, 1.301, 681, 1.301, 682,
          1.301, 683, 0.89, 684, 1.301, 685, 1.301, 687, 1.301, 688, 1.835, 690,
          1.301, 691, 3.36, 692, 1.301, 720, 0.757, 758, 0.755, 769, 1.229, 771,
          0.568, 780, 1.3, 813, 1.608, 824, 1.045, 828, 1.949, 835, 4.048, 838,
          1.402, 845, 3.621, 849, 2.532, 854, 2.829, 884, 3.377, 913, 0.968,
          914, 1.019, 915, 0.603, 916, 0.603, 918, 0.603, 920, 0.572, 921,
          1.495, 934, 0.968, 936, 4.048, 945, 0.875, 957, 0.603, 958, 1.019,
          959, 1.019, 960, 0.603, 961, 1.557, 962, 0.603, 963, 0.603, 964,
          0.603, 965, 0.603, 966, 0.603, 967, 1.405, 968, 1.324, 969, 0.558,
          970, 0.603, 971, 0.572, 972, 0.603, 973, 0.603, 974, 0.558, 975,
          1.019, 976, 0.572, 977, 0.603, 978, 0.572, 979, 0.603, 980, 0.572,
          981, 0.603, 982, 0.603, 983, 0.572, 984, 0.603, 985, 0.558, 986, 0.92,
          987, 0.603, 988, 0.518, 989, 0.531, 990, 0.603, 991, 0.603, 992,
          0.531, 993, 0.92, 994, 1.37, 995, 0.603, 996, 0.518, 997, 0.531, 998,
          0.544, 999, 1.019, 1000, 0.531, 1001, 0.544, 1002, 0.587, 1003, 0.603,
          1004, 0.558, 1005, 0.558, 1006, 0.572, 1007, 0.572, 1008, 0.603, 1009,
          0.572, 1010, 0.558, 1011, 0.603, 1012, 0.572, 1013, 0.603, 1014,
          0.558, 1015, 0.993, 1016, 0.572, 1017, 0.603, 1018, 1.478, 1019, 2.6,
          1020, 0.587, 1021, 0.603, 1022, 1.852, 1032, 1, 1064, 3.36, 1066,
          1.153, 1070, 1.767, 1074, 3.655, 1078, 1.22, 1080, 1.22, 1081, 1.402,
          1085, 3.756, 1086, 2.857, 1087, 2.829, 1089, 1.095, 1090, 2.37, 1091,
          2.199, 1093, 4.752, 1095, 4.28, 1097, 1.153, 1098, 1.402, 1099, 1.402,
          1100, 1.22, 1103, 2.199, 1107, 3.613, 1108, 3.613, 1109, 1.402, 1112,
          3.523, 1113, 1.537, 1114, 1.153, 1122, 3.523, 1124, 3.377, 1127,
          1.402, 1129, 1.852, 1130, 1.852, 1131, 5.122, 1132, 6.14, 1133, 3.621,
          1137, 1.301, 1138, 3.36, 1139, 4.048, 1141, 2.406, 1142, 1.22, 1143,
          2.68, 1144, 2.406, 1154, 1.22, 1160, 1.402, 1161, 1.22, 1163, 2.37,
          1166, 2.599, 1167, 1.537, 1171, 1.537, 1173, 1.22, 1181, 1.402, 1189,
          1.301, 1190, 1.402, 1238, 1.949, 1243, 3.377, 1248, 4.069, 1262,
          1.153, 1272, 3.151, 1296, 5.704, 1310, 3.665, 1311, 0.859, 1319,
          1.537, 1350, 2.698, 1454, 4.001, 1482, 2.37, 1483, 4.818, 1484, 2.599,
          1485, 5.617, 1487, 2.599, 1493, 1.045, 1495, 3.079, 1496, 2.199, 1507,
          1.402, 1520, 3.432, 1521, 3.823, 1557, 3.377, 1572, 1.537, 1587,
          1.537, 1593, 1.402, 1602, 2.599, 1655, 1.095, 1707, 2.68, 1723, 1.402,
          1725, 1.537, 1735, 2.599, 1817, 1.537, 1818, 5.393, 1840, 2.063, 1886,
          1.949, 1904, 1.537, 1914, 0.859, 1930, 1.949, 1956, 1.949, 1977,
          3.079, 1992, 3.377, 2012, 1.402, 2066, 1.402, 2070, 4.393, 2113,
          1.095, 2126, 1.22, 2221, 1.402, 2228, 1.537, 2303, 3.377, 2308, 3.756,
          2310, 2.599, 2312, 4.076, 2343, 1.537, 2344, 2.599, 2347, 4.439, 2348,
          3.377, 2349, 5.757, 2350, 2.599, 2351, 2.599, 2363, 1.537, 2378,
          2.857, 2382, 2.37, 2391, 1.537, 2392, 1.537, 2395, 1.537, 2396, 1.301,
          2397, 2.857, 2421, 1.537, 2430, 1.402, 2617, 4.563, 2636, 1.537, 2736,
          1.402, 2747, 2.37, 2985, 2.599, 2986, 2.599, 2988, 5.393, 2995, 2.599,
          2996, 1.537, 2998, 1.537, 3003, 1.537, 3107, 1.537, 3114, 1.22, 3140,
          2.37, 3423, 7.085, 3424, 7.085, 3425, 1.537, 3426, 3.828, 3427, 3.828,
          3428, 2.947, 3429, 6.368, 3430, 3.828, 3431, 3.828, 3432, 5.816, 3433,
          5.032, 3434, 4.501, 3435, 4.501, 3436, 4.501, 3437, 5.032, 3438,
          2.947, 3439, 4.501, 3440, 4.501, 3441, 4.501, 3442, 1.743, 3443,
          4.501, 3444, 2.947, 3445, 2.947, 3446, 1.743, 3447, 1.743, 3448,
          1.743, 3449, 1.743, 3450, 1.743, 3451, 1.743, 3452, 1.743, 3453,
          1.743, 3454, 1.743, 3455, 1.743, 3456, 1.743, 3457, 1.743, 3458,
          1.743, 3459, 1.743, 3460, 1.743, 3461, 3.828, 3462, 1.743, 3463,
          1.743, 3464, 1.743, 3465, 1.743, 3466, 1.743, 3467, 1.743, 3468,
          1.743, 3469, 1.743, 3470, 1.743, 3471, 1.743, 3472, 1.743, 3473,
          1.743, 3474, 1.743, 3475, 2.947, 3476, 1.743, 3477, 1.743, 3478,
          1.743, 3479, 1.743, 3480, 1.743, 3481, 5.462, 3482, 2.947, 3483,
          1.743, 3484, 2.947, 3485, 1.743, 3486, 1.743, 3487, 1.743, 3488,
          1.743, 3489, 1.743, 3490, 2.947, 3491, 4.501, 3492, 1.743, 3493,
          1.743, 3494, 1.743, 3495, 1.743, 3496, 2.947, 3497, 1.743, 3498,
          1.743, 3499, 1.743, 3500, 1.743, 3501, 2.947, 3502, 3.828, 3503,
          1.743, 3504, 1.743, 3505, 5.816, 3506, 1.743, 3507, 2.947, 3508,
          1.743, 3509, 3.828, 3510, 3.828, 3511, 1.743, 3512, 1.743, 3513,
          4.501, 3514, 1.743, 3515, 1.743, 3516, 1.743, 3517, 1.743, 3518,
          1.743, 3519, 1.743, 3520, 1.743, 3521, 3.828, 3522, 5.032, 3523,
          1.743, 3524, 1.743, 3525, 1.743, 3526, 1.743, 3527, 1.743, 3528,
          1.743, 3529, 1.743, 3530, 1.743, 3531, 1.743, 3532, 1.743, 3533,
          2.947, 3534, 2.947, 3535, 1.743, 3536, 1.743, 3537, 1.743, 3538,
          2.947, 3539, 2.947, 3540, 2.947, 3541, 2.947, 3542, 2.947, 3543,
          2.947, 3544, 2.947, 3545, 1.743, 3546, 4.501, 3547, 1.743, 3548,
          1.743, 3549, 2.947, 3550, 2.947, 3551, 1.743, 3552, 1.743, 3553,
          2.947, 3554, 2.947, 3555, 2.947, 3556, 1.743, 3557, 2.947, 3558,
          2.947, 3559, 2.947, 3560, 2.947, 3561, 2.947, 3562, 2.947, 3563,
          2.947, 3564, 2.947, 3565, 2.947, 3566, 2.947, 3567, 2.947, 3568,
          2.947, 3569, 2.947, 3570, 2.947, 3571, 2.947, 3572, 2.947, 3573,
          2.947, 3574, 2.947, 3575, 2.947, 3576, 2.947, 3577, 3.828, 3578,
          1.743, 3579, 1.743, 3580, 1.743, 3581, 1.743, 3582, 3.828, 3583,
          1.743, 3584, 2.947, 3585, 1.743, 3586, 2.947, 3587, 2.947, 3588,
          1.743, 3589, 2.947, 3590, 6.368, 3591, 1.743, 3592, 2.947, 3593,
          1.537, 3594, 1.743, 3595, 1.743, 3596, 2.947, 3597, 5.032, 3598,
          2.947, 3599, 2.947, 3600, 2.947, 3601, 2.947, 3602, 2.947, 3603,
          1.743, 3604, 1.743, 3605, 1.743, 3606, 1.743, 3607, 1.743, 3608,
          1.743, 3609, 1.743, 3610, 1.743, 3611, 2.947, 3612, 2.947, 3613,
          1.743, 3614, 1.743, 3615, 1.743, 3616, 1.743, 3617, 1.743, 3618,
          1.743, 3619, 3.828, 3620, 1.743, 3621, 1.743, 3622, 1.743, 3623,
          1.743, 3624, 1.743, 3625, 1.743, 3626, 1.743, 3627, 1.743, 3628,
          2.947, 3629, 1.743, 3630, 1.743, 3631, 1.743, 3632, 1.743, 3633,
          2.947, 3634, 2.947, 3635, 2.947, 3636, 1.743, 3637, 2.947, 3638,
          2.947, 3639, 1.743, 3640, 1.743, 3641, 1.743, 3642, 1.743, 3643,
          1.743, 3644, 1.743, 3645, 1.743,
        ],
      ],
      ["title/classes/ValidationError.html", [130, 0.185, 1366, 2.153]],
      [
        "body/classes/ValidationError.html",
        [
          3, 0.091, 4, 0.078, 5, 0.078, 7, 0.066, 8, 0.384, 10, 0.523, 11,
          0.106, 12, 0.009, 13, 0.135, 22, 0.195, 75, 2.246, 95, 0.007, 96,
          0.007, 97, 0.922, 130, 0.352, 134, 1.601, 136, 1.913, 259, 1.851, 769,
          1.207, 771, 1.114, 786, 3.062, 1353, 4.567, 1354, 3.184, 1355, 3.633,
          1356, 5.48, 1357, 5.155, 1358, 4.923, 1359, 6.041, 1360, 5.687, 1364,
          5.687, 1365, 5.687, 1366, 3.731, 1367, 3.824, 1368, 3.811, 1369,
          3.824, 1370, 3.963, 1371, 3.824, 1372, 4.129, 1373, 3.824, 1374,
          3.673, 1375, 3.824, 1407, 4.76, 2660, 4.047, 2661, 4.047, 3646, 5.781,
        ],
      ],
      ["title/coverage.html", [3647, 5.409]],
      [
        "body/coverage.html",
        [
          0, 0.085, 1, 1.247, 5, 0.041, 6, 3.642, 11, 0.041, 12, 0.01, 14,
          0.678, 21, 1.542, 30, 1.185, 37, 1.376, 45, 1.494, 51, 1.284, 59,
          1.247, 60, 1.247, 61, 1.247, 63, 1.247, 64, 1.247, 71, 1.247, 77,
          1.146, 86, 1.146, 90, 1.247, 95, 0.005, 96, 0.005, 99, 4.429, 104,
          0.98, 112, 1.922, 122, 0.959, 130, 0.315, 131, 0.909, 165, 1.284, 227,
          3.155, 481, 2.023, 512, 4.652, 523, 0.955, 535, 1.146, 720, 1.189,
          753, 1.674, 754, 2.364, 756, 2.698, 822, 3.696, 833, 2.141, 894,
          2.698, 895, 2.698, 917, 2.698, 920, 1.004, 921, 0.909, 926, 2.283,
          933, 2.461, 934, 2.313, 945, 1.851, 967, 0.955, 969, 0.979, 971,
          1.004, 974, 0.979, 976, 1.004, 978, 1.004, 980, 1.004, 983, 1.004,
          985, 0.979, 988, 0.909, 989, 2.349, 992, 0.931, 993, 1.446, 994, 1.41,
          996, 0.909, 997, 0.931, 998, 1.446, 1000, 0.931, 1001, 1.446, 1002,
          1.031, 1004, 0.979, 1005, 1.995, 1006, 2.047, 1007, 1.004, 1009,
          1.004, 1012, 1.004, 1014, 0.979, 1016, 1.004, 1018, 1.004, 1197,
          2.461, 1198, 2.698, 1303, 2.698, 1304, 2.698, 1310, 2.776, 1313,
          2.141, 1332, 2.461, 1333, 3.456, 1353, 1.561, 1355, 4.427, 1366,
          1.457, 1368, 1.62, 1370, 1.685, 1372, 1.755, 1374, 1.561, 1376, 1.324,
          1377, 4.363, 1383, 2.067, 1390, 2.067, 1393, 1.834, 1396, 2.067, 1398,
          2.283, 1399, 2.698, 1400, 2.698, 1401, 2.698, 1405, 1.922, 1543,
          4.427, 1544, 4.427, 1545, 1.685, 1546, 1.284, 1556, 2.698, 1705,
          2.698, 1841, 2.698, 1842, 2.698, 1850, 2.141, 1851, 2.698, 1852,
          2.698, 1876, 2.698, 1877, 2.698, 1878, 3.725, 1880, 2.698, 1881,
          2.698, 1911, 2.698, 1922, 2.141, 1923, 2.698, 1924, 2.698, 1959,
          2.461, 1960, 2.698, 1961, 2.698, 1968, 2.698, 1969, 2.698, 1970,
          2.698, 2029, 2.283, 2077, 2.453, 2078, 4.427, 2079, 3.916, 2080,
          4.363, 2100, 4.363, 2105, 2.023, 2107, 2.91, 2108, 2.91, 2149, 3.725,
          2150, 4.363, 2458, 2.698, 2466, 3.242, 2468, 2.698, 2478, 2.698, 2508,
          3.456, 2516, 2.283, 2517, 2.698, 2518, 2.698, 2574, 2.461, 2575,
          2.698, 2585, 2.698, 2590, 2.283, 2591, 2.141, 2662, 2.283, 2663,
          3.725, 2664, 2.283, 2665, 2.698, 2680, 2.461, 2681, 2.698, 2685,
          3.725, 2728, 2.283, 2729, 3.725, 2731, 2.283, 2770, 3.725, 2771,
          4.363, 2799, 4.429, 2800, 2.698, 2825, 3.725, 2874, 4.171, 2878,
          2.461, 2879, 2.698, 2954, 2.698, 2957, 2.283, 3017, 2.698, 3022,
          2.698, 3023, 2.698, 3024, 2.698, 3027, 2.283, 3054, 2.698, 3055,
          2.698, 3066, 2.698, 3117, 2.283, 3118, 3.725, 3119, 2.283, 3172,
          2.698, 3182, 2.698, 3183, 2.698, 3188, 2.461, 3189, 2.698, 3271,
          2.283, 3272, 2.698, 3300, 2.698, 3311, 2.698, 3312, 2.698, 3407,
          2.461, 3408, 2.698, 3420, 2.698, 3421, 2.283, 3422, 2.698, 3423,
          2.698, 3424, 2.698, 3425, 2.698, 3593, 2.698, 3647, 2.698, 3648,
          3.059, 3649, 3.059, 3650, 3.059, 3651, 4.085, 3652, 8.725, 3653,
          2.698, 3654, 8.692, 3655, 2.698, 3656, 2.698, 3657, 2.698, 3658,
          2.698, 3659, 2.698, 3660, 8.88, 3661, 7.715, 3662, 7.991, 3663, 4.631,
          3664, 4.631, 3665, 8.1, 3666, 7.045, 3667, 8.1, 3668, 3.059, 3669,
          2.698, 3670, 2.698, 3671, 6.233, 3672, 2.698, 3673, 4.085, 3674,
          4.085, 3675, 2.698, 3676, 2.698, 3677, 3.059, 3678, 5.589, 3679,
          4.631, 3680, 3.059, 3681, 3.059, 3682, 3.059, 3683, 3.059, 3684,
          3.059, 3685, 3.059, 3686, 3.059, 3687, 4.631, 3688, 4.631, 3689,
          4.631, 3690, 3.059, 3691, 3.059, 3692, 3.059, 3693, 3.059, 3694,
          3.059, 3695, 3.059, 3696, 3.059, 3697, 5.498, 3698, 2.698, 3699,
          2.698, 3700, 2.698, 3701, 2.698, 3702, 2.698, 3703, 3.059, 3704,
          2.698, 3705, 2.698, 3706, 2.698, 3707, 2.698, 3708, 2.698, 3709,
          2.698, 3710, 2.698, 3711, 2.698, 3712, 2.698, 3713, 2.698, 3714,
          5.498, 3715, 2.698, 3716, 2.698, 3717, 2.698, 3718, 3.059, 3719,
          3.059,
        ],
      ],
      ["title/dependencies.html", [3720, 3.347, 3721, 4.788]],
      [
        "body/dependencies.html",
        [
          12, 0.009, 95, 0.008, 96, 0.008, 107, 0.737, 109, 2.358, 111, 2.296,
          515, 3.981, 818, 3.389, 893, 4.648, 1773, 5.341, 1774, 5.341, 3721,
          5.857, 3722, 6.64, 3723, 7.826, 3724, 8.97, 3725, 6.64, 3726, 6.64,
          3727, 7.826, 3728, 5.341, 3729, 6.64, 3730, 5.857, 3731, 6.64, 3732,
          6.64, 3733, 7.826, 3734, 6.64, 3735, 6.64, 3736, 5.857, 3737, 6.64,
          3738, 6.64, 3739, 6.64, 3740, 6.64, 3741, 6.64, 3742, 6.64, 3743,
          6.64, 3744, 6.64, 3745, 6.64,
        ],
      ],
      ["title/index.html", [7, 0.043, 1806, 3.347, 3746, 3.795]],
      [
        "body/index.html",
        [
          4, 0.081, 12, 0.007, 79, 2.517, 95, 0.007, 96, 0.007, 104, 0.884, 238,
          3.593, 492, 3.964, 535, 2.246, 636, 1.758, 695, 4.473, 778, 4.821,
          893, 4.195, 913, 1.968, 1005, 1.919, 1020, 2.019, 1102, 4.821, 1128,
          4.473, 1293, 5.286, 1358, 4.624, 2010, 5.492, 2666, 3.964, 3352,
          6.679, 3363, 5.286, 3728, 6.405, 3730, 5.286, 3747, 7.962, 3748,
          5.993, 3749, 7.358, 3750, 7.517, 3751, 5.286, 3752, 7.358, 3753,
          5.993, 3754, 8.522, 3755, 8.675, 3756, 8.675, 3757, 5.993, 3758,
          7.358, 3759, 5.993, 3760, 5.993, 3761, 7.358, 3762, 5.993, 3763,
          5.993, 3764, 5.993, 3765, 5.993, 3766, 5.993, 3767, 7.358, 3768,
          5.993, 3769, 5.993, 3770, 5.993, 3771, 7.962, 3772, 5.993, 3773,
          5.993, 3774, 5.993, 3775, 5.993, 3776, 5.993, 3777, 5.993, 3778,
          5.993, 3779, 7.023, 3780, 5.993, 3781, 5.993, 3782, 5.993, 3783,
          5.993, 3784, 5.993, 3785, 5.993, 3786, 5.286, 3787, 5.993, 3788,
          5.993, 3789, 5.993, 3790, 7.358, 3791, 7.962, 3792, 5.993, 3793,
          5.993, 3794, 7.962, 3795, 5.993, 3796, 8.675, 3797, 5.993, 3798,
          5.993, 3799, 5.993, 3800, 5.993, 3801, 5.993, 3802, 5.993, 3803,
          5.993, 3804, 5.993, 3805, 5.993, 3806, 5.993, 3807, 5.993, 3808,
          5.993, 3809, 5.993, 3810, 5.993, 3811, 4.821, 3812, 5.993,
        ],
      ],
      ["title/modules.html", [3813, 5.409]],
      ["body/modules.html", [12, 0.008, 95, 0.008, 96, 0.008, 3813, 6.395]],
      ["title/overview.html", [3811, 4.933]],
      [
        "body/overview.html",
        [
          2, 1.38, 12, 0.008, 95, 0.008, 96, 0.008, 755, 2.612, 913, 2.352,
          1354, 3.944, 3811, 5.761, 3814, 7.163, 3815, 7.163, 3816, 7.163, 3817,
          7.163,
        ],
      ],
      ["title/properties.html", [8, 0.289, 3720, 3.347]],
      [
        "body/properties.html",
        [8, 0.385, 12, 0.009, 95, 0.008, 96, 0.008, 3751, 6.366, 3818, 7.217],
      ],
      ["title/miscellaneous/variables.html", [3819, 3.347, 3820, 4.788]],
      [
        "body/miscellaneous/variables.html",
        [
          7, 0.042, 11, 0.116, 12, 0.01, 14, 0.537, 15, 0.595, 17, 0.857, 19,
          1.269, 20, 1.375, 22, 0.124, 62, 1.361, 65, 1.597, 68, 1.415, 69,
          1.312, 95, 0.005, 96, 0.005, 122, 1.097, 124, 2.422, 145, 1.988, 161,
          3.138, 209, 1.508, 310, 3.04, 516, 3.243, 517, 3.33, 519, 3.955, 535,
          2.706, 636, 2.129, 679, 1.944, 775, 2.74, 792, 2.953, 813, 2.343, 822,
          4.978, 833, 2.569, 849, 3.505, 891, 2.569, 893, 2.569, 943, 4.318,
          944, 3.177, 1010, 1.175, 1105, 4.768, 1296, 2.953, 1310, 4.512, 1313,
          3.71, 1317, 6.371, 1341, 2.953, 1342, 2.569, 1350, 2.201, 1376, 1.588,
          1398, 2.74, 1405, 2.307, 1470, 4.263, 1546, 1.541, 1593, 5.478, 1627,
          3.955, 1750, 3.71, 1762, 5.083, 1850, 2.569, 1886, 2.428, 2153, 3.71,
          2412, 6.007, 2459, 4.675, 2516, 2.74, 2984, 6.007, 3010, 6.007, 3271,
          3.955, 3352, 2.953, 3421, 2.74, 3651, 3.238, 3653, 5.486, 3655, 5.486,
          3656, 3.238, 3657, 4.675, 3658, 3.238, 3659, 4.675, 3669, 3.238, 3670,
          4.675, 3672, 3.238, 3673, 6.371, 3674, 3.238, 3675, 5.486, 3676,
          4.675, 3697, 3.238, 3698, 4.675, 3699, 4.675, 3700, 4.675, 3701,
          4.675, 3702, 3.238, 3704, 3.238, 3705, 4.675, 3706, 4.675, 3707,
          3.238, 3708, 4.675, 3709, 3.238, 3710, 3.238, 3711, 3.238, 3712,
          3.238, 3713, 4.675, 3714, 3.238, 3715, 4.675, 3716, 4.675, 3717,
          4.675, 3728, 2.953, 3736, 3.238, 3750, 3.238, 3779, 3.238, 3786,
          3.238, 3819, 3.238, 3820, 3.238, 3821, 6.811, 3822, 3.671, 3823, 5.3,
          3824, 6.811, 3825, 3.671, 3826, 5.3, 3827, 3.671, 3828, 5.3, 3829,
          3.671, 3830, 3.671, 3831, 3.671, 3832, 3.671, 3833, 3.671, 3834,
          3.671, 3835, 3.671, 3836, 3.671, 3837, 3.671, 3838, 3.671, 3839,
          3.671, 3840, 3.671, 3841, 3.671, 3842, 3.671, 3843, 3.671, 3844,
          3.671, 3845, 5.3, 3846, 5.3, 3847, 3.671, 3848, 3.671, 3849, 3.671,
          3850, 3.671, 3851, 3.671, 3852, 7.223, 3853, 5.3, 3854, 7.223, 3855,
          5.3, 3856, 3.671, 3857, 3.671, 3858, 6.811, 3859, 6.811, 3860, 6.22,
          3861, 5.3, 3862, 3.671, 3863, 3.671, 3864, 3.671, 3865, 3.671, 3866,
          3.671, 3867, 3.671, 3868, 3.671, 3869, 3.671, 3870, 3.671, 3871,
          3.671, 3872, 3.671, 3873, 6.22, 3874, 6.22, 3875, 5.3, 3876, 5.3,
          3877, 5.3, 3878, 5.3, 3879, 5.3, 3880, 5.3, 3881, 5.3, 3882, 5.3,
          3883, 5.3, 3884, 5.3, 3885, 5.3, 3886, 5.3, 3887, 5.3, 3888, 5.3,
          3889, 5.3, 3890, 3.671, 3891, 3.671, 3892, 3.671, 3893, 3.671, 3894,
          3.671, 3895, 8.824, 3896, 3.671, 3897, 3.671, 3898, 3.671, 3899,
          3.671, 3900, 3.671, 3901, 8.664, 3902, 3.671, 3903, 3.671, 3904,
          8.612, 3905, 3.671, 3906, 3.671, 3907, 3.671, 3908, 3.671, 3909,
          3.671, 3910, 3.671, 3911, 3.671, 3912, 3.671,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 12,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 227,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["0.0.0", { _index: 3818, title: {}, body: { "properties.html": {} } }],
      [
        "0.0.41",
        { _index: 3735, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "0.04",
        {
          _index: 3588,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "0.05",
        {
          _index: 2997,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "0.1",
        {
          _index: 1143,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.15.0",
        { _index: 3745, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "0.18",
        {
          _index: 3632,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "0.1s",
        {
          _index: 2379,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "0.2",
        {
          _index: 1133,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.25",
        {
          _index: 1113,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.25rem",
        {
          _index: 1165,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "0.2s",
        {
          _index: 1137,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.3",
        {
          _index: 1139,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.37",
        {
          _index: 3602,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "0.3s",
        {
          _index: 2312,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.4",
        {
          _index: 2421,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.4s",
        {
          _index: 2367,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "0.5",
        {
          _index: 2113,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Player.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.5rem",
        {
          _index: 1118,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "0.5s",
        {
          _index: 2310,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.6",
        {
          _index: 2645,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "0.6s",
        {
          _index: 2363,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.7",
        {
          _index: 2375,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "0.75rem",
        {
          _index: 1130,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.8",
        {
          _index: 1127,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "0.875rem",
        {
          _index: 1126,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "0.8s",
        {
          _index: 2384,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "0.9",
        {
          _index: 1123,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      ["0/1", { _index: 3654, title: {}, body: { "coverage.html": {} } }],
      ["0/10", { _index: 3671, title: {}, body: { "coverage.html": {} } }],
      ["0/11", { _index: 3663, title: {}, body: { "coverage.html": {} } }],
      ["0/12", { _index: 3681, title: {}, body: { "coverage.html": {} } }],
      ["0/13", { _index: 3678, title: {}, body: { "coverage.html": {} } }],
      ["0/14", { _index: 3686, title: {}, body: { "coverage.html": {} } }],
      ["0/15", { _index: 3679, title: {}, body: { "coverage.html": {} } }],
      ["0/16", { _index: 3668, title: {}, body: { "coverage.html": {} } }],
      ["0/19", { _index: 3680, title: {}, body: { "coverage.html": {} } }],
      ["0/2", { _index: 3677, title: {}, body: { "coverage.html": {} } }],
      ["0/21", { _index: 3685, title: {}, body: { "coverage.html": {} } }],
      ["0/26", { _index: 3682, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 3667, title: {}, body: { "coverage.html": {} } }],
      ["0/33", { _index: 3684, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 3660, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 3665, title: {}, body: { "coverage.html": {} } }],
      ["0/6", { _index: 3662, title: {}, body: { "coverage.html": {} } }],
      ["0/7", { _index: 3661, title: {}, body: { "coverage.html": {} } }],
      ["0/8", { _index: 3666, title: {}, body: { "coverage.html": {} } }],
      ["0/9", { _index: 3664, title: {}, body: { "coverage.html": {} } }],
      [
        "000000",
        {
          _index: 2654,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "0056b3",
        {
          _index: 1995,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "007bff",
        {
          _index: 1993,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "01",
        {
          _index: 3386,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "01t10:00:00z",
        {
          _index: 3400,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "1",
        {
          _index: 98,
          title: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/User-1.html": {},
          },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "1,247",
        {
          _index: 3560,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "1.1",
        {
          _index: 1120,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "1.125rem",
        {
          _index: 1187,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "1.1rem",
        {
          _index: 2428,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "1.2",
        {
          _index: 2372,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "1.25rem",
        {
          _index: 1121,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "1.5rem",
        {
          _index: 1069,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "1.6",
        {
          _index: 1151,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "1.8m",
        {
          _index: 602,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      ["1/1", { _index: 3718, title: {}, body: { "coverage.html": {} } }],
      [
        "10",
        {
          _index: 494,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      ["10/13", { _index: 3688, title: {}, body: { "coverage.html": {} } }],
      [
        "100",
        {
          _index: 165,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "1000",
        {
          _index: 320,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "1000000",
        {
          _index: 3397,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "100vh",
        {
          _index: 1079,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "100vw",
        {
          _index: 2305,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "101",
        {
          _index: 2119,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "102",
        {
          _index: 2697,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "1024",
        {
          _index: 671,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "1024px",
        {
          _index: 2406,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "103",
        {
          _index: 2702,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "104",
        {
          _index: 2711,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "10px",
        {
          _index: 2995,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "10t10:00:00z",
        {
          _index: 3391,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "11",
        {
          _index: 490,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "111827",
        {
          _index: 2650,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "114",
        {
          _index: 319,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "117a8b",
        {
          _index: 2003,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "12",
        {
          _index: 610,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "12.8m",
        {
          _index: 340,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "1200px",
        {
          _index: 1071,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "12px",
        {
          _index: 1111,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "12rem",
        {
          _index: 1104,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "13",
        {
          _index: 621,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "130",
        {
          _index: 2656,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "135",
        {
          _index: 3601,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "14",
        {
          _index: 615,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "1446057032654",
        {
          _index: 183,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "1470225620780",
        {
          _index: 177,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "1493225457124",
        {
          _index: 174,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "15",
        {
          _index: 484,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      ["15/19", { _index: 3694, title: {}, body: { "coverage.html": {} } }],
      [
        "150",
        {
          _index: 2220,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "150px",
        {
          _index: 2336,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "1511379938547",
        {
          _index: 180,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "155724",
        {
          _index: 1980,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "15px",
        {
          _index: 2996,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "15t10:00:00z",
        {
          _index: 3387,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "16",
        {
          _index: 487,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "166534",
        {
          _index: 3051,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "17",
        {
          _index: 493,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["17/27", { _index: 3692, title: {}, body: { "coverage.html": {} } }],
      [
        "17a2b8",
        {
          _index: 2002,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "18",
        {
          _index: 563,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "180",
        {
          _index: 2224,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "180px",
        {
          _index: 2443,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "19",
        {
          _index: 481,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["19/22", { _index: 3690, title: {}, body: { "coverage.html": {} } }],
      [
        "1998",
        {
          _index: 341,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "1:23",
        {
          _index: 2226,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "1e7e34",
        {
          _index: 2001,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "1f2937",
        {
          _index: 1148,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "1fr",
        {
          _index: 1171,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "1px",
        {
          _index: 1141,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "1rem",
        {
          _index: 1089,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "1s",
        {
          _index: 1094,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "2",
        {
          _index: 358,
          title: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Song-2.html": {},
          },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "2.25rem",
        {
          _index: 2405,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["2.3.0", { _index: 3743, title: {}, body: { "dependencies.html": {} } }],
      [
        "2.4m",
        {
          _index: 589,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "2.53.0",
        { _index: 3731, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "2.5rem",
        {
          _index: 1186,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "20",
        {
          _index: 279,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "20.1.0",
        { _index: 3724, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "20.1.3",
        {
          _index: 3730,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      [
        "20.1.4",
        { _index: 3723, title: {}, body: { "dependencies.html": {} } },
      ],
      ["20/23", { _index: 3695, title: {}, body: { "coverage.html": {} } }],
      [
        "200",
        {
          _index: 217,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "2000",
        {
          _index: 482,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2001",
        {
          _index: 431,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2002",
        {
          _index: 508,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2005",
        {
          _index: 434,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2006",
        {
          _index: 496,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2010",
        {
          _index: 437,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2013",
        {
          _index: 608,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "2015",
        {
          _index: 619,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "2017",
        {
          _index: 439,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2018",
        {
          _index: 441,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2019",
        {
          _index: 613,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "2020",
        {
          _index: 443,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2023",
        {
          _index: 446,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2024",
        {
          _index: 3385,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "20px",
        {
          _index: 3587,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["22", { _index: 3815, title: {}, body: { "overview.html": {} } }],
      [
        "225",
        {
          _index: 2854,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "2400000",
        {
          _index: 3403,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "246",
        {
          _index: 2657,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "25",
        {
          _index: 547,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "250px",
        {
          _index: 2361,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "255",
        {
          _index: 1132,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "25px",
        {
          _index: 1109,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["27", { _index: 3814, title: {}, body: { "overview.html": {} } }],
      [
        "28a745",
        {
          _index: 1999,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "28rem",
        {
          _index: 2644,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "299",
        {
          _index: 317,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "2:42",
        {
          _index: 479,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "2d",
        {
          _index: 207,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "2px",
        {
          _index: 2378,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "2rem",
        {
          _index: 1082,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "2s",
        {
          _index: 3614,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "3",
        {
          _index: 554,
          title: {
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "3.5rem",
        {
          _index: 1192,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "3.5vw",
        {
          _index: 2449,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "30",
        {
          _index: 2221,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "3000",
        {
          _index: 2736,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "30vw",
        {
          _index: 2335,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "31",
        {
          _index: 571,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "32px",
        {
          _index: 3598,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "34",
        {
          _index: 3566,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "350px",
        {
          _index: 2404,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "355",
        {
          _index: 3393,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "35vh",
        {
          _index: 2353,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "3600",
        {
          _index: 1832,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "37",
        {
          _index: 2227,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "374151",
        {
          _index: 1150,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "38",
        {
          _index: 3600,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "3:01",
        {
          _index: 472,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3:27",
        {
          _index: 483,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3:41",
        {
          _index: 461,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "3:42",
        {
          _index: 480,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3:43",
        {
          _index: 475,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3:45",
        {
          _index: 2853,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "3:53",
        {
          _index: 467,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3:58",
        {
          _index: 470,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "3px",
        {
          _index: 1142,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "3rem",
        {
          _index: 1115,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "4",
        {
          _index: 564,
          title: {
            "interfaces/Playlist-4.html": {},
            "interfaces/Song-4.html": {},
          },
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/CardPlayButton.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "4.1.11",
        { _index: 3733, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "4.5rem",
        {
          _index: 2411,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["4/21", { _index: 3703, title: {}, body: { "coverage.html": {} } }],
      [
        "40",
        {
          _index: 307,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "400",
        {
          _index: 2532,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "4000",
        {
          _index: 2741,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "400px",
        {
          _index: 3046,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "401",
        {
          _index: 2535,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "403",
        {
          _index: 2542,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "404",
        {
          _index: 852,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "40vw",
        {
          _index: 2442,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "42",
        {
          _index: 553,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "422",
        {
          _index: 2546,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "429",
        {
          _index: 2547,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "45.2m",
        {
          _index: 339,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "45deg",
        {
          _index: 3591,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["48", { _index: 3817, title: {}, body: { "overview.html": {} } }],
      [
        "4:30",
        {
          _index: 477,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "4ade80",
        {
          _index: 3053,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "4ecdc4",
        {
          _index: 264,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "4px",
        {
          _index: 1173,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "4rem",
        {
          _index: 2387,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "4vw",
        {
          _index: 2340,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "5",
        {
          _index: 572,
          title: {
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["5.1.0", { _index: 3737, title: {}, body: { "dependencies.html": {} } }],
      [
        "5.2m",
        {
          _index: 606,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "50",
        {
          _index: 233,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "500",
        {
          _index: 854,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/RegisterComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "5000",
        {
          _index: 2739,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "50000",
        {
          _index: 3399,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "503",
        {
          _index: 2551,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "50px",
        {
          _index: 1110,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "50vh",
        {
          _index: 2327,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "50vw",
        {
          _index: 2408,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "587",
        {
          _index: 318,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "5:03",
        {
          _index: 2712,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "5:41",
        {
          _index: 464,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "5:55",
        {
          _index: 2120,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "5mb",
        {
          _index: 669,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "5px",
        {
          _index: 1992,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "5vw",
        {
          _index: 2338,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "6",
        {
          _index: 578,
          title: { "interfaces/Song-6.html": {} },
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "6.7m",
        {
          _index: 597,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "60",
        {
          _index: 239,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "600",
        {
          _index: 1147,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "60vw",
        {
          _index: 2360,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["62", { _index: 3691, title: {}, body: { "coverage.html": {} } }],
      [
        "640px",
        {
          _index: 1194,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "667eea",
        {
          _index: 334,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "68",
        {
          _index: 3637,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "6:30",
        {
          _index: 2698,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "6b7280",
        {
          _index: 1160,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "6c757d",
        {
          _index: 1997,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "6px",
        {
          _index: 1174,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "6vw",
        {
          _index: 2410,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["7.8.0", { _index: 3740, title: {}, body: { "dependencies.html": {} } }],
      ["7/10", { _index: 3696, title: {}, body: { "coverage.html": {} } }],
      [
        "70",
        {
          _index: 3593,
          title: {},
          body: {
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "700",
        {
          _index: 2371,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "721c24",
        {
          _index: 1984,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "75",
        {
          _index: 3630,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["76", { _index: 3687, title: {}, body: { "coverage.html": {} } }],
      [
        "764ba2",
        {
          _index: 335,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "768px",
        {
          _index: 1190,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "769px",
        {
          _index: 2433,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["78", { _index: 3693, title: {}, body: { "coverage.html": {} } }],
      [
        "7vw",
        {
          _index: 2370,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "8.1m",
        {
          _index: 593,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      ["8.5.6", { _index: 3739, title: {}, body: { "dependencies.html": {} } }],
      [
        "80",
        {
          _index: 2223,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "800",
        {
          _index: 1117,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "8000",
        {
          _index: 2061,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "800px",
        {
          _index: 1971,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "856404",
        {
          _index: 1988,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      ["86", { _index: 3689, title: {}, body: { "coverage.html": {} } }],
      [
        "89.5h",
        {
          _index: 3563,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "8:02",
        {
          _index: 2703,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "8b5cf6",
        {
          _index: 3606,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "8px",
        {
          _index: 1977,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "8rem",
        {
          _index: 1195,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      ["9", { _index: 3816, title: {}, body: { "overview.html": {} } }],
      [
        "90vw",
        {
          _index: 2368,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "9ca3af",
        {
          _index: 1177,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "9d8885db76c6?w=400&h=400&fit=crop",
        {
          _index: 184,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "_session",
        {
          _index: 1853,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "_supabase",
        {
          _index: 3301,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "_supabaseuser",
        {
          _index: 1706,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "a3eb161ffa5f?w=400&h=400&fit=crop",
        {
          _index: 175,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "abierto",
        {
          _index: 2201,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "absolute",
        {
          _index: 2344,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "abstract",
        {
          _index: 1378,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
          },
        },
      ],
      [
        "acceso",
        {
          _index: 2543,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "access_token",
        {
          _index: 1731,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "accessors",
        {
          _index: 1930,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/SupabaseService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "accesstoken",
        {
          _index: 1538,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthToken.html": {},
          },
        },
      ],
      [
        "account",
        {
          _index: 1672,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "acepto",
        {
          _index: 2989,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "aclamado",
        {
          _index: 374,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "action",
        {
          _index: 749,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "actions",
        {
          _index: 2391,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "activa",
        {
          _index: 2414,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "activada",
        {
          _index: 3573,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "activas",
        {
          _index: 2324,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "activatedroute",
        {
          _index: 110,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "activetab",
        {
          _index: 524,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "activeyears",
        {
          _index: 116,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "activo",
        {
          _index: 1047,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "actual",
        {
          _index: 1589,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "actual_component",
        {
          _index: 1021,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "actualizado",
        {
          _index: 3522,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "actualizar",
        {
          _index: 1272,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "adapt",
        { _index: 870, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "adaptado",
        { _index: 785, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "add",
        { _index: 1351, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "addedat",
        {
          _index: 53,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      ["additional", { _index: 3803, title: {}, body: { "index.html": {} } }],
      [
        "additionaldata",
        { _index: 810, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "additionaldata[key",
        { _index: 888, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "addnotification",
        {
          _index: 2755,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "addnotification(notification",
        {
          _index: 2743,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "addsongtoplaylist",
        {
          _index: 2880,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "addsongtoplaylist(playlistid",
        {
          _index: 2896,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "addsongtoplaylistdto",
        {
          _index: 1,
          title: { "interfaces/AddSongToPlaylistDto.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "adicionales",
        {
          _index: 2445,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "advancedsearch",
        {
          _index: 3149,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "advancedsearch(filters",
        {
          _index: 3129,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "afectando",
        {
          _index: 2418,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "afterviewinit",
        {
          _index: 2104,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "agrega",
        {
          _index: 830,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
          },
        },
      ],
      [
        "agregando",
        {
          _index: 1899,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "agregar",
        {
          _index: 892,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "agrupar",
        {
          _index: 269,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "ahora",
        {
          _index: 2228,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "ajustar",
        {
          _index: 314,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "ajustes",
        {
          _index: 2444,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "al",
        {
          _index: 168,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "albarn",
        {
          _index: 350,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "album",
        {
          _index: 30,
          title: {
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
          },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "album.title",
        {
          _index: 731,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "album.tracks",
        {
          _index: 1058,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "album.year",
        {
          _index: 1057,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "albumid",
        {
          _index: 38,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "albums",
        {
          _index: 119,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        'alert("la',
        {
          _index: 673,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'alert("por',
        {
          _index: 659,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "align",
        {
          _index: 1100,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "allowed",
        {
          _index: 1998,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "allowedtypes",
        {
          _index: 653,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "allowedtypes.includes(file.type",
        {
          _index: 658,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "already",
        {
          _index: 1472,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "alta",
        {
          _index: 3571,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "alternative",
        {
          _index: 327,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "alternativo",
        {
          _index: 386,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "altura",
        {
          _index: 2439,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ambas",
        {
          _index: 323,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "amber",
        {
          _index: 3094,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "amplia",
        {
          _index: 408,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "analysissize",
        {
          _index: 216,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "android",
        {
          _index: 2639,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "angular",
        {
          _index: 3352,
          title: {},
          body: {
            "injectables/TestConnectionService.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "angular/cdk",
        { _index: 3722, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/common",
        {
          _index: 109,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/common/http",
        {
          _index: 816,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "angular/compiler",
        { _index: 3725, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/core",
        {
          _index: 107,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/forms",
        {
          _index: 515,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/material",
        { _index: 3726, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/material/icon",
        {
          _index: 1335,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "angular/platform",
        { _index: 3727, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angular/router",
        {
          _index: 111,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "angular/ssr",
        { _index: 3729, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "angularapp",
        {
          _index: 3715,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "angularnodeappengine",
        {
          _index: 3835,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "animaciones",
        {
          _index: 2396,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "animación",
        {
          _index: 3589,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "animados",
        {
          _index: 357,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "animation",
        {
          _index: 2308,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "anonymous",
        {
          _index: 225,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "anterior",
        {
          _index: 2204,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "análisis",
        {
          _index: 213,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "aparecerán",
        {
          _index: 3116,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "api",
        {
          _index: 70,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "api.service",
        {
          _index: 1276,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "api/artists",
        {
          _index: 3370,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "api/auth/login",
        {
          _index: 3371,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "api/auth/register",
        {
          _index: 3372,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "api/playlists",
        {
          _index: 2023,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "api/playlists/{id",
        {
          _index: 3368,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "api/songs",
        {
          _index: 3369,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "api/test",
        {
          _index: 2018,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "api/user/profile",
        {
          _index: 2022,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "api/user/test",
        {
          _index: 2020,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "api_url",
        {
          _index: 3875,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "apiresponse",
        {
          _index: 71,
          title: { "interfaces/ApiResponse.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "apiservice",
        {
          _index: 754,
          title: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
          },
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "apiurl",
        {
          _index: 3873,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "aplicado",
        {
          _index: 249,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "app",
        {
          _index: 122,
          title: { "components/App.html": {} },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "app.css",
        { _index: 923, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "app.html",
        { _index: 922, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "app.token",
        {
          _index: 3877,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "app/config/routes",
        {
          _index: 1336,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "app/domain/entities/auth",
        {
          _index: 1421,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "app/domain/entities/user.entity",
        {
          _index: 1420,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "app/domain/errors/auth.errors",
        {
          _index: 2616,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "app/domain/repositories/auth.repository",
        {
          _index: 1419,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "app/domain/repositories/i",
        {
          _index: 1871,
          title: {},
          body: {
            "injectables/AuthStateService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "app/domain/services/auth",
        {
          _index: 1893,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "app/domain/usecases/auth",
        { _index: 930, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "app/domain/usecases/register.usecase",
        {
          _index: 2978,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "app/infrastructure/supabase/supabase.service",
        {
          _index: 1772,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "app_metadata",
        {
          _index: 1821,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "appcomponent",
        {
          _index: 1726,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "appconfig",
        {
          _index: 3657,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "appealing",
        {
          _index: 2246,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "appearance",
        {
          _index: 2648,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "appetite",
        {
          _index: 2709,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      ["application", { _index: 3761, title: {}, body: { "index.html": {} } }],
      [
        "application/json",
        { _index: 829, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "applicationconfig",
        {
          _index: 3845,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "applyfallbackgradient",
        {
          _index: 260,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "aqu",
        {
          _index: 722,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "archivos",
        { _index: 812, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "arctic",
        {
          _index: 585,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "arial",
        {
          _index: 1973,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "array.isarray(error.error.errors",
        {
          _index: 841,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      ["artifacts", { _index: 3783, title: {}, body: { "index.html": {} } }],
      [
        "artist",
        {
          _index: 21,
          title: {
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
          },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "artist'},{'name",
        {
          _index: 964,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "artist.activeyears",
        {
          _index: 1048,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "artist.biography",
        {
          _index: 1052,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "artist.css",
        {
          _index: 129,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "artist.followers",
        {
          _index: 1045,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "artist.genre",
        {
          _index: 1041,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "artist.html",
        {
          _index: 127,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "artist.id",
        {
          _index: 734,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "artist.isfollowing",
        {
          _index: 736,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "artist.monthlylisteners",
        {
          _index: 1042,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "artist.name",
        {
          _index: 740,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "artist/:id",
        {
          _index: 3903,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "artist_name",
        {
          _index: 3392,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "artista",
        {
          _index: 250,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "artistas",
        {
          _index: 410,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "artistas/administradores",
        {
          _index: 3257,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "artistas/lanzamientos",
        {
          _index: 1252,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "artistcomponent",
        {
          _index: 131,
          title: { "components/ArtistComponent.html": {} },
          body: {
            "interfaces/Album-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "artistdata",
        {
          _index: 1224,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "artistid",
        {
          _index: 32,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "artists",
        {
          _index: 526,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "artistservice",
        {
          _index: 1197,
          title: { "injectables/ArtistService.html": {} },
          body: { "injectables/ArtistService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "artistsstring",
        {
          _index: 2772,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
          },
        },
      ],
      [
        "artwork",
        {
          _index: 2332,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "artwork:hover",
        {
          _index: 2365,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "asc",
        {
          _index: 93,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "asegurar",
        {
          _index: 159,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "aside",
        {
          _index: 965,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "asidemenu",
        {
          _index: 920,
          title: { "components/AsideMenu.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "asleep",
        {
          _index: 612,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "aspect",
        {
          _index: 1175,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "ass",
        {
          _index: 2286,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "assets/gorillaz2.jpg",
        {
          _index: 332,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "assets/playlists/placeholder.jpg",
        {
          _index: 2778,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "assets/playlists/playlist1.jpg",
        {
          _index: 485,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "assets/playlists/playlist2.webp",
        {
          _index: 486,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "assets/playlists/playlist3.jpg",
        {
          _index: 488,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "assets/playlists/playlist4.jpg",
        {
          _index: 489,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "async",
        {
          _index: 1314,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "attack",
        {
          _index: 2290,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "aud",
        {
          _index: 1822,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "audio",
        {
          _index: 3570,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "audioelement",
        {
          _index: 2829,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "audioref",
        {
          _index: 2112,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "autenticación",
        {
          _index: 1587,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "autenticado",
        {
          _index: 1593,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "auth",
        {
          _index: 1627,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "auth.config",
        {
          _index: 1337,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "auth.config.ts",
        {
          _index: 3670,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auth.repository",
        {
          _index: 1848,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "auth.repository.ts",
        {
          _index: 1544,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "auth.repository.ts:11",
        {
          _index: 3275,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:115",
        {
          _index: 3281,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:130",
        {
          _index: 3282,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:148",
        {
          _index: 3278,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:26",
        {
          _index: 2568,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:27",
        {
          _index: 2571,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:28",
        {
          _index: 2569,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:29",
        {
          _index: 2567,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:30",
        {
          _index: 2570,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:31",
        {
          _index: 2572,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:32",
        {
          _index: 2573,
          title: {},
          body: { "classes/IAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:33",
        {
          _index: 3280,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:63",
        {
          _index: 3276,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:75",
        {
          _index: 3274,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:9",
        {
          _index: 3283,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.repository.ts:94",
        {
          _index: 3279,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "auth.service.ts",
        {
          _index: 2575,
          title: {},
          body: { "classes/IAuthService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "auth.service.ts:4",
        { _index: 2580, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "auth.service.ts:5",
        { _index: 2578, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "auth.service.ts:6",
        { _index: 2581, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "auth.service.ts:7",
        { _index: 2579, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "auth.service.ts:8",
        { _index: 2583, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "auth.usecase.ts",
        {
          _index: 1961,
          title: {},
          body: {
            "injectables/CheckAuthUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "auth.usecase.ts:17",
        {
          _index: 1962,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "auth.usecase.ts:6",
        {
          _index: 1965,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "auth.usecase.ts:8",
        {
          _index: 1963,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "auth/login",
        {
          _index: 3896,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auth/register",
        {
          _index: 3897,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auth/reset",
        {
          _index: 3899,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auth_repository_token",
        {
          _index: 3675,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auth_service_token",
        {
          _index: 3676,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authchangeevent",
        {
          _index: 1719,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "authenticated",
        {
          _index: 1823,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "autherror",
        {
          _index: 1353,
          title: { "classes/AuthError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/SessionError.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "autherror('error",
        {
          _index: 3296,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "autherror:4",
        {
          _index: 2660,
          title: {},
          body: {
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "autherror:5",
        {
          _index: 2661,
          title: {},
          body: {
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "authguard",
        {
          _index: 3698,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authguardredirect",
        {
          _index: 3699,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authguardredirectifauthenticated",
        {
          _index: 3700,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authguardredirectifnotauthenticated",
        {
          _index: 3701,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authinterceptor",
        {
          _index: 3706,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authorization",
        {
          _index: 2562,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "authproviders",
        {
          _index: 3673,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authrepository",
        {
          _index: 1376,
          title: { "classes/AuthRepository.html": {} },
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/LoginCredentials.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "interfaces/RegisterCredentials.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "authrepository:136",
        {
          _index: 1410,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "authrepository:143",
        {
          _index: 1408,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "authrepository:155",
        {
          _index: 1417,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "authrepository:20",
        {
          _index: 1409,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "authrepository:64",
        {
          _index: 1418,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "authrepositoryimpl",
        {
          _index: 1398,
          title: { "injectables/AuthRepositoryImpl.html": {} },
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "authrequest",
        {
          _index: 1905,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "authresponse",
        {
          _index: 64,
          title: { "interfaces/AuthResponse.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authresponse.refreshtoken",
        {
          _index: 1676,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authresponse.token",
        {
          _index: 1675,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "authresult",
        {
          _index: 1396,
          title: {
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
          },
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "injectables/LoginUseCase.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authservice",
        {
          _index: 1310,
          title: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
          },
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "authservice.isauthenticated",
        {
          _index: 3859,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authservice.session()?.access_token",
        {
          _index: 3864,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authsession",
        {
          _index: 1545,
          title: { "interfaces/AuthSession.html": {} },
          body: {
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authsessionusecase",
        {
          _index: 926,
          title: { "injectables/AuthSessionUseCase.html": {} },
          body: {
            "components/App.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authstateservice",
        {
          _index: 1850,
          title: { "injectables/AuthStateService.html": {} },
          body: {
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "authtoken",
        {
          _index: 1393,
          title: { "interfaces/AuthToken.html": {} },
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authtokeninterceptor",
        {
          _index: 833,
          title: { "interceptors/AuthTokenInterceptor.html": {} },
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "auto",
        {
          _index: 1073,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "autocompletado",
        {
          _index: 3146,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "automatically",
        { _index: 3762, title: {}, body: { "index.html": {} } },
      ],
      [
        "automática",
        {
          _index: 3572,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "automáticamente",
        {
          _index: 831,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "autorizado",
        {
          _index: 2536,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      ["available", { _index: 3774, title: {}, body: { "index.html": {} } }],
      [
        "avanzada",
        {
          _index: 3128,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "avatar",
        {
          _index: 3590,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "avatar:hover",
        {
          _index: 3633,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "await",
        {
          _index: 1338,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/LoginComponent.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "award",
        {
          _index: 112,
          title: { "interfaces/Award.html": {} },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "award.category",
        {
          _index: 1063,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "award.name",
        {
          _index: 1061,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "award.year",
        {
          _index: 1062,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "awards",
        {
          _index: 120,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "azul/morado",
        {
          _index: 179,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "b",
        {
          _index: 238,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "b91c1c",
        {
          _index: 3048,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "back",
        {
          _index: 2238,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "backdrop",
        {
          _index: 2347,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "backend",
        {
          _index: 849,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "background",
        {
          _index: 1074,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "bad",
        {
          _index: 2251,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "bajo",
        {
          _index: 364,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "band",
        {
          _index: 511,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "banda",
        {
          _index: 344,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "bar",
        {
          _index: 2106,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "bar'},{'name",
        {
          _index: 995,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "bar.html",
        {
          _index: 2801,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar.ts",
        {
          _index: 2800,
          title: {},
          body: {
            "components/PlayerControlButtonBar.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "bar.ts:18",
        {
          _index: 2806,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar.ts:19",
        {
          _index: 2808,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar.ts:21",
        {
          _index: 2810,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar.ts:25",
        {
          _index: 2811,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar.ts:29",
        {
          _index: 2809,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "bar/player",
        {
          _index: 2105,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "barz",
        {
          _index: 469,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "basadas",
        {
          _index: 3235,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "base",
        {
          _index: 626,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "base_url",
        {
          _index: 3894,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "basecolor",
        {
          _index: 295,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "baseurl",
        { _index: 757, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "batería",
        {
          _index: 371,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "bbf7d0",
        {
          _index: 3052,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "beach",
        {
          _index: 436,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "bear",
        {
          _index: 2298,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "bearer",
        {
          _index: 891,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "beatles",
        {
          _index: 2485,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "beats",
        {
          _index: 3086,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "beck",
        {
          _index: 418,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "beep",
        {
          _index: 2262,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "behaviorsubject",
        {
          _index: 1634,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "behaviorsubject(false",
        {
          _index: 1630,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "behaviorsubject(null",
        {
          _index: 1625,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "best",
        {
          _index: 497,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "between",
        {
          _index: 2346,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "bezier(0.4",
        {
          _index: 3581,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "biblioteca",
        {
          _index: 956,
          title: {},
          body: { "components/App.html": {}, "components/AsideMenu.html": {} },
        },
      ],
      [
        "bienvenido",
        {
          _index: 2983,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "bill",
        {
          _index: 2496,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "billie",
        {
          _index: 590,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "bio",
        {
          _index: 1140,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "biografía",
        {
          _index: 1051,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "biography",
        {
          _index: 117,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "black",
        {
          _index: 3000,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "block",
        {
          _index: 2416,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "blue",
        {
          _index: 3091,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "blur(10px",
        {
          _index: 2348,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "blur(8px",
        {
          _index: 3634,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "body",
        {
          _index: 903,
          title: {},
          body: {
            "injectables/ApiService-1.html": {},
            "components/Card.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "bohemian",
        {
          _index: 2114,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "bold",
        {
          _index: 3001,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "bon",
        {
          _index: 2498,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "boolean",
        {
          _index: 28,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "classes/AuthRepository.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "interfaces/AuthSession.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "injectables/LoginUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "bootstrap",
        {
          _index: 3713,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "bootstrapapplication(app",
        {
          _index: 3870,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "border",
        {
          _index: 1087,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "both",
        {
          _index: 2364,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "botones",
        {
          _index: 3585,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "bottom",
        {
          _index: 1081,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "botón",
        {
          _index: 719,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "box",
        {
          _index: 1107,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "break",
        {
          _index: 851,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "breaking",
        {
          _index: 2235,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "brightness",
        {
          _index: 316,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "brit",
        {
          _index: 500,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "british",
        {
          _index: 501,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "británica",
        {
          _index: 346,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "browser",
        {
          _index: 893,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
            "dependencies.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "browserdistfolder",
        {
          _index: 3716,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "btn",
        {
          _index: 1990,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "btn:disabled",
        {
          _index: 1996,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "btn:hover",
        {
          _index: 2000,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "btn:hover:not(:disabled",
        {
          _index: 1994,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "buena",
        {
          _index: 582,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "build",
        {
          _index: 3779,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["buildthis", { _index: 3780, title: {}, body: { "index.html": {} } }],
      [
        "buscar",
        {
          _index: 955,
          title: {},
          body: {
            "components/App.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/PlaylistService.html": {},
            "components/SearchComponent.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "button",
        {
          _index: 994,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "button'},{'name",
        {
          _index: 970,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "button.active",
        {
          _index: 2420,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "button.css",
        {
          _index: 1926,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.html",
        {
          _index: 1925,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.primary",
        {
          _index: 2386,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "button.primary:hover",
        {
          _index: 2389,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "button.secondary",
        {
          _index: 2385,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "button.secondary:hover",
        {
          _index: 2388,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "button.ts",
        {
          _index: 1924,
          title: {},
          body: { "components/CardPlayButton.html": {}, "coverage.html": {} },
        },
      ],
      [
        "button.ts:12",
        {
          _index: 1934,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:13",
        {
          _index: 1937,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:16",
        {
          _index: 1940,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:17",
        {
          _index: 1939,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:19",
        {
          _index: 1942,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:23",
        {
          _index: 1944,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:27",
        {
          _index: 1946,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button.ts:31",
        {
          _index: 1938,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "button/card",
        {
          _index: 1922,
          title: {},
          body: {
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "button:active",
        {
          _index: 3006,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "button:focus",
        {
          _index: 3008,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "button:hover",
        {
          _index: 1138,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "búsqueda",
        {
          _index: 3108,
          title: {},
          body: {
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "búsquedas",
        {
          _index: 85,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "c1f69419868d?w=400&h=400&fit=crop",
        {
          _index: 181,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "c3e6cb",
        {
          _index: 1981,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "calidad",
        {
          _index: 3569,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "california",
        {
          _index: 2695,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "callback",
        { _index: 2584, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "cambiando",
        {
          _index: 190,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "cambiar",
        {
          _index: 1579,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cambios",
        {
          _index: 253,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "camel's",
        {
          _index: 2237,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "camel\\'s",
        {
          _index: 2451,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "canactivatefn",
        {
          _index: 3858,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cancelar",
        {
          _index: 3558,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "canceledit",
        {
          _index: 3434,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "canciones",
        {
          _index: 544,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "canción",
        {
          _index: 2098,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "canvas",
        {
          _index: 198,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'canvas.getcontext("2d',
        {
          _index: 201,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "canvas.height",
        {
          _index: 219,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "canvas.width",
        {
          _index: 218,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "caracteres",
        {
          _index: 1485,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "card",
        {
          _index: 967,
          title: { "components/Card.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "card'},{'name",
        {
          _index: 968,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "card.css",
        {
          _index: 1913,
          title: {},
          body: {
            "components/Card.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
          },
        },
      ],
      [
        "card.html",
        {
          _index: 1912,
          title: {},
          body: {
            "components/Card.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "card.ts",
        {
          _index: 2771,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "card.ts:17",
        {
          _index: 3170,
          title: {},
          body: { "components/SideMenuCard.html": {} },
        },
      ],
      [
        "card.ts:21",
        {
          _index: 2773,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "card.ts:23",
        {
          _index: 2776,
          title: {},
          body: { "components/PlayListItemCard.html": {} },
        },
      ],
      [
        "card.ts:26",
        {
          _index: 3171,
          title: {},
          body: { "components/SideMenuCard.html": {} },
        },
      ],
      [
        "card.ts:27",
        {
          _index: 2774,
          title: {},
          body: { "components/PlayListItemCard.html": {} },
        },
      ],
      [
        "card/play",
        {
          _index: 2508,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "card/side",
        {
          _index: 1333,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "card::after",
        {
          _index: 3604,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "card:hover",
        {
          _index: 1172,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "card:hover::after",
        {
          _index: 3609,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "cardplaybutton",
        {
          _index: 969,
          title: { "components/CardPlayButton.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "care",
        {
          _index: 2297,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "carga",
        {
          _index: 1956,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "cargada",
        {
          _index: 151,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cargados",
        {
          _index: 3488,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "cargando",
        {
          _index: 2303,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "cargar",
        {
          _index: 169,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "carrera",
        {
          _index: 406,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "carretera",
        {
          _index: 561,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "case",
        {
          _index: 632,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-2.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "catch",
        {
          _index: 258,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/Award.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "catch((e",
        {
          _index: 2129,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "catch((error",
        {
          _index: 3350,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "catcherror",
        {
          _index: 819,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "catcherror((error",
        {
          _index: 2527,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "catcherror((refresherror",
        {
          _index: 2563,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "catcherror(this.handleerror",
        { _index: 879, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "category",
        {
          _index: 113,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "cats",
        {
          _index: 2283,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "cause",
        {
          _index: 2240,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "cdr",
        {
          _index: 138,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "center",
        {
          _index: 1154,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "centrado",
        {
          _index: 2992,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "centrar",
        {
          _index: 2358,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "cerrado",
        {
          _index: 2202,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cerrar",
        {
          _index: 1344,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "changedetection",
        {
          _index: 1305,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/Greeting.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "changedetectionstrategy",
        {
          _index: 1330,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/Greeting.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "changedetectionstrategy.onpush",
        {
          _index: 1306,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/Greeting.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "changedetectorref",
        {
          _index: 106,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "changepassword",
        {
          _index: 1561,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "changepassword(passworddata",
        {
          _index: 1577,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "chao",
        {
          _index: 2491,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "char",
        {
          _index: 3619,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "checkauthstate",
        {
          _index: 1562,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "checkauthusecase",
        {
          _index: 1959,
          title: { "injectables/CheckAuthUseCase.html": {} },
          body: {
            "injectables/CheckAuthUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "checkbox",
        {
          _index: 3004,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "checkbox:focus",
        {
          _index: 3005,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "checkdjangoserver",
        {
          _index: 3313,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "checking",
        {
          _index: 1703,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "child",
        {
          _index: 1159,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "chill",
        {
          _index: 565,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "chocolate",
        {
          _index: 2289,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["choose", { _index: 3800, title: {}, body: { "index.html": {} } }],
      [
        "city's",
        {
          _index: 2234,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "city\\'s",
        {
          _index: 2450,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "claro",
        {
          _index: 304,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "class",
        {
          _index: 130,
          title: {
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "classes",
        {
          _index: 1354,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "classic",
        {
          _index: 3405,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "classical",
        {
          _index: 2464,
          title: {},
          body: {
            "components/ExploreComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "classics",
        { _index: 1324, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "clear",
        {
          _index: 687,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "clearall",
        {
          _index: 2754,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "clearauthdata",
        {
          _index: 1563,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "clearplayhistory",
        {
          _index: 3190,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "clearsearch",
        {
          _index: 3070,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "clearsearchhistory",
        {
          _index: 3138,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "clearsession",
        {
          _index: 1854,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "cleartoken",
        {
          _index: 3409,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "cli",
        {
          _index: 3750,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "clic",
        {
          _index: 2038,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "click",
        {
          _index: 718,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "clickx",
        {
          _index: 2211,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "client",
        {
          _index: 3302,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "cliente",
        {
          _index: 2531,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "clint",
        {
          _index: 462,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "cloned",
        {
          _index: 3865,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "close",
        {
          _index: 2427,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "closemodal",
        {
          _index: 642,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "cloud",
        {
          _index: 3843,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "clásica",
        {
          _index: 3100,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "clásico",
        {
          _index: 2492,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "clásicos",
        {
          _index: 3079,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "code",
        {
          _index: 1358,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "colaborado",
        {
          _index: 407,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "collaboration",
        {
          _index: 498,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "color",
        {
          _index: 276,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "color.b",
        {
          _index: 298,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "color.g",
        {
          _index: 297,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "color.r",
        {
          _index: 302,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colores",
        {
          _index: 197,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colorgroups",
        {
          _index: 273,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colorgroups[key",
        {
          _index: 282,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colorgroups[key].count",
        {
          _index: 284,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colors",
        {
          _index: 231,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colors.foreach((color",
        {
          _index: 274,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "colors[0",
        {
          _index: 287,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "coltrane",
        {
          _index: 2495,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "column",
        {
          _index: 1099,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "columna",
        {
          _index: 2320,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "columns",
        {
          _index: 1167,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "combinando",
        {
          _index: 384,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["come", { _index: 3799, title: {}, body: { "index.html": {} } }],
      ["command", { _index: 3794, title: {}, body: { "index.html": {} } }],
      [
        "commit",
        {
          _index: 2640,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "commonmodule",
        {
          _index: 108,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "como",
        {
          _index: 375,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["compile", { _index: 3781, title: {}, body: { "index.html": {} } }],
      [
        "completa",
        {
          _index: 789,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "completamente",
        {
          _index: 162,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["complete", { _index: 3773, title: {}, body: { "index.html": {} } }],
      [
        "completo",
        {
          _index: 2071,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "completos",
        {
          _index: 3499,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "compodoc",
        { _index: 3734, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "component",
        {
          _index: 104,
          title: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "component_template",
        {
          _index: 962,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "componente",
        {
          _index: 1725,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "components",
        {
          _index: 913,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "index.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "components/aside",
        { _index: 932, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "components/card/card",
        {
          _index: 2505,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "components/greeting/greeting",
        {
          _index: 2506,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "components/musics",
        {
          _index: 2465,
          title: {},
          body: {
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
          },
        },
      ],
      [
        "components/play",
        {
          _index: 2507,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "components/player/player",
        { _index: 935, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "compuesta",
        {
          _index: 353,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "computed",
        {
          _index: 1767,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
          },
        },
      ],
      [
        "comunes",
        {
          _index: 1429,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "común",
        {
          _index: 272,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "con",
        {
          _index: 286,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "concentración",
        {
          _index: 550,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "concepto",
        {
          _index: 389,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "condiciones",
        {
          _index: 2991,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "conectado",
        {
          _index: 2056,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "conectando",
        {
          _index: 2051,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "conectar",
        {
          _index: 846,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "conexión",
        {
          _index: 2009,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "config",
        {
          _index: 3653,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "configuración",
        {
          _index: 2014,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "configurado",
        {
          _index: 3379,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "configurar",
        {
          _index: 220,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "configuras",
        {
          _index: 3324,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "confirm",
        {
          _index: 1504,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "confirma",
        {
          _index: 1441,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "confirmación",
        {
          _index: 1497,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "confirmada",
        {
          _index: 1439,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "confirmed",
        {
          _index: 1436,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "confirmpassword",
        {
          _index: 1663,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "connection",
        {
          _index: 972,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "connection.service",
        {
          _index: 2046,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "connection.service.ts",
        {
          _index: 3312,
          title: {},
          body: {
            "injectables/TestConnectionService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "connection.service.ts:100",
        {
          _index: 3326,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:14",
        {
          _index: 3328,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:144",
        {
          _index: 3322,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:24",
        {
          _index: 3332,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:32",
        {
          _index: 3325,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:39",
        {
          _index: 3330,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:56",
        {
          _index: 3320,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:74",
        {
          _index: 3329,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connection.service.ts:8",
        {
          _index: 3319,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "connectiontestcomponent",
        {
          _index: 971,
          title: { "components/ConnectionTestComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "console.error",
        {
          _index: 2070,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'console.error("api',
        { _index: 834, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        'console.error("error',
        {
          _index: 167,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.error("http',
        {
          _index: 2553,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        'console.error("no',
        {
          _index: 202,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.error("oauth',
        {
          _index: 1783,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        'console.error("sign',
        {
          _index: 1836,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "console.error('error",
        {
          _index: 1873,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "console.error('login",
        {
          _index: 2629,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "console.error('register",
        {
          _index: 2987,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "console.error('reset",
        {
          _index: 3043,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "console.log",
        {
          _index: 149,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'console.log("aplicado',
        {
          _index: 265,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        'console.log("buscando',
        {
          _index: 3109,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        'console.log("búsqueda',
        {
          _index: 3110,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        'console.log("canción',
        {
          _index: 2203,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.log("color',
        {
          _index: 242,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        'console.log("error',
        {
          _index: 2130,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        'console.log("explorar',
        {
          _index: 742,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        'console.log("gradiente',
        {
          _index: 245,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        'console.log("imagen',
        {
          _index: 2192,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.log("iniciando',
        {
          _index: 195,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        'console.log("intentando',
        {
          _index: 1506,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'console.log("login',
        {
          _index: 1459,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'console.log("next',
        {
          _index: 2815,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        'console.log("nuevo',
        {
          _index: 2217,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.log("perfil',
        {
          _index: 3532,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'console.log("previous',
        {
          _index: 2814,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        'console.log("registro',
        {
          _index: 1498,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'console.log("reproduciendo',
        {
          _index: 727,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        'console.log("reproducir',
        {
          _index: 730,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        'console.log("respuesta',
        {
          _index: 1427,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'console.log("sesión',
        {
          _index: 1491,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'console.log("siguiente',
        {
          _index: 2205,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.log("usuario',
        {
          _index: 1489,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "console.log('login",
        {
          _index: 2620,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "console.log('register",
        {
          _index: 2981,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "console.log(`auth",
        {
          _index: 1812,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "console.log(this.currentsong.isplaying",
        {
          _index: 2195,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'console.warn("error',
        {
          _index: 2564,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        'console.warn("no',
        {
          _index: 255,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "const",
        {
          _index: 145,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "constructor",
        {
          _index: 134,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "classes/AuthError.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "classes/NetworkError.html": {},
            "components/PlayerCurrentSong.html": {},
            "injectables/PlaylistService.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "constructor(apiservice",
        {
          _index: 1218,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "constructor(authrepository",
        {
          _index: 1844,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
          },
        },
      ],
      [
        "constructor(fb",
        {
          _index: 3442,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "constructor(http",
        {
          _index: 767,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
          },
        },
      ],
      [
        "constructor(message",
        {
          _index: 1360,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "constructor(private",
        {
          _index: 538,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-4.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "constructor(route",
        {
          _index: 1027,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "constructor(router",
        {
          _index: 925,
          title: {},
          body: {
            "components/App.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "constructor(supabaseservice",
        {
          _index: 1404,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "constructor(testservice",
        {
          _index: 2028,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "container",
        {
          _index: 1066,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "container.with",
        {
          _index: 2326,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "container::before",
        {
          _index: 2343,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "container:hover::before",
        {
          _index: 3594,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "contemporary",
        {
          _index: 509,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "contenedor",
        {
          _index: 2314,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "contenido",
        {
          _index: 1152,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "content",
        {
          _index: 828,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "context(body",
        {
          _index: 2419,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "contexto",
        {
          _index: 206,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "contraseña",
        {
          _index: 1433,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "control",
        {
          _index: 993,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "control'},{'name",
        {
          _index: 999,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "control.html",
        {
          _index: 2826,
          title: {},
          body: {
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "control.ts",
        {
          _index: 2825,
          title: {},
          body: {
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "control.ts:15",
        {
          _index: 2831,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "control.ts:17",
        {
          _index: 2838,
          title: {},
          body: {
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "control.ts:18",
        {
          _index: 2839,
          title: {},
          body: {
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "control.ts:20",
        {
          _index: 2841,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "control.ts:21",
        {
          _index: 2864,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "control.ts:23",
        {
          _index: 2863,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "control.ts:25",
        {
          _index: 2833,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "control.ts:29",
        {
          _index: 2866,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "control.ts:31",
        {
          _index: 2837,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "control.ts:33",
        {
          _index: 2868,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "control.ts:42",
        {
          _index: 2835,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "control/player",
        {
          _index: 2108,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "control?.markastouched",
        {
          _index: 3530,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "controles",
        {
          _index: 2356,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "controls",
        {
          _index: 2383,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "convertir",
        {
          _index: 1701,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "correctamente",
        {
          _index: 2059,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "correo",
        {
          _index: 1520,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "corriendo",
        {
          _index: 2057,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "cors",
        {
          _index: 221,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "cors_allow_credentials",
        {
          _index: 3365,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "cors_allowed_origins",
        {
          _index: 3362,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "corsheaders",
        {
          _index: 3358,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "corsheaders.middleware.corsmiddleware",
        {
          _index: 3360,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "count",
        {
          _index: 283,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "counter",
        {
          _index: 3620,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "counter.danger",
        {
          _index: 3623,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "counter.warning",
        {
          _index: 3621,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "county",
        {
          _index: 2249,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "cover",
        {
          _index: 100,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cover_image",
        {
          _index: 3382,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "coverage",
        {
          _index: 3647,
          title: { "coverage.html": {} },
          body: { "coverage.html": {} },
        },
      ],
      [
        "coverimage",
        {
          _index: 33,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "cracker",
        {
          _index: 444,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "cracks",
        {
          _index: 2287,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "creada",
        {
          _index: 347,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "creadas",
        {
          _index: 3564,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "creado",
        {
          _index: 1490,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "creando",
        {
          _index: 419,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "crear",
        {
          _index: 293,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "create",
        {
          _index: 677,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "createartistprofile",
        {
          _index: 1199,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "createartistprofile(artistdata",
        {
          _index: 1220,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "createclient",
        {
          _index: 3307,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "created_at",
        {
          _index: 1824,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "createdat",
        {
          _index: 19,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "createnoderequesthandler(app",
        {
          _index: 3837,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "createplaylist",
        {
          _index: 640,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "createplaylist(playlistdata",
        {
          _index: 2899,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "createplaylistdto",
        {
          _index: 59,
          title: { "interfaces/CreatePlaylistDto.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "credentials",
        {
          _index: 1385,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "credentials.email",
        {
          _index: 1424,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "credentials.name",
        {
          _index: 1469,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "credentials.password",
        {
          _index: 1426,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "credentials.password.length",
        {
          _index: 2679,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
          },
        },
      ],
      [
        "ctx",
        {
          _index: 200,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "ctx.drawimage(img",
        {
          _index: 226,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cuando",
        {
          _index: 716,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "cuatro",
        {
          _index: 354,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "cubic",
        {
          _index: 3580,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "cubre",
        {
          _index: 2315,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "cuenta",
        {
          _index: 1438,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "current",
        {
          _index: 945,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "currenthour",
        { _index: 2476, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "currentindex",
        {
          _index: 186,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "currentmusic",
        {
          _index: 2077,
          title: {
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
          },
          body: {
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "currentnotifications",
        {
          _index: 2744,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "currentnotifications.filter(n",
        {
          _index: 2752,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "currentpassword",
        {
          _index: 1661,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "currentplaylistid",
        {
          _index: 1927,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "currents",
        {
          _index: 618,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "currentsong",
        {
          _index: 2153,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-6.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "currentsong.album",
        {
          _index: 2231,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "currentsong.artist",
        {
          _index: 2230,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "currentsong.currenttime",
        {
          _index: 2232,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "currentsong.duration",
        {
          _index: 2233,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "currentsong.html",
        {
          _index: 2152,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "currentsong.title",
        {
          _index: 2229,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "currentsongcomponent",
        {
          _index: 974,
          title: { "components/CurrentSongComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "currenttime",
        {
          _index: 2181,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "currenttime.gethours",
        { _index: 2477, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "currentuser",
        {
          _index: 1557,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "currentusersubject",
        {
          _index: 1558,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "currentuservalue",
        {
          _index: 3482,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "cursor",
        {
          _index: 1135,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "cyan",
        {
          _index: 3092,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "d",
        {
          _index: 359,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "d1d5db",
        {
          _index: 2649,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "d4edda",
        {
          _index: 1979,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "daily",
        { _index: 1322, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "damon",
        {
          _index: 349,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "dar",
        {
          _index: 453,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "darkercolor",
        {
          _index: 300,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "data",
        {
          _index: 73,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "data.session",
        {
          _index: 1457,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "data.session.access_token",
        {
          _index: 3287,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "data.session.user",
        {
          _index: 3295,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "data.session?.access_token",
        {
          _index: 3294,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "data.session?.user",
        {
          _index: 3292,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "data.user",
        {
          _index: 1452,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "data.user.id",
        {
          _index: 1461,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "date",
        {
          _index: 517,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/AuthToken.html": {},
            "components/Greeting.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/User-1.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date(session.expires_at",
        {
          _index: 1542,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "date(supabaseuser.created_at",
        {
          _index: 1535,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "date(supabaseuser.updated_at",
        {
          _index: 1536,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "date.now",
        {
          _index: 700,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "date.now().tostring",
        {
          _index: 701,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "datos",
        {
          _index: 1454,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "davis",
        {
          _index: 2494,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "days",
        {
          _index: 433,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "dba8ba36b745?w=400&h=400&fit=crop",
        {
          _index: 178,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "de",
        {
          _index: 68,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterDto.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "debe",
        {
          _index: 1482,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "debug",
        {
          _index: 790,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "debut",
        {
          _index: 429,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "decoration",
        {
          _index: 3011,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "decorators",
        { _index: 2793, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "dee2e6",
        {
          _index: 2005,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "default",
        {
          _index: 636,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "injectables/NotificationService.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "defecto",
        {
          _index: 793,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "defined",
        {
          _index: 769,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "dejando",
        {
          _index: 738,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "dejar",
        {
          _index: 1268,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "del",
        {
          _index: 208,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "delay",
        {
          _index: 158,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "delete",
        { _index: 759, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "delete(`${this.baseurl}${endpoint",
        { _index: 883, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "delete(endpoint",
        { _index: 773, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "deleteaccount",
        {
          _index: 1564,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "deleteaccount(password",
        {
          _index: 1583,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "deleteplaylist",
        {
          _index: 2881,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "deleteplaylist(id",
        {
          _index: 2902,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "deletesong",
        {
          _index: 3191,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "deletesong(songid",
        {
          _index: 3212,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "demasiadas",
        {
          _index: 2548,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "demasiado",
        {
          _index: 674,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "demon",
        {
          _index: 432,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "denegado",
        {
          _index: 2544,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "dependencies",
        {
          _index: 3721,
          title: { "dependencies.html": {} },
          body: { "dependencies.html": {} },
        },
      ],
      [
        "derecho",
        {
          _index: 2440,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "derechos",
        {
          _index: 2642,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "desactivado",
        {
          _index: 3576,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "desarrollador",
        {
          _index: 3327,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "desc",
        {
          _index: 94,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "desconocido",
        { _index: 857, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "descripción",
        {
          _index: 3505,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "description",
        {
          _index: 24,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "description?.errors?.['maxlength",
        {
          _index: 3556,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "description?.errors?.[\\'maxlength",
        {
          _index: 3645,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "description?.invalid",
        {
          _index: 3554,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "description?.touched",
        {
          _index: 3555,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "description?.value?.length",
        {
          _index: 3557,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "descubre",
        {
          _index: 2509,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "desde",
        {
          _index: 411,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "deshabilitada",
        {
          _index: 1505,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "desktop",
        {
          _index: 2403,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "deslizante",
        {
          _index: 2423,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "despertar",
        {
          _index: 581,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "después",
        {
          _index: 1507,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "destruction",
        {
          _index: 2710,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      ["detailed", { _index: 3808, title: {}, body: { "index.html": {} } }],
      [
        "details",
        {
          _index: 1162,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "detección",
        {
          _index: 252,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "determinar",
        {
          _index: 309,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "dev",
        {
          _index: 3840,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["development", { _index: 3752, title: {}, body: { "index.html": {} } }],
      [
        "devolver",
        {
          _index: 2139,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "devuelve",
        {
          _index: 1653,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "diferente",
        {
          _index: 2099,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "diferentes",
        {
          _index: 229,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "dimensiones",
        {
          _index: 153,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "direcciones",
        {
          _index: 324,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "dirección",
        {
          _index: 315,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "directamente",
        {
          _index: 2065,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "direction",
        {
          _index: 1098,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "directive",
        {
          _index: 960,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "directives",
        {
          _index: 1020,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "index.html": {},
          },
        },
      ],
      ["directory", { _index: 3785, title: {}, body: { "index.html": {} } }],
      [
        "dirty",
        {
          _index: 473,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "discord",
        {
          _index: 1555,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "display",
        {
          _index: 1096,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "disponible",
        {
          _index: 1909,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "disponibles",
        {
          _index: 3373,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      ["dist", { _index: 3784, title: {}, body: { "index.html": {} } }],
      [
        "dividida",
        {
          _index: 2446,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "django",
        {
          _index: 776,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "django.middleware.common.commonmiddleware",
        {
          _index: 3361,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "document",
        {
          _index: 2161,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'document.createelement("canvas',
        {
          _index: 199,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "document.getelementbyid",
        {
          _index: 3533,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'document.getelementbyid("imageinput',
        {
          _index: 689,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "documentation",
        { _index: 3648, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "dom",
        {
          _index: 915,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "domain/entities/user.entity",
        {
          _index: 1775,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "domain/repositories/i",
        {
          _index: 2613,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "domain/usecases/login.usecase",
        {
          _index: 2612,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "domain/usecases/reset",
        {
          _index: 3037,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "domain/usecases/social",
        {
          _index: 2614,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "dominantcolor",
        {
          _index: 240,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "dominante",
        {
          _index: 243,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "don't",
        {
          _index: 2241,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "don\\'t",
        {
          _index: 2452,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "down",
        {
          _index: 2236,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "dreams",
        {
          _index: 2263,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "drf",
        {
          _index: 3377,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "dto",
        {
          _index: 3909,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dto.email",
        {
          _index: 3911,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dto.id",
        {
          _index: 3910,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dto.name",
        {
          _index: 3912,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dtos",
        {
          _index: 55,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "dua",
        {
          _index: 603,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "duplicar",
        {
          _index: 2907,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "duplicateplaylist",
        {
          _index: 2882,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "duplicateplaylist(playlistid",
        {
          _index: 2904,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "duración",
        {
          _index: 2852,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "durante",
        {
          _index: 1896,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "duration",
        {
          _index: 36,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "during",
        {
          _index: 3841,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "e",
        {
          _index: 683,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/LoginComponent.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "e.target?.result",
        {
          _index: 684,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["e2e", { _index: 3797, title: {}, body: { "index.html": {} } }],
      ["e2eangular", { _index: 3798, title: {}, body: { "index.html": {} } }],
      [
        "e5e7eb",
        {
          _index: 1145,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "eab308",
        {
          _index: 1180,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "eagles",
        {
          _index: 2696,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "ease",
        {
          _index: 1095,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "eastwood",
        {
          _index: 463,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "ebipcvxpxrqdihhhhfyf",
        {
          _index: 3879,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ec4899",
        {
          _index: 3607,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "ecléctico",
        {
          _index: 421,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "editar",
        {
          _index: 3542,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "edm",
        {
          _index: 3089,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "ef4444",
        {
          _index: 3624,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "efectos",
        {
          _index: 3582,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "eilish",
        {
          _index: 591,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "ejecutándose",
        {
          _index: 850,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
          },
        },
      ],
      [
        "ejemplo",
        {
          _index: 1747,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "el",
        {
          _index: 211,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "elaborados",
        {
          _index: 398,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "electronic",
        {
          _index: 329,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "electrónica",
        {
          _index: 387,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "electrónico",
        {
          _index: 1521,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "element",
        {
          _index: 959,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "elementos",
        {
          _index: 385,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "elementref",
        {
          _index: 2101,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "eliminar",
        {
          _index: 1585,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "elton",
        {
          _index: 416,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "em",
        {
          _index: 2285,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "email",
        {
          _index: 17,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "email.trim",
        {
          _index: 3060,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "email?.errors?.['email",
        {
          _index: 3552,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "email?.errors?.['required",
        {
          _index: 3551,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "email?.errors?.[\\'email",
        {
          _index: 3644,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "email?.errors?.[\\'required",
        {
          _index: 3643,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "email?.invalid",
        {
          _index: 3549,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "email?.touched",
        {
          _index: 3550,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "emailregex",
        {
          _index: 3063,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "emailregex.test(email",
        {
          _index: 3065,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "emailtype",
        {
          _index: 3495,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "emerald",
        {
          _index: 3099,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "empezar",
        {
          _index: 725,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "en",
        {
          _index: 39,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "enableedit",
        {
          _index: 3435,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "encontrado",
        {
          _index: 853,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "encontrar",
        {
          _index: 271,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "encontraron",
        {
          _index: 256,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["end", { _index: 3796, title: {}, body: { "index.html": {} } }],
      [
        "endpoint",
        {
          _index: 779,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "endpoints",
        {
          _index: 2017,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "energy",
        {
          _index: 574,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "enlaces",
        {
          _index: 3009,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "enter",
        {
          _index: 751,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "entities/auth",
        {
          _index: 1394,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
          },
        },
      ],
      [
        "entities/user.entity",
        {
          _index: 1392,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
          },
        },
      ],
      [
        "enviado",
        {
          _index: 1519,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "enviando",
        {
          _index: 3044,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "enviar",
        {
          _index: 3045,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "environment",
        {
          _index: 822,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TokenStorageService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "environment.api_url",
        {
          _index: 909,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "environment.apiurl",
        { _index: 814, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "environment.supabase.supabase_anon_key",
        {
          _index: 3310,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "environment.supabase.supabase_url",
        {
          _index: 3309,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "environments/environment",
        {
          _index: 823,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/SupabaseService.html": {},
          },
        },
      ],
      [
        "envía",
        {
          _index: 1733,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "enérgica",
        {
          _index: 575,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "ephemeral",
        {
          _index: 2255,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "error",
        {
          _index: 259,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "classes/AuthError.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/SessionError.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        'error("demasiados',
        {
          _index: 1445,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("el',
        {
          _index: 1486,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("email',
        {
          _index: 1432,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("este',
        {
          _index: 1475,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("inicio',
        {
          _index: 1455,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("la',
        {
          _index: 1481,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("registro',
        {
          _index: 1488,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        'error("sesión',
        {
          _index: 2559,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        'error("sign',
        {
          _index: 1837,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        'error("tu',
        {
          _index: 1437,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error(`error",
        {
          _index: 1451,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error(error.message",
        {
          _index: 1524,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error(error?.message",
        {
          _index: 1529,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error(errormessage",
        {
          _index: 858,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "error.error",
        {
          _index: 2530,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "error.error.errors.join",
        {
          _index: 842,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "error.error.message",
        {
          _index: 839,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "error.error?.code",
        {
          _index: 2539,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "error.error?.errors",
        {
          _index: 840,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "error.error?.message",
        {
          _index: 838,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "error.interceptor.ts",
        {
          _index: 2518,
          title: {},
          body: {
            "interceptors/HttpErrorInterceptor.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "error.interceptor.ts:16",
        {
          _index: 2520,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "error.interceptor.ts:20",
        {
          _index: 2523,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "error.interceptor.ts:90",
        {
          _index: 2522,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "error.message",
        {
          _index: 843,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "error.message.includes('already",
        {
          _index: 1474,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.message.includes('email",
        {
          _index: 1435,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.message.includes('invalid",
        {
          _index: 1430,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.message.includes('password",
        {
          _index: 1480,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.message.includes('too",
        {
          _index: 1442,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.message.includes('user",
        {
          _index: 1471,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "error.name",
        {
          _index: 2074,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "error.status",
        {
          _index: 844,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "error.statustext",
        {
          _index: 856,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "error.url",
        {
          _index: 2073,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "errores",
        {
          _index: 802,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
          },
        },
      ],
      [
        "errorevent",
        {
          _index: 2528,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "errormessage",
        {
          _index: 835,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "errors",
        {
          _index: 76,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "errors/auth.errors",
        {
          _index: 2673,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        "es",
        {
          _index: 311,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "escuchadas",
        {
          _index: 3562,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "esos",
        {
          _index: 558,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "espaciado",
        {
          _index: 2366,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "espaciador",
        {
          _index: 2357,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "espacio",
        {
          _index: 2355,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "específica",
        {
          _index: 3124,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "específico",
        {
          _index: 1428,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "específicos",
        {
          _index: 2066,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "espera",
        {
          _index: 1447,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "esperamos",
        {
          _index: 1508,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "est",
        {
          _index: 161,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "esta",
        {
          _index: 2413,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "estado",
        {
          _index: 1723,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "estadísticas",
        {
          _index: 1243,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "estilos",
        {
          _index: 3577,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "esto",
        {
          _index: 1502,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "están",
        {
          _index: 2323,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "estén",
        {
          _index: 3498,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "evans",
        {
          _index: 2497,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "evening",
        {
          _index: 566,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "event",
        {
          _index: 144,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "event.clientx",
        {
          _index: 2212,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "event.currenttarget",
        {
          _index: 706,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "event.key",
        {
          _index: 750,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "event.preventdefault",
        {
          _index: 752,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "event.stoppropagation",
        {
          _index: 721,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "event.target",
        {
          _index: 147,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "event.target.src",
        {
          _index: 2875,
          title: {},
          body: {
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "event.url.includes('/currentsong",
        { _index: 950, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "event.url.includes('/login",
        { _index: 948, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "event.url.includes('/register",
        { _index: 949, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "eventcoalescing",
        {
          _index: 3848,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "eventemitter",
        {
          _index: 2807,
          title: {},
          body: {
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "eventos",
        {
          _index: 745,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "everybody",
        {
          _index: 2278,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "evitar",
        {
          _index: 2185,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      ["example", { _index: 3755, title: {}, body: { "index.html": {} } }],
      [
        "execute",
        {
          _index: 2666,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "execute(credentials",
        {
          _index: 2669,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
          },
        },
      ],
      [
        "execute(email",
        {
          _index: 3057,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "execute(provider",
        {
          _index: 3185,
          title: {},
          body: { "injectables/SocialLoginUseCase.html": {} },
        },
      ],
      [
        "existe",
        {
          _index: 3502,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "exitosamente",
        {
          _index: 1495,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "exitoso",
        {
          _index: 1460,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "exitosos",
        {
          _index: 381,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "exp",
        {
          _index: 1699,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "experiencias",
        {
          _index: 455,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "expirada",
        {
          _index: 2560,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "expirado",
        {
          _index: 1595,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "expiration",
        {
          _index: 1704,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "expires_at",
        {
          _index: 1833,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "expires_in",
        {
          _index: 1831,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "expiresat",
        {
          _index: 1541,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthToken.html": {},
          },
        },
      ],
      [
        "explorar",
        {
          _index: 954,
          title: {},
          body: {
            "components/App.html": {},
            "components/ExploreComponent.html": {},
          },
        },
      ],
      [
        "explore",
        {
          _index: 2459,
          title: {},
          body: {
            "components/ExploreComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "explore'},{'name",
        {
          _index: 977,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "explore.css",
        {
          _index: 2461,
          title: {},
          body: { "components/ExploreComponent.html": {} },
        },
      ],
      [
        "explore.html",
        {
          _index: 2460,
          title: {},
          body: { "components/ExploreComponent.html": {} },
        },
      ],
      [
        "explorecomponent",
        {
          _index: 976,
          title: { "components/ExploreComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "exploremusic",
        {
          _index: 741,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "export",
        {
          _index: 13,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "express",
        {
          _index: 3736,
          title: {},
          body: { "dependencies.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "extends",
        {
          _index: 1356,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "externas",
        {
          _index: 223,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "extra",
        {
          _index: 3015,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "extracción",
        {
          _index: 196,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "extractcolorsfromimage",
        {
          _index: 1023,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "extractcolorsfromimage(img",
        {
          _index: 193,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "extraemos",
        {
          _index: 1654,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "extraer",
        {
          _index: 228,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjpc3mioijzdxbhymfzzsisinjlzii6imviaxbjdnhwehjxzgloaghoznlmiiwicm9szsi6imfub24ilcjpyxqioje3ntmzmdg1otcsimv4cci6mja2odg4ndu5n30.gtfw1dgtp_suqmepkk2pv77pqwpe4yv2lxmrj1zdh6w",
        {
          _index: 3883,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjpc3mioijzdxbhymfzzsisinjlzii6imviaxbjdnhwehjxzgloaghoznlmiiwicm9szsi6innlcnzpy2vfcm9szsisimlhdci6mtc1mzmwodu5nywizxhwijoymdy4odg0ntk3fq.rw0stsub_zdz69bmyntcy8pdtbnbboze29krx6vqhdw",
        {
          _index: 3885,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "f1f5f9",
        {
          _index: 1076,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "f3f4f6",
        {
          _index: 1155,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "f59e0b",
        {
          _index: 3622,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "f5c6cb",
        {
          _index: 1985,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "f8d7da",
        {
          _index: 1983,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "f8f9fa",
        {
          _index: 2004,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "f8fafc",
        {
          _index: 1075,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "f9fafb",
        {
          _index: 1157,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "facebook",
        {
          _index: 1553,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "fadein",
        {
          _index: 2309,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "failed",
        {
          _index: 1530,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "fall",
        {
          _index: 611,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "falla",
        {
          _index: 1516,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "fallback",
        {
          _index: 267,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "fallido",
        {
          _index: 1456,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "falling",
        {
          _index: 2274,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "false",
        {
          _index: 530,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthStateService.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "family",
        {
          _index: 1972,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "fast",
        {
          _index: 2282,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "favor",
        {
          _index: 660,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "favorita",
        {
          _index: 542,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "favorito",
        {
          _index: 3568,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "favoritos",
        {
          _index: 3565,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "fb",
        {
          _index: 3445,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "fca5a5",
        {
          _index: 3050,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "featuredplaylists",
        {
          _index: 2481,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "fee2e2",
        {
          _index: 3049,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "feel",
        {
          _index: 458,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "fetch",
        {
          _index: 2075,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        'fetch("http://localhost:8000',
        {
          _index: 3345,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "ff6b6b",
        {
          _index: 263,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "ffeaa7",
        {
          _index: 1989,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "fff",
        {
          _index: 2422,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "fff3cd",
        {
          _index: 1987,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "ficticios",
        {
          _index: 356,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "field.invalid",
        {
          _index: 3627,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "file",
        {
          _index: 5,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "file.size",
        {
          _index: 672,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "file_url",
        {
          _index: 3394,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "filereader",
        {
          _index: 681,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["files", { _index: 3766, title: {}, body: { "index.html": {} } }],
      [
        "fileurl",
        {
          _index: 41,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "fill",
        {
          _index: 1169,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "filter",
        {
          _index: 936,
          title: {},
          body: {
            "components/App.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "filters",
        {
          _index: 1235,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "filtros",
        {
          _index: 83,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "finally",
        {
          _index: 1785,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "finddominantcolor",
        {
          _index: 268,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "finddominantcolor(colors",
        {
          _index: 1031,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "firebase",
        {
          _index: 3842,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "first",
        {
          _index: 2319,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "fit",
        {
          _index: 1106,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "fixed",
        {
          _index: 2307,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "flex",
        {
          _index: 1097,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "flexible",
        {
          _index: 2341,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "followartist",
        {
          _index: 1200,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "followartist(artistid",
        {
          _index: 1225,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "followers",
        {
          _index: 25,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "followers_count",
        {
          _index: 3402,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "following",
        {
          _index: 1293,
          title: {},
          body: { "injectables/ArtistService.html": {}, "index.html": {} },
        },
      ],
      [
        "followplaylist",
        {
          _index: 2883,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "followplaylist(playlistid",
        {
          _index: 2908,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "font",
        {
          _index: 1114,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "footer",
        {
          _index: 2390,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "forever",
        {
          _index: 2269,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "form",
        {
          _index: 534,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "format",
        {
          _index: 2678,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        "formato",
        {
          _index: 798,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
          },
        },
      ],
      [
        "formattime",
        {
          _index: 2827,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "formattime(currenttime",
        {
          _index: 2856,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "formattime(duration",
        {
          _index: 2857,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "formattime(seconds",
        {
          _index: 2832,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "formbuilder",
        {
          _index: 3443,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "formdata",
        {
          _index: 884,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'formdata.append("file',
        { _index: 885, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "formdata.append(key",
        { _index: 887, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "formdata.email",
        {
          _index: 3518,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "formdata.username",
        {
          _index: 3517,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "formgroup",
        {
          _index: 3461,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "formsmodule",
        {
          _index: 514,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "formulario",
        {
          _index: 2998,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "formularios",
        {
          _index: 3626,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "forzar",
        {
          _index: 251,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "foto",
        {
          _index: 1620,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "framework",
        {
          _index: 778,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "free",
        {
          _index: 2252,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "freely",
        {
          _index: 2276,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "from(this.authrepository.refreshsession()).pipe",
        {
          _index: 2554,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "fue",
        {
          _index: 399,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "funciona",
        {
          _index: 1503,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "funcionando",
        {
          _index: 2039,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "function",
        {
          _index: 2128,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "classes/IAuthService.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "functions",
        {
          _index: 3844,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "funky",
        {
          _index: 413,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "future",
        {
          _index: 622,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "g",
        {
          _index: 237,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "gama",
        {
          _index: 409,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "gap",
        {
          _index: 1103,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "gas",
        {
          _index: 2280,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "generado",
        {
          _index: 246,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "general",
        {
          _index: 3120,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      ["generate", { _index: 3771, title: {}, body: { "index.html": {} } }],
      ["generated", { _index: 3748, title: {}, body: { "index.html": {} } }],
      [
        "generategradient",
        {
          _index: 1024,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "generategradient(color",
        {
          _index: 292,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "genre",
        {
          _index: 88,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/ExploreComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "genre.description",
        {
          _index: 3112,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "genre.name",
        {
          _index: 3111,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "genres",
        {
          _index: 29,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/ExploreComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "get(`${this.baseurl}${endpoint",
        { _index: 865, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "get(`${this.endpoint}/me",
        {
          _index: 1652,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "get(endpoint",
        { _index: 782, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "get(url",
        {
          _index: 898,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "getartistalbums",
        {
          _index: 1201,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistalbums(artistid",
        {
          _index: 1227,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistbyid",
        {
          _index: 1202,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistbyid(id",
        {
          _index: 1229,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartists",
        {
          _index: 1203,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartists(filters",
        {
          _index: 1231,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistsbygenre",
        {
          _index: 1204,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistsbygenre(genre",
        {
          _index: 1236,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistsongs",
        {
          _index: 1205,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistsongs(artistid",
        {
          _index: 1239,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartistsstring",
        {
          _index: 2775,
          title: {},
          body: { "components/PlayListItemCard.html": {} },
        },
      ],
      [
        "getartiststats",
        {
          _index: 1206,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartiststats(artistid",
        {
          _index: 1241,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartisttopsongs",
        {
          _index: 1207,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getartisttopsongs(artistid",
        {
          _index: 1244,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getauthtoken",
        {
          _index: 1565,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getclient",
        {
          _index: 3305,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "getcurrentsession",
        {
          _index: 1547,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "getcurrentuser",
        {
          _index: 1379,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "injectables/AuthService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
          },
        },
      ],
      [
        "getcurrentuservalue",
        {
          _index: 1566,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "getdescription",
        {
          _index: 3469,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "getdjangomockdata",
        {
          _index: 3314,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "getdjangomockdata(type",
        {
          _index: 3321,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "getemail",
        {
          _index: 3467,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "getfollowedartists",
        {
          _index: 1208,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getfollowedplaylists",
        {
          _index: 2884,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getfullurl",
        {
          _index: 760,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "getfullurl(endpoint",
        {
          _index: 787,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "getheaders",
        { _index: 761, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "geticonclassname",
        {
          _index: 1945,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "getisplayingplaylist",
        {
          _index: 1941,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "getisthisplaylistinstore",
        {
          _index: 1943,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "getlikedsongs",
        {
          _index: 3192,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getnewartists",
        {
          _index: 1209,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getnewartists(limit",
        {
          _index: 1249,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getnextsong",
        {
          _index: 2138,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "getnotifications",
        {
          _index: 2733,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "getpaginated",
        { _index: 762, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "getpaginated(endpoint",
        { _index: 795, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "getpersonalizedrecommendations",
        {
          _index: 3193,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getpersonalizedrecommendations(limit",
        {
          _index: 3217,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getplayhistory",
        {
          _index: 3194,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getplayhistory(limit",
        {
          _index: 3221,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getplaylistbyid",
        {
          _index: 2885,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getplaylistbyid(id",
        {
          _index: 2913,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getplaylists",
        {
          _index: 2886,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getplaylists(filters",
        {
          _index: 2915,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getplaylistsongs",
        {
          _index: 2887,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getplaylistsongs(playlistid",
        {
          _index: 2918,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getpopularartists",
        {
          _index: 1210,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getpopularartists(limit",
        {
          _index: 1253,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getpopularsearches",
        {
          _index: 3150,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "getpopularsearches(limit",
        {
          _index: 3134,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "getpopularsongs",
        {
          _index: 3195,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getpopularsongs(limit",
        {
          _index: 3223,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getprogresspercentage",
        {
          _index: 2840,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "getrecentsongs",
        {
          _index: 3196,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getrecentsongs(limit",
        {
          _index: 3225,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getrecommendedartists",
        {
          _index: 1211,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getrecommendedartists(limit",
        {
          _index: 1255,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getroundedvolumepercentage",
        {
          _index: 2867,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "getsearchhistory",
        {
          _index: 3151,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "getsearchhistory(limit",
        {
          _index: 3136,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "getsearchsuggestions",
        {
          _index: 3152,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "getsearchsuggestions(query",
        {
          _index: 3132,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "getsession",
        { _index: 2576, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "getsimilarartists",
        {
          _index: 1212,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getsimilarartists(artistid",
        {
          _index: 1258,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "getsongbyid",
        {
          _index: 3197,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongbyid(id",
        {
          _index: 3228,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsonglyrics",
        {
          _index: 3198,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsonglyrics(songid",
        {
          _index: 3230,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongrecommendations",
        {
          _index: 3199,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongrecommendations(songid",
        {
          _index: 3233,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongs",
        {
          _index: 3200,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongs(filters",
        {
          _index: 3236,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbyalbum",
        {
          _index: 3201,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbyalbum(albumid",
        {
          _index: 3238,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbyartist",
        {
          _index: 3202,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbyartist(artistid",
        {
          _index: 3240,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbygenre",
        {
          _index: 3203,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getsongsbygenre(genre",
        {
          _index: 3242,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "getting",
        {
          _index: 1806,
          title: { "index.html": {} },
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "gettoken",
        {
          _index: 3410,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "getuser",
        { _index: 2577, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "getusername",
        {
          _index: 3465,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "getuserplaylists",
        {
          _index: 2888,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getuserplaylists(userid",
        {
          _index: 2920,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "getvolumepercentage",
        {
          _index: 2865,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "getwithsignal",
        {
          _index: 896,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "getwithsignal(url",
        {
          _index: 900,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "gif",
        {
          _index: 665,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "gimnasio",
        {
          _index: 576,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "github",
        {
          _index: 1552,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "glass",
        {
          _index: 3597,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "glassmorphism",
        {
          _index: 3596,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "go",
        {
          _index: 2239,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "goback",
        {
          _index: 2155,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "good",
        {
          _index: 459,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "google",
        {
          _index: 1551,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "gorillaz",
        {
          _index: 326,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "gradient",
        {
          _index: 114,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "gradient(135deg",
        {
          _index: 262,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "gradient(90deg",
        {
          _index: 3605,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "gradiente",
        {
          _index: 266,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "grammy",
        {
          _index: 495,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "grande",
        {
          _index: 675,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "grandes",
        {
          _index: 3014,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "gravitate",
        {
          _index: 2302,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "gray",
        {
          _index: 3102,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "green",
        {
          _index: 3098,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "greeting",
        {
          _index: 978,
          title: { "components/Greeting.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "greeting'},{'name",
        {
          _index: 979,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "greeting.css",
        { _index: 2470, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "greeting.html",
        { _index: 2469, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "grid",
        {
          _index: 1166,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "group",
        {
          _index: 291,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "group.count",
        {
          _index: 290,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "grupo",
        {
          _index: 285,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "guardado",
        {
          _index: 1639,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "guardando",
        {
          _index: 3515,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "guardar",
        {
          _index: 3140,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "guide",
        {
          _index: 1991,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "guitarra",
        {
          _index: 366,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "guns",
        {
          _index: 2706,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "gustan",
        {
          _index: 3216,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "guía",
        {
          _index: 2013,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "género",
        {
          _index: 1238,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "géneros",
        {
          _index: 423,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "h",
        {
          _index: 1953,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "h1",
        {
          _index: 1185,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "h2",
        {
          _index: 1146,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "h3",
        {
          _index: 1164,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "h4",
        {
          _index: 1183,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "ha",
        {
          _index: 372,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hace",
        {
          _index: 717,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "hacer",
        {
          _index: 1500,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "hacia",
        {
          _index: 321,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hand",
        {
          _index: 2270,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "handleauthstatechange",
        {
          _index: 1708,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "handleauthstatechange(event",
        {
          _index: 1718,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "handleclick",
        {
          _index: 1929,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "components/MusicsTablePlay.html": {},
          },
        },
      ],
      [
        "handleclick(song",
        {
          _index: 2092,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "handleerror",
        {
          _index: 763,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "handleerror(error",
        {
          _index: 799,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "handler",
        {
          _index: 3838,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "handletokenexpired",
        {
          _index: 2519,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "handletokenexpired(request",
        {
          _index: 2521,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "harder",
        {
          _index: 2300,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "harry",
        {
          _index: 474,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hasemail",
        {
          _index: 3494,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "hasta",
        {
          _index: 415,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hastoken",
        {
          _index: 3486,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "hay",
        {
          _index: 1493,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayerCurrentSong.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "haz",
        {
          _index: 2037,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "hazmats",
        {
          _index: 2281,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "header",
        {
          _index: 1080,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "headers",
        {
          _index: 792,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        'headers.set("authorization',
        { _index: 890, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "hear",
        {
          _index: 2261,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "heart",
        {
          _index: 2294,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "heaven",
        {
          _index: 2700,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "height",
        {
          _index: 1078,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["helpbuilding", { _index: 3778, title: {}, body: { "index.html": {} } }],
      [
        "hemos",
        {
          _index: 3042,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "here",
        {
          _index: 2295,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "hero",
        {
          _index: 1083,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "hewlett",
        {
          _index: 352,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hidden",
        {
          _index: 1091,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["hide", { _index: 941, title: {}, body: { "components/App.html": {} } }],
      [
        "hill",
        {
          _index: 466,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hip",
        {
          _index: 330,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "historial",
        {
          _index: 3135,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "hits",
        {
          _index: 1325,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "hobbs",
        {
          _index: 370,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "home",
        {
          _index: 1341,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "home'},{'name",
        {
          _index: 981,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "home.css",
        {
          _index: 2480,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "home.html",
        {
          _index: 2479,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "homecomponent",
        {
          _index: 980,
          title: { "components/HomeComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "homosapien",
        {
          _index: 414,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "homónimo",
        {
          _index: 430,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "hop",
        {
          _index: 331,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "horas",
        {
          _index: 3561,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "horizon",
        {
          _index: 2254,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "horizontal",
        {
          _index: 2434,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "host",
        {
          _index: 2415,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "hotel",
        {
          _index: 627,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "hours",
        {
          _index: 616,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "hover",
        {
          _index: 3583,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "href",
        {
          _index: 1915,
          title: {},
          body: {
            "components/Card.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "hs256",
        {
          _index: 3889,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "html",
        {
          _index: 958,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "htmlelement",
        {
          _index: 2208,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "htmlimageelement",
        {
          _index: 148,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "htmlinputelement",
        {
          _index: 650,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "http",
        {
          _index: 772,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
          },
        },
      ],
      [
        "http://127.0.0.1:8000",
        {
          _index: 3874,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://127.0.0.1:8000/api",
        {
          _index: 3893,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:4200",
        {
          _index: 3363,
          title: {},
          body: {
            "injectables/TestConnectionService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "http://localhost:4201",
        {
          _index: 3364,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "http://localhost:8000",
        {
          _index: 3344,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "http://localhost:8000/api",
        {
          _index: 3375,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "http://localhost:8000/swagger",
        {
          _index: 3376,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "http_interceptors",
        {
          _index: 3853,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "httpclient",
        {
          _index: 768,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
          },
        },
      ],
      [
        "httperrorinterceptor",
        {
          _index: 2516,
          title: { "interceptors/HttpErrorInterceptor.html": {} },
          body: {
            "interceptors/HttpErrorInterceptor.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "httperrorresponse",
        {
          _index: 2524,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "httpevent",
        {
          _index: 1891,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "httphandler",
        {
          _index: 1887,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "httpheaders",
        { _index: 794, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "httpinterceptor",
        {
          _index: 1892,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "httpinterceptorfn",
        {
          _index: 3862,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "httpparams",
        { _index: 815, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "httpparams.set(key",
        { _index: 862, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "httprequest",
        {
          _index: 1885,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "httpresource",
        {
          _index: 907,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "https://ebipcvxpxrqdihhhhfyf.supabase.co",
        {
          _index: 3881,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "https://example.com/song1.mp3",
        {
          _index: 3395,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "https://images.unsplash.com/photo",
        {
          _index: 173,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/300/300?random=1",
        {
          _index: 3383,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "https://picsum.photos/300/300?random=10",
        {
          _index: 3401,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "https://picsum.photos/300/300?random=2",
        {
          _index: 3390,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "https://picsum.photos/400/400?random",
        {
          _index: 699,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=1",
        {
          _index: 546,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=11",
        {
          _index: 588,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=12",
        {
          _index: 592,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=13",
        {
          _index: 596,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=14",
        {
          _index: 601,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=15",
        {
          _index: 605,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=2",
        {
          _index: 552,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=21",
        {
          _index: 609,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=22",
        {
          _index: 614,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=23",
        {
          _index: 617,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=24",
        {
          _index: 620,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=25",
        {
          _index: 624,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=26",
        {
          _index: 628,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=3",
        {
          _index: 562,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=4",
        {
          _index: 570,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=5",
        {
          _index: 577,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://picsum.photos/400/400?random=6",
        {
          _index: 583,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "https://tu",
        {
          _index: 3890,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "humanz",
        {
          _index: 438,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "humility",
        {
          _index: 471,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "i'm",
        {
          _index: 2292,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "i\\'m",
        {
          _index: 2457,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "iauthrepository",
        {
          _index: 1546,
          title: { "classes/IAuthRepository.html": {} },
          body: {
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "iauthservice",
        {
          _index: 2574,
          title: { "classes/IAuthService.html": {} },
          body: { "classes/IAuthService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "icon",
        {
          _index: 1179,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "iconclassname",
        {
          _index: 1933,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "id",
        {
          _index: 15,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "identifier",
        { _index: 3649, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "image",
        {
          _index: 23,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "image/gif",
        {
          _index: 656,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "image/jpeg",
        {
          _index: 654,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "image/png",
        {
          _index: 655,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "image/webp",
        {
          _index: 657,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "imagen",
        {
          _index: 150,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "imagepreviewurl",
        {
          _index: 533,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "imageupload",
        {
          _index: 3638,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "img",
        {
          _index: 146,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "img.crossorigin",
        {
          _index: 224,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "img.height",
        {
          _index: 156,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "img.src",
        {
          _index: 152,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "img.width",
        {
          _index: 154,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "impala",
        {
          _index: 599,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "impl.ts",
        {
          _index: 1401,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "impl.ts:15",
        {
          _index: 1406,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "impl.ts:168",
        {
          _index: 1415,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "impl.ts:178",
        {
          _index: 1412,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "implementación",
        {
          _index: 3527,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "implementando",
        {
          _index: 3115,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "implementar",
        {
          _index: 3107,
          title: {},
          body: {
            "components/SearchComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "implements",
        {
          _index: 132,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "import",
        {
          _index: 103,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "imports",
        {
          _index: 125,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "imágenes",
        {
          _index: 222,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "inc",
        {
          _index: 460,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      ["includes", { _index: 3768, title: {}, body: { "index.html": {} } }],
      ["including", { _index: 3807, title: {}, body: { "index.html": {} } }],
      [
        "incluyendo",
        {
          _index: 427,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "incompletos",
        {
          _index: 3501,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "incorrecta",
        {
          _index: 2534,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "incorrectos",
        {
          _index: 1434,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "index",
        {
          _index: 7,
          title: { "index.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicador",
        {
          _index: 3617,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "indie",
        {
          _index: 587,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "indigo",
        {
          _index: 3101,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "individual",
        {
          _index: 710,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "industria",
        {
          _index: 401,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "inesperado",
        {
          _index: 837,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "inferior",
        {
          _index: 2426,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "infinite",
        {
          _index: 2395,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "info",
        {
          _index: 3,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "información",
        {
          _index: 1064,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["information", { _index: 3806, title: {}, body: { "index.html": {} } }],
      [
        "ingresa",
        {
          _index: 3553,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "inherited",
        {
          _index: 1407,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "inicia",
        {
          _index: 1742,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "inicial",
        {
          _index: 336,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "inicializa",
        {
          _index: 1722,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "inicialización",
        {
          _index: 1801,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "inicializar",
        {
          _index: 1640,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "iniciando",
        {
          _index: 2636,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "iniciar",
        {
          _index: 1346,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "components/LoginComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "inicio",
        {
          _index: 953,
          title: {},
          body: {
            "components/App.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
          },
        },
      ],
      [
        "init",
        {
          _index: 1709,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "initial",
        {
          _index: 1807,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "initial_session",
        {
          _index: 1814,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "initializesession",
        {
          _index: 1855,
          title: {},
          body: {
            "injectables/AuthStateService.html": {},
            "classes/IAuthService.html": {},
          },
        },
      ],
      [
        "initializing",
        {
          _index: 1874,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "initsession",
        {
          _index: 1843,
          title: {},
          body: { "injectables/AuthSessionUseCase.html": {} },
        },
      ],
      [
        "inject",
        {
          _index: 1331,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "inject(authservice",
        {
          _index: 1317,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "inject(authstateservice",
        {
          _index: 1889,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "inject(document",
        {
          _index: 2183,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "inject(iauthrepository",
        {
          _index: 1964,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "inject(loginusecase",
        {
          _index: 2606,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "inject(platform_id",
        {
          _index: 1638,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "inject(registerusecase",
        {
          _index: 2972,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "inject(resetpasswordusecase",
        {
          _index: 3034,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "inject(router",
        {
          _index: 1762,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "inject(socialloginusecase",
        {
          _index: 2610,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "inject(supabaseservice",
        {
          _index: 1765,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "injectable",
        {
          _index: 753,
          title: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SearchService.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
          },
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 755,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SearchService.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "injectiontoken('authrepository",
        {
          _index: 3856,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "injectiontoken('authservice",
        {
          _index: 3857,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "inmediata",
        {
          _index: 1499,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "inmediato",
        {
          _index: 1501,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "innovadores",
        {
          _index: 380,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "input",
        {
          _index: 688,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-4.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "input.required",
        {
          _index: 3179,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "input.value",
        {
          _index: 690,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "input::placeholder",
        {
          _index: 3002,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "input:focus",
        {
          _index: 3003,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "input?.click",
        {
          _index: 692,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'input[type="email',
        {
          _index: 2646,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        'input[type="email"]:focus',
        {
          _index: 2651,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        'input[type="password',
        {
          _index: 2647,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        'input[type="password"]:focus',
        {
          _index: 2652,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "inputs",
        {
          _index: 1914,
          title: {},
          body: {
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "installed_apps",
        {
          _index: 3357,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "instanceof",
        {
          _index: 939,
          title: {},
          body: {
            "components/App.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "intenta",
        {
          _index: 1449,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "intentamos",
        {
          _index: 1465,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "intentar",
        {
          _index: 2537,
          title: {},
          body: {
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "intentos",
        {
          _index: 1446,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "intercept",
        {
          _index: 1882,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "intercept(request",
        {
          _index: 1884,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "interceptor",
        {
          _index: 1878,
          title: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
          body: { "coverage.html": {} },
        },
      ],
      [
        "interceptor.ts",
        {
          _index: 3705,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "interceptors",
        {
          _index: 1879,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "interface",
        {
          _index: 0,
          title: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "interfaces/Notification.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
          },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "classes/AuthRepository.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "interfaces",
        {
          _index: 2,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "interfaces/Notification.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "internet",
        {
          _index: 2627,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "interno",
        {
          _index: 855,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "inválidas",
        {
          _index: 2625,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "inválido",
        {
          _index: 3524,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "iron",
        {
          _index: 2502,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "iría",
        {
          _index: 723,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "is_public",
        {
          _index: 3384,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "is_verified",
        {
          _index: 3404,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "isauth",
        {
          _index: 3484,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "isauthenticated",
        {
          _index: 1311,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "isclienterror",
        {
          _index: 2529,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "isconnected",
        {
          _index: 2054,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "iscurrentsong",
        {
          _index: 2082,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "iscurrentsong(song",
        {
          _index: 2689,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "iscurrentsongrunning",
        {
          _index: 2716,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "iscurrentsongrunning(song",
        {
          _index: 2086,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "isediting",
        {
          _index: 3429,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "isempty",
        {
          _index: 629,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "isfollowing",
        {
          _index: 518,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "isfollowingartist",
        {
          _index: 1213,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "isfollowingartist(artistid",
        {
          _index: 1260,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "island",
        {
          _index: 445,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "isloading",
        {
          _index: 1707,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "isloggedin",
        {
          _index: 1559,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "isloggedinsubject",
        {
          _index: 1560,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "isnewsongofanotherplaylist",
        {
          _index: 2717,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "isnewsongofanotherplaylist(song",
        {
          _index: 2083,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "isplatformbrowser",
        {
          _index: 1633,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "isplatformbrowser(this.platformid",
        {
          _index: 1649,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "isplaying",
        {
          _index: 1928,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "isplayingplaylist",
        {
          _index: 1931,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "isprivate",
        {
          _index: 537,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "ispublic",
        {
          _index: 48,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "isthisplaylistinstore",
        {
          _index: 1932,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "istokenexpired",
        {
          _index: 1567,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "isvalidemail",
        {
          _index: 2667,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        "isvalidemail(email",
        {
          _index: 2671,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        "it's",
        {
          _index: 2245,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "it\\'s",
        {
          _index: 2453,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "item",
        {
          _index: 1006,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item'},{'name",
        {
          _index: 1017,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "item.html",
        {
          _index: 3173,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "item.ts",
        {
          _index: 3172,
          title: {},
          body: { "components/SideMenuItem.html": {}, "coverage.html": {} },
        },
      ],
      [
        "item.ts:17",
        {
          _index: 3175,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "item.ts:18",
        {
          _index: 3176,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "item.ts:20",
        {
          _index: 3178,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "item/side",
        {
          _index: 1332,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/SideMenuItem.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item:hover",
        {
          _index: 1156,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "item:last",
        {
          _index: 1158,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "items",
        {
          _index: 1101,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "iv",
        {
          _index: 2701,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "iver",
        {
          _index: 2499,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "ivor",
        {
          _index: 506,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "jamie",
        {
          _index: 351,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "jazz",
        {
          _index: 2463,
          title: {},
          body: {
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "jesse",
        {
          _index: 2488,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "john",
        {
          _index: 417,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "join(import.meta.dirname",
        {
          _index: 3836,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "joy",
        {
          _index: 2489,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "jpeg",
        {
          _index: 663,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "js",
        {
          _index: 1774,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "json",
        {
          _index: 2016,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        'json.parse(atob(token.split(".")[1',
        {
          _index: 1698,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "json.parse(userstr",
        {
          _index: 1690,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "json.stringify(authresponse.user",
        {
          _index: 1679,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "justify",
        {
          _index: 2306,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      ["karma", { _index: 3792, title: {}, body: { "index.html": {} } }],
      [
        "key",
        {
          _index: 277,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "keyboardevent",
        {
          _index: 748,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "keyframes",
        {
          _index: 2397,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "kissing",
        {
          _index: 2264,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "kites",
        {
          _index: 2501,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "know",
        {
          _index: 2242,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "la",
        {
          _index: 69,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "lado",
        {
          _index: 2437,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "land",
        {
          _index: 2267,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "lanzado",
        {
          _index: 424,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "large",
        {
          _index: 1936,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "largo",
        {
          _index: 404,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "largos",
        {
          _index: 560,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "las",
        {
          _index: 57,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "latino",
        {
          _index: 2486,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "latinos",
        {
          _index: 3097,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "laughing",
        {
          _index: 2279,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "layout",
        {
          _index: 942,
          title: {},
          body: {
            "components/App.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "lbum",
        {
          _index: 428,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "lbumes",
        {
          _index: 426,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "le",
        {
          _index: 3215,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "led",
        {
          _index: 2483,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "left",
        {
          _index: 1163,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "legend",
        {
          _index: 957,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "letra",
        {
          _index: 3232,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "letras",
        {
          _index: 2200,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "library",
        {
          _index: 519,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "library'},{'name",
        {
          _index: 982,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "library.css",
        {
          _index: 522,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "library.html",
        {
          _index: 520,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "library_music",
        { _index: 1349, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "librarycomponent",
        {
          _index: 523,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "lightercolor",
        {
          _index: 305,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "liked",
        { _index: 1321, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "likes",
        {
          _index: 44,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "likes_count",
        {
          _index: 3398,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "likesong",
        {
          _index: 3204,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "likesong(songid",
        {
          _index: 3244,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "limit",
        {
          _index: 80,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "limpiar",
        {
          _index: 3114,
          title: {},
          body: {
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "line",
        {
          _index: 1119,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "line.active",
        {
          _index: 2429,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "line.chorus",
        {
          _index: 2431,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "linear",
        {
          _index: 261,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "lining",
        {
          _index: 2284,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "link",
        {
          _index: 3010,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "link:focus",
        {
          _index: 3013,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "link:hover",
        {
          _index: 3012,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "lipa",
        {
          _index: 604,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "list",
        {
          _index: 1005,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "literal",
        {
          _index: 1032,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/PaginatedResponse.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "llamar",
        {
          _index: 1724,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "lo",
        {
          _index: 403,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "loadcurrentsong",
        {
          _index: 2156,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "loadgorillazdata",
        {
          _index: 325,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "loading",
        {
          _index: 2392,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "loaduserdata",
        {
          _index: 3436,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["local", { _index: 3753, title: {}, body: { "index.html": {} } }],
      [
        "locales",
        {
          _index: 3523,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'localstorage.getitem("authtoken',
        {
          _index: 889,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        'localstorage.getitem("refreshtoken',
        {
          _index: 1650,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        'localstorage.getitem("user',
        {
          _index: 1689,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "localstorage.getitem(environment.storage_token_key",
        {
          _index: 3418,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        'localstorage.removeitem("authtoken',
        {
          _index: 1682,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        'localstorage.removeitem("refreshtoken',
        {
          _index: 1683,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        'localstorage.removeitem("user',
        {
          _index: 1684,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "localstorage.removeitem(environment.storage_token_key",
        {
          _index: 3419,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        'localstorage.setitem("authtoken',
        {
          _index: 1674,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        'localstorage.setitem("refreshtoken',
        {
          _index: 1677,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        'localstorage.setitem("user',
        {
          _index: 1678,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "localstorage.setitem(environment.storage_token_key",
        {
          _index: 3417,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "login",
        {
          _index: 943,
          title: {},
          body: {
            "components/App.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "login'},{'name",
        {
          _index: 984,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "login(credentials",
        {
          _index: 1382,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "login.css",
        {
          _index: 2588,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login.html",
        {
          _index: 2589,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login.usecase",
        {
          _index: 2615,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "login.usecase.ts",
        {
          _index: 3183,
          title: {},
          body: {
            "injectables/SocialLoginUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "login.usecase.ts:5",
        {
          _index: 3184,
          title: {},
          body: { "injectables/SocialLoginUseCase.html": {} },
        },
      ],
      [
        "login.usecase.ts:8",
        {
          _index: 3186,
          title: {},
          body: { "injectables/SocialLoginUseCase.html": {} },
        },
      ],
      [
        "login_error",
        {
          _index: 1369,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "logincomponent",
        {
          _index: 983,
          title: { "components/LoginComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "logincredentials",
        {
          _index: 1383,
          title: {
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
          },
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "injectables/LoginUseCase.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "logindto",
        {
          _index: 61,
          title: { "interfaces/LoginDto.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "loginerror",
        {
          _index: 1368,
          title: { "classes/LoginError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "loginerror('error",
        {
          _index: 3284,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "loginerror('no",
        {
          _index: 3285,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "loginerror(`error",
        {
          _index: 3298,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "loginrequestdto",
        {
          _index: 2662,
          title: { "interfaces/LoginRequestDTO.html": {} },
          body: {
            "interfaces/LoginRequestDTO.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "loginresult",
        {
          _index: 1513,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "loginusecase",
        {
          _index: 2590,
          title: { "injectables/LoginUseCase.html": {} },
          body: {
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "loginwithdiscord",
        {
          _index: 2592,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "loginwithgithub",
        {
          _index: 2593,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "loginwithgoogle",
        {
          _index: 2594,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "loginwithtwitter",
        {
          _index: 2595,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "logout",
        {
          _index: 1315,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "logoutusecase",
        {
          _index: 2680,
          title: { "injectables/LogoutUseCase.html": {} },
          body: { "injectables/LogoutUseCase.html": {}, "coverage.html": {} },
        },
      ],
      [
        "los",
        {
          _index: 377,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "love",
        {
          _index: 2275,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "lyrics",
        {
          _index: 42,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-6.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "lógica",
        {
          _index: 724,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "machine",
        {
          _index: 442,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "main",
        {
          _index: 2317,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "manage.py",
        {
          _index: 3354,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "manejar",
        { _index: 801, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "manejo",
        {
          _index: 744,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "mantener",
        {
          _index: 3526,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "mantén",
        {
          _index: 3539,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "manu",
        {
          _index: 2490,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "manualmente",
        {
          _index: 1802,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "many",
        {
          _index: 1443,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "map",
        {
          _index: 820,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "map((response",
        {
          _index: 869,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "mapsupabasesessiontotoken",
        {
          _index: 1402,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "mapsupabasesessiontotoken(session",
        {
          _index: 1411,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "mapsupabaseusertodomain",
        {
          _index: 3273,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "mapsupabaseusertodomain(supabaseuser",
        {
          _index: 3277,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "mapsupabaseusertouser",
        {
          _index: 1403,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "mapsupabaseusertouser(supabaseuser",
        {
          _index: 1414,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "margin",
        {
          _index: 1072,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "margin/padding",
        {
          _index: 2417,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "markformgrouptouched",
        {
          _index: 3437,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "matching",
        {
          _index: 96,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "math",
        {
          _index: 2858,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "math.ceil",
        { _index: 873, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "math.ceil(response.count",
        { _index: 877, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "math.floor(color.b",
        {
          _index: 281,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "math.floor(color.g",
        {
          _index: 280,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "math.floor(color.r",
        {
          _index: 278,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "math.floor(seconds",
        {
          _index: 2845,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "math.max(0",
        {
          _index: 303,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "math.min(255",
        {
          _index: 308,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "math.round(this.volumepercentage",
        {
          _index: 2870,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "maticon",
        {
          _index: 2587,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "maticonmodule",
        {
          _index: 1308,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "max",
        {
          _index: 668,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "maxcount",
        {
          _index: 288,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "maxsize",
        {
          _index: 670,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "media",
        {
          _index: 1189,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "medio",
        {
          _index: 322,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "mejor",
        {
          _index: 235,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "mejorada",
        {
          _index: 3616,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "mejorados",
        {
          _index: 3584,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "mejores",
        {
          _index: 543,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "melancholy",
        {
          _index: 465,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "menor",
        {
          _index: 2330,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "menos",
        {
          _index: 1484,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "mensaje",
        {
          _index: 2985,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "mensuales",
        {
          _index: 1044,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "menu",
        {
          _index: 934,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "menu'},{'name",
        {
          _index: 966,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "menu.html",
        { _index: 1309, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts",
        {
          _index: 1304,
          title: {},
          body: { "components/AsideMenu.html": {}, "coverage.html": {} },
        },
      ],
      [
        "menu.ts:15",
        { _index: 1327, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts:16",
        { _index: 1318, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts:17",
        { _index: 1320, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts:18",
        { _index: 1329, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts:20",
        { _index: 1316, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu.ts:25",
        { _index: 1326, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "menu/aside",
        {
          _index: 933,
          title: {},
          body: {
            "components/App.html": {},
            "components/AsideMenu.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "mergeapplicationconfig(appconfig",
        {
          _index: 3871,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "message",
        {
          _index: 75,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "classes/AuthError.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "classes/SessionError.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "metadata",
        {
          _index: 918,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "method",
        {
          _index: 1902,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "methods",
        {
          _index: 758,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "mi",
        {
          _index: 541,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "middleware",
        {
          _index: 3359,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "miembros",
        {
          _index: 355,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "mientras",
        {
          _index: 3323,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "miles",
        {
          _index: 2493,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "milisegundos",
        {
          _index: 1702,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "min",
        {
          _index: 1077,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "min(0.875rem",
        {
          _index: 2448,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(0.9rem",
        {
          _index: 2339,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(1.25rem",
        {
          _index: 2373,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(1.2rem",
        {
          _index: 2337,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(1.5rem",
        {
          _index: 2447,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(1.75rem",
        {
          _index: 2369,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(120px",
        {
          _index: 2334,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(150px",
        {
          _index: 2441,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(1rem",
        {
          _index: 2374,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(2.5rem",
        {
          _index: 2409,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(200px",
        {
          _index: 2359,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "min(400px",
        {
          _index: 2407,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "mine",
        {
          _index: 2705,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "minmax(150px",
        {
          _index: 1196,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "minmax(200px",
        {
          _index: 1170,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "minmax(250px",
        {
          _index: 1193,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "minmax(300px",
        {
          _index: 1178,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "mins",
        {
          _index: 2844,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "mins}:${secs.tostring().padstart(2",
        {
          _index: 2847,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "miscellaneous",
        {
          _index: 3819,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "misma",
        {
          _index: 2096,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "mitad",
        {
          _index: 2328,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "mix",
        { _index: 1323, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "mixes",
        {
          _index: 2512,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "mobile",
        {
          _index: 2318,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "mock",
        {
          _index: 539,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "mockalbums",
        {
          _index: 607,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "mockartists",
        {
          _index: 584,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "mockdata",
        {
          _index: 3380,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "mockplaylists",
        {
          _index: 540,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "modal",
        {
          _index: 527,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "modelo",
        {
          _index: 3519,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "models",
        {
          _index: 824,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "modernos",
        {
          _index: 3080,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      ["modify", { _index: 3765, title: {}, body: { "index.html": {} } }],
      [
        "modo",
        {
          _index: 3574,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "modules",
        {
          _index: 3813,
          title: { "modules.html": {} },
          body: { "modules.html": {} },
        },
      ],
      [
        "momento",
        {
          _index: 1448,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "monkeys",
        {
          _index: 586,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "monthlylisteners",
        {
          _index: 115,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["more", { _index: 3805, title: {}, body: { "index.html": {} } }],
      [
        "morning",
        {
          _index: 580,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "mostrar",
        {
          _index: 2012,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "mouseevent",
        {
          _index: 2174,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "mtv",
        {
          _index: 502,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "muestras",
        {
          _index: 234,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "multi",
        {
          _index: 3855,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "murdoc",
        {
          _index: 362,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "music",
        {
          _index: 504,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "music_note",
        {
          _index: 2824,
          title: {},
          body: { "components/PlayerCurrentSong.html": {} },
        },
      ],
      [
        "musical",
        {
          _index: 402,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "musicales",
        {
          _index: 379,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "musics",
        {
          _index: 986,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "musicstable",
        {
          _index: 985,
          title: { "components/MusicsTable.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "musicstableplay",
        {
          _index: 988,
          title: { "components/MusicsTablePlay.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "muy",
        {
          _index: 312,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "más",
        {
          _index: 214,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "máximo",
        {
          _index: 676,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "métodos",
        {
          _index: 743,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "móvil",
        {
          _index: 2322,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "múltiples",
        {
          _index: 425,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "música",
        {
          _index: 548,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "n",
        {
          _index: 2707,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "nada",
        {
          _index: 1687,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "name",
        {
          _index: 22,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["namefor", { _index: 3772, title: {}, body: { "index.html": {} } }],
      [
        "navegador",
        {
          _index: 1895,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "navegar",
        {
          _index: 708,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "navegue",
        {
          _index: 715,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      ["navigate", { _index: 3760, title: {}, body: { "index.html": {} } }],
      [
        "navigatetocurrentsong",
        {
          _index: 2819,
          title: {},
          body: {
            "components/PlayerCurrentSong.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "navigatetoplaylist",
        {
          _index: 2876,
          title: {},
          body: {
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "navigationend",
        { _index: 929, title: {}, body: { "components/App.html": {} } },
      ],
      ["needs", { _index: 3802, title: {}, body: { "index.html": {} } }],
      [
        "needsemailconfirmation",
        {
          _index: 1397,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
          },
        },
      ],
      [
        "network_error",
        {
          _index: 1375,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "networkerror",
        {
          _index: 1374,
          title: { "classes/NetworkError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/SessionError.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "networkerror('error",
        {
          _index: 3288,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "networkerror(`error",
        {
          _index: 3299,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "never",
        {
          _index: 2258,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "new",
        {
          _index: 535,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/LoginUseCase.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "newname",
        {
          _index: 2905,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "newpassword",
        {
          _index: 1662,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "newplaylist",
        {
          _index: 536,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "newprogress",
        {
          _index: 2215,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "newtoken",
        {
          _index: 2558,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "newvolume",
        {
          _index: 2137,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "next",
        {
          _index: 1886,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "next(cloned",
        {
          _index: 3868,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "next(req",
        {
          _index: 3869,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "next.handle(authrequest",
        {
          _index: 1908,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "next.handle(request",
        {
          _index: 1910,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "next.handle(request).pipe",
        {
          _index: 2526,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "nextindex",
        {
          _index: 188,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "nextsong",
        {
          _index: 2143,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      ["ng", { _index: 3756, title: {}, body: { "index.html": {} } }],
      [
        "ngafterviewinit",
        {
          _index: 2121,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "ngondestroy",
        {
          _index: 2125,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "ngoninit",
        {
          _index: 139,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "nicas",
        {
          _index: 457,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "niccals",
        {
          _index: 363,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "nico",
        {
          _index: 390,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "night",
        {
          _index: 2117,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "nme",
        {
          _index: 510,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "noches",
        {
          _index: 568,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "nombre",
        {
          _index: 2988,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "none",
        {
          _index: 1134,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "noodle",
        {
          _index: 365,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "nostalgia",
        {
          _index: 623,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "notificación",
        {
          _index: 3531,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "notification",
        {
          _index: 2728,
          title: { "interfaces/Notification.html": {} },
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "notification.duration",
        {
          _index: 2748,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "notifications",
        {
          _index: 2732,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "notificationservice",
        {
          _index: 2731,
          title: { "injectables/NotificationService.html": {} },
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "notificationtoremove",
        {
          _index: 2753,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "novello",
        {
          _index: 507,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "now",
        {
          _index: 440,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "nueva",
        {
          _index: 1730,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/Song-2.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "nuevamente",
        {
          _index: 1522,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "nuevo",
        {
          _index: 1450,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "nuevos",
        {
          _index: 1251,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "null",
        {
          _index: 133,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "number",
        {
          _index: 26,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "nvuodanfskwi4afmbysnog57b3qyabbvy4vxl0v3yxeitumvrg7+d5svo8kblwrjhrkbbnuiilscsihf0i21hw",
        {
          _index: 3887,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "o",
        {
          _index: 313,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "oauth",
        {
          _index: 1746,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "object",
        {
          _index: 1105,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "injectables/AuthService.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "object.keys(additionaldata).foreach((key",
        { _index: 886, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "object.keys(params).foreach((key",
        { _index: 859, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "object.keys(this.profileform.controls).foreach((key",
        {
          _index: 3528,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "object.values(colorgroups).foreach((group",
        {
          _index: 289,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "objeto",
        {
          _index: 1656,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "observable",
        {
          _index: 781,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "observables",
        {
          _index: 1636,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "obtener",
        {
          _index: 205,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "ocasional",
        {
          _index: 368,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "oculto",
        {
          _index: 2424,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ocupa",
        {
          _index: 2321,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ocupan",
        {
          _index: 2425,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ocupar",
        {
          _index: 2436,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ocurrido",
        {
          _index: 836,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "of(mockdata[type",
        {
          _index: 3406,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "offline",
        {
          _index: 3575,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "offset",
        {
          _index: 89,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "ok",
        {
          _index: 2068,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "olvidaste",
        {
          _index: 2635,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "onauthstatechange",
        {
          _index: 1799,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "classes/IAuthService.html": {},
          },
        },
      ],
      [
        "onauthstatechange(callback",
        { _index: 2582, title: {}, body: { "classes/IAuthService.html": {} } },
      ],
      [
        "onclick",
        {
          _index: 3174,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "onclick(event",
        {
          _index: 3177,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "ondestroy",
        {
          _index: 2102,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "one",
        {
          _index: 492,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "ongenreclick",
        {
          _index: 3071,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "ongenreclick(genre",
        {
          _index: 3075,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "onimageerror",
        {
          _index: 1025,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "onimageerror(event",
        {
          _index: 166,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "onimageload",
        {
          _index: 1026,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "onimageload(event",
        {
          _index: 143,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "onimageselected",
        {
          _index: 3438,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "onimageselected(event",
        {
          _index: 648,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "oninit",
        {
          _index: 105,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "onkeydown(event",
        {
          _index: 747,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "onlogin",
        {
          _index: 2596,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "onmodalbackdropclick(event",
        {
          _index: 705,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "onnextclick",
        {
          _index: 2802,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "onnextsong",
        {
          _index: 2142,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "onplaypauseclick",
        {
          _index: 2145,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "onpreviousclick",
        {
          _index: 2803,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "onprogressclick",
        {
          _index: 2157,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "onprogressclick(event",
        {
          _index: 2173,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "onregister",
        {
          _index: 2958,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "onresetpassword",
        {
          _index: 3028,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "onsearch",
        {
          _index: 3072,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "onsearch(query",
        {
          _index: 3077,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "onseek",
        {
          _index: 2828,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "onseek(event",
        {
          _index: 2836,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "onvolumechange",
        {
          _index: 2780,
          title: {},
          body: {
            "components/Player.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "onvolumechange(event",
        {
          _index: 2862,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "onvolumechange(volume",
        {
          _index: 2147,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "opacity",
        {
          _index: 1122,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "opcionales",
        {
          _index: 1234,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      ["open", { _index: 3759, title: {}, body: { "index.html": {} } }],
      [
        "opera",
        {
          _index: 2118,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "optimizado",
        {
          _index: 2352,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["optimizes", { _index: 3787, title: {}, body: { "index.html": {} } }],
      [
        "optional",
        {
          _index: 97,
          title: {},
          body: {
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 1468,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "orange",
        {
          _index: 3082,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "order",
        {
          _index: 54,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "original",
        {
          _index: 176,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "originalerror",
        {
          _index: 1359,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "originalvalues",
        {
          _index: 3430,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "originalvalues.description",
        {
          _index: 3541,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "originalvalues.username",
        {
          _index: 3540,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "oscuro",
        {
          _index: 299,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "otra",
        {
          _index: 1050,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "otro",
        {
          _index: 1479,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "out",
        {
          _index: 1840,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "outline",
        {
          _index: 2653,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "output",
        {
          _index: 2812,
          title: {},
          body: {
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "outputs",
        {
          _index: 2804,
          title: {},
          body: {
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "overflow",
        {
          _index: 1090,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "overview",
        {
          _index: 3811,
          title: { "overview.html": {} },
          body: { "index.html": {}, "overview.html": {} },
        },
      ],
      [
        "owner",
        {
          _index: 3388,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "oyentes",
        {
          _index: 1043,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "p",
        {
          _index: 1149,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "p/user",
        {
          _index: 3424,
          title: {},
          body: {
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "package",
        {
          _index: 3720,
          title: { "dependencies.html": {}, "properties.html": {} },
          body: {},
        },
      ],
      [
        "padding",
        {
          _index: 1068,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "page",
        {
          _index: 79,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "pages",
        { _index: 946, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "paginación",
        { _index: 871, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "paginadas",
        { _index: 797, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "paginatedresponse",
        {
          _index: 77,
          title: { "interfaces/PaginatedResponse.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "pagination",
        {
          _index: 78,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "panel",
        {
          _index: 2199,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "pantalla",
        {
          _index: 2304,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "pantallas",
        {
          _index: 2432,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "paper",
        {
          _index: 2500,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "para",
        {
          _index: 56,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "parameters",
        {
          _index: 771,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "params",
        { _index: 783, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "params[key",
        { _index: 860, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "params[key].tostring",
        { _index: 863, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "parsefloat(target.value",
        {
          _index: 2849,
          title: {},
          body: {
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
          },
        },
      ],
      [
        "parsing",
        {
          _index: 1691,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "partial",
        {
          _index: 1270,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "password",
        {
          _index: 62,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "password'},{'name",
        {
          _index: 1011,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "password.css",
        {
          _index: 3025,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.html",
        {
          _index: 3026,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts",
        {
          _index: 3024,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "password.ts:22",
        {
          _index: 3031,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:23",
        {
          _index: 3033,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:24",
        {
          _index: 3032,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:25",
        {
          _index: 3036,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:27",
        {
          _index: 3035,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:29",
        {
          _index: 3030,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.ts:47",
        {
          _index: 3029,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.usecase",
        {
          _index: 3038,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.usecase.ts",
        {
          _index: 3055,
          title: {},
          body: {
            "injectables/ResetPasswordUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "password.usecase.ts:21",
        {
          _index: 3059,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "password.usecase.ts:6",
        {
          _index: 3056,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "password.usecase.ts:9",
        {
          _index: 3058,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "password/reset",
        {
          _index: 3023,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "password_reset_error",
        {
          _index: 3297,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "passworddata",
        {
          _index: 1580,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "patch",
        { _index: 764, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "patch(`${this.baseurl}${endpoint",
        { _index: 882, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "patch(endpoint",
        { _index: 803, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "path",
        {
          _index: 3895,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "pausado",
        {
          _index: 2197,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "pause",
        {
          _index: 1957,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "payload",
        {
          _index: 1697,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "payload.exp",
        {
          _index: 1700,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "pequeño",
        {
          _index: 157,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "perfecta",
        {
          _index: 567,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "perfil",
        {
          _index: 1019,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "perfil.css",
        {
          _index: 3427,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.html",
        {
          _index: 3428,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts",
        {
          _index: 3425,
          title: {},
          body: {
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "perfil.ts:130",
        {
          _index: 3447,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:134",
        {
          _index: 3446,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:139",
        {
          _index: 3453,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:194",
        {
          _index: 3449,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:20",
        {
          _index: 3462,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:201",
        {
          _index: 3454,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:207",
        {
          _index: 3455,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:21",
        {
          _index: 3458,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:214",
        {
          _index: 3451,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:22",
        {
          _index: 3459,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:23",
        {
          _index: 3457,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:24",
        {
          _index: 3464,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:249",
        {
          _index: 3452,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:25",
        {
          _index: 3456,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:26",
        {
          _index: 3460,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:262",
        {
          _index: 3466,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:266",
        {
          _index: 3468,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:270",
        {
          _index: 3470,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:33",
        {
          _index: 3463,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:34",
        {
          _index: 3444,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:54",
        {
          _index: 3450,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "perfil.ts:58",
        {
          _index: 3448,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["performance", { _index: 3788, title: {}, body: { "index.html": {} } }],
      [
        "pero",
        {
          _index: 2097,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "person",
        { _index: 1343, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "person_add",
        { _index: 1347, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "personajes",
        {
          _index: 392,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "personalidades",
        {
          _index: 396,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "personaliza",
        {
          _index: 3538,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "personalizadas",
        {
          _index: 3220,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "peticiones",
        {
          _index: 58,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "petición",
        {
          _index: 1900,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "pink",
        {
          _index: 3083,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "pipe",
        {
          _index: 868,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "pipe(catcherror(this.handleerror",
        { _index: 867, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "pipe(filter((event",
        { _index: 938, title: {}, body: { "components/App.html": {} } },
      ],
      ["pipes", { _index: 3777, title: {}, body: { "index.html": {} } }],
      [
        "placeholder",
        {
          _index: 697,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "plastic",
        {
          _index: 435,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "plataforma",
        {
          _index: 3121,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "platform_id",
        {
          _index: 1632,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "platformid",
        {
          _index: 1575,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "play",
        {
          _index: 720,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "play'},{'name",
        {
          _index: 990,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "play.html",
        {
          _index: 2081,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "play.ts",
        {
          _index: 2080,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "play.ts:34",
        {
          _index: 2720,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:35",
        {
          _index: 2719,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:38",
        {
          _index: 2725,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:43",
        {
          _index: 2726,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:45",
        {
          _index: 2723,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:49",
        {
          _index: 2722,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:57",
        {
          _index: 2724,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play.ts:74",
        {
          _index: 2721,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "play/musics",
        {
          _index: 2079,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "play_arrow",
        {
          _index: 1958,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayerControlButtonBar.html": {},
          },
        },
      ],
      [
        "playalbum(album",
        {
          _index: 729,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "player",
        {
          _index: 921,
          title: { "components/Player.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "player'},{'name",
        {
          _index: 991,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "player.html",
        {
          _index: 2109,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "playercontrolbuttonbar",
        {
          _index: 992,
          title: { "components/PlayerControlButtonBar.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playercurrentsong",
        {
          _index: 996,
          title: { "components/PlayerCurrentSong.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playersoundcontrol",
        {
          _index: 997,
          title: { "components/PlayerSoundControl.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playervolumecontrol",
        {
          _index: 1000,
          title: { "components/PlayerVolumeControl.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playing",
        {
          _index: 2131,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "playlist",
        {
          _index: 45,
          title: {
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
          },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "interfaces/AuthResponse.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/HomeComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playlist'},{'name",
        {
          _index: 1003,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "playlist.id",
        {
          _index: 712,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "playlist.name",
        {
          _index: 728,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "playlist.title",
        {
          _index: 2779,
          title: {},
          body: { "components/PlayListItemCard.html": {} },
        },
      ],
      [
        "playlist/:id",
        {
          _index: 3905,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "playlistcomponent",
        {
          _index: 1002,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playlistdata",
        {
          _index: 2901,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "playlistfilters",
        {
          _index: 90,
          title: { "interfaces/PlaylistFilters.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playlistid",
        {
          _index: 52,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "components/Card.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "playlistimage",
        {
          _index: 698,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "playlistitemcard",
        {
          _index: 1004,
          title: { "components/PlayListItemCard.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-2.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playlists",
        {
          _index: 525,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/AsideMenu.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "playlistservice",
        {
          _index: 2878,
          title: { "injectables/PlaylistService.html": {} },
          body: { "injectables/PlaylistService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "playlistsong",
        {
          _index: 51,
          title: { "interfaces/PlaylistSong.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "playpauseclick",
        {
          _index: 2805,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "playplaylist(playlist",
        {
          _index: 707,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "plays",
        {
          _index: 43,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "plays_count",
        {
          _index: 3396,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "playsong",
        {
          _index: 3205,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "playsong(songid",
        {
          _index: 3246,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "png",
        {
          _index: 664,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "poco",
        {
          _index: 1509,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "pointer",
        {
          _index: 1136,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "ponies",
        {
          _index: 2288,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "pop",
        {
          _index: 388,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "popular",
        {
          _index: 1153,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "populares",
        {
          _index: 1053,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "popularsongs",
        {
          _index: 118,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "por",
        {
          _index: 348,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/PlaylistService.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "portada",
        {
          _index: 2938,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "position",
        {
          _index: 1085,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "post",
        {
          _index: 765,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "post(`${this.baseurl}${endpoint",
        { _index: 880, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "post(`${this.endpoint}/delete",
        {
          _index: 1671,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "post(`${this.endpoint}/login",
        {
          _index: 1643,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "post(`${this.endpoint}/refresh",
        {
          _index: 1651,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "post(`${this.endpoint}/register",
        {
          _index: 1646,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "post(endpoint",
        { _index: 805, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "post(url",
        {
          _index: 902,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "postcss",
        { _index: 3738, title: {}, body: { "dependencies.html": {} } },
      ],
      ["powerful", { _index: 3769, title: {}, body: { "index.html": {} } }],
      [
        "pre",
        {
          _index: 2006,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "precisión",
        {
          _index: 275,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "preferencias",
        {
          _index: 3567,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "premios",
        {
          _index: 1059,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "presentaciones",
        {
          _index: 448,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "presente",
        {
          _index: 342,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "prevenir",
        {
          _index: 714,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "preview",
        {
          _index: 678,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "previous",
        {
          _index: 3381,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "primero",
        {
          _index: 2993,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "principal",
        {
          _index: 1067,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "privados",
        {
          _index: 1673,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "private",
        {
          _index: 135,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "probado",
        {
          _index: 2041,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "probando",
        {
          _index: 2011,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "probar",
        {
          _index: 1049,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "problemas",
        {
          _index: 3351,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "procese",
        {
          _index: 1510,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "produccion.com/api",
        {
          _index: 3891,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "producción",
        {
          _index: 3892,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "production",
        {
          _index: 3786,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "productividad",
        {
          _index: 551,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "profile",
        {
          _index: 1296,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "profileform",
        {
          _index: 3431,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "profileimage",
        {
          _index: 18,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "profileimageinput",
        {
          _index: 3534,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "profileimageurl",
        {
          _index: 3432,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "profiles",
        {
          _index: 2021,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "progreso",
        {
          _index: 2218,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "progress",
        {
          _index: 2182,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "progressbar",
        {
          _index: 2207,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "progressbar.getboundingclientrect",
        {
          _index: 2210,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "progresspercentage",
        {
          _index: 2830,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      ["project", { _index: 3747, title: {}, body: { "index.html": {} } }],
      [
        "promise",
        {
          _index: 1381,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "promise((resolve",
        {
          _index: 3339,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "promise(resolve",
        {
          _index: 1511,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "properties",
        {
          _index: 8,
          title: { "properties.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "propias",
        {
          _index: 395,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "propiedades",
        {
          _index: 3489,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "protected",
        {
          _index: 1312,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "prototipo",
        {
          _index: 2140,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "proveedor",
        {
          _index: 1744,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "provide",
        {
          _index: 3852,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "provideclienthydration",
        {
          _index: 3850,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "providedin",
        {
          _index: 825,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
          },
        },
      ],
      [
        "providehttpclient(withinterceptors([authinterceptor",
        {
          _index: 3851,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "provider",
        {
          _index: 1750,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "classes/IAuthRepository.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "providerouter(routes",
        {
          _index: 3849,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "providers",
        {
          _index: 3846,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "provideserverrendering(withroutes(serverroutes",
        {
          _index: 3872,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "providezonechangedetection",
        {
          _index: 3847,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "proyectos",
        {
          _index: 378,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "prueba",
        {
          _index: 333,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "próxima",
        {
          _index: 2510,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "próximamente",
        {
          _index: 1065,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "psychedelic",
        {
          _index: 600,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "public",
        {
          _index: 1357,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "pudo",
        {
          _index: 204,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "puede",
        {
          _index: 845,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "puerto",
        {
          _index: 2060,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "pulse",
        {
          _index: 3611,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "pulse:hover",
        {
          _index: 3613,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "puntos",
        {
          _index: 230,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "purple",
        {
          _index: 3084,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "put",
        {
          _index: 766,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
          },
        },
      ],
      [
        "put(`${this.baseurl}${endpoint",
        { _index: 881, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "put(`${this.endpoint}/profile",
        {
          _index: 1660,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "put(endpoint",
        { _index: 807, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "put(url",
        {
          _index: 905,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "python",
        {
          _index: 3353,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "página",
        {
          _index: 2412,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "pública",
        {
          _index: 1693,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "públicas",
        {
          _index: 2931,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "públicos",
        {
          _index: 1637,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "q",
        {
          _index: 505,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "que",
        {
          _index: 160,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "queen",
        {
          _index: 2116,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "query",
        {
          _index: 87,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "query.trim",
        {
          _index: 3106,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "quicksearch",
        {
          _index: 3147,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "quicksearch(query",
        {
          _index: 3161,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "quieren",
        {
          _index: 1223,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "quitar",
        {
          _index: 3252,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "r",
        {
          _index: 236,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "r&b",
        {
          _index: 595,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "radius",
        {
          _index: 1088,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "rap",
        {
          _index: 3085,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "rappin",
        {
          _index: 2299,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ratio",
        {
          _index: 1176,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "raíz",
        {
          _index: 3340,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "reactiveformsmodule",
        {
          _index: 3426,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "reader",
        {
          _index: 680,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "reader.onload",
        {
          _index: 682,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "reader.readasdataurl(file",
        {
          _index: 685,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "readonly",
        {
          _index: 136,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "realmente",
        {
          _index: 1518,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "recibi",
        {
          _index: 1458,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "recibieron",
        {
          _index: 1453,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "recientes",
        {
          _index: 3227,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "recomendaciones",
        {
          _index: 3219,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "recomendados",
        {
          _index: 1257,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "reconocimientos",
        {
          _index: 1060,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "recordarme",
        {
          _index: 2634,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "rect",
        {
          _index: 2209,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "rect.left",
        {
          _index: 2213,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "rect.width",
        {
          _index: 2214,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "recuperación",
        {
          _index: 1734,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "recurso",
        {
          _index: 2545,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "red",
        {
          _index: 3081,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "redirectto",
        {
          _index: 1777,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "redirigir",
        {
          _index: 2984,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "reduce",
        {
          _index: 2325,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "reducido",
        {
          _index: 2354,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "reducir",
        {
          _index: 210,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "reemplazado",
        {
          _index: 338,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "reenviar",
        {
          _index: 1608,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      ["reference", { _index: 3812, title: {}, body: { "index.html": {} } }],
      ["references", { _index: 3809, title: {}, body: { "index.html": {} } }],
      [
        "refresca",
        {
          _index: 1787,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "refrescar",
        {
          _index: 1599,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "refresh",
        {
          _index: 1531,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "refresh_token",
        {
          _index: 1528,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
          },
        },
      ],
      [
        "refresherror",
        {
          _index: 2566,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "refreshing",
        {
          _index: 1796,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "refreshsession",
        {
          _index: 1548,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "refreshtoken",
        {
          _index: 66,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "refreshtoken(refreshtoken",
        {
          _index: 1387,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
          },
        },
      ],
      [
        "reggaeton",
        {
          _index: 3095,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "register",
        {
          _index: 944,
          title: {},
          body: {
            "components/App.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "classes/IAuthRepository.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "register'},{'name",
        {
          _index: 1008,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "register(credentials",
        {
          _index: 1389,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "register(userdata",
        {
          _index: 1600,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "register.css",
        {
          _index: 2955,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "register.html",
        {
          _index: 2956,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "register_error",
        {
          _index: 1371,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "registercomponent",
        {
          _index: 1007,
          title: { "components/RegisterComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registercredentials",
        {
          _index: 1390,
          title: {
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
          },
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registerdto",
        {
          _index: 63,
          title: { "interfaces/RegisterDto.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registered",
        {
          _index: 1473,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "registererror",
        {
          _index: 1370,
          title: { "classes/RegisterError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registererror('error",
        {
          _index: 3289,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "registererror('no",
        {
          _index: 3290,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "registerrequestdto",
        {
          _index: 2664,
          title: { "interfaces/RegisterRequestDTO.html": {} },
          body: {
            "interfaces/LoginRequestDTO.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registerusecase",
        {
          _index: 2957,
          title: { "injectables/RegisterUseCase.html": {} },
          body: {
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registerwithdiscord",
        {
          _index: 2959,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "registerwithgithub",
        {
          _index: 2960,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "registerwithgoogle",
        {
          _index: 2961,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "registerwithtwitter",
        {
          _index: 2962,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "registr",
        {
          _index: 1494,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "registrado",
        {
          _index: 1477,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "registrar",
        {
          _index: 1466,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "registrarse",
        {
          _index: 1348,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "registro",
        {
          _index: 1464,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "regístrate",
        {
          _index: 2638,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "reintentar",
        {
          _index: 2557,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "relajarse",
        {
          _index: 545,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "relative",
        {
          _index: 1086,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "releasedate",
        {
          _index: 34,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      ["reload", { _index: 3763, title: {}, body: { "index.html": {} } }],
      [
        "remove",
        {
          _index: 2747,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "removeimage",
        {
          _index: 686,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "removenotification",
        {
          _index: 2756,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "removenotification(notificationtoremove",
        {
          _index: 2750,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "removeprofileimage",
        {
          _index: 3439,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "remover",
        {
          _index: 2924,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "removesongfromplaylist",
        {
          _index: 2889,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "removesongfromplaylist(playlistid",
        {
          _index: 2922,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "rendermode",
        {
          _index: 3901,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rendermode.client",
        {
          _index: 3904,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rendermode.prerender",
        {
          _index: 3902,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "renovado",
        {
          _index: 2556,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "renovar",
        {
          _index: 2565,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "renovarlo",
        {
          _index: 2538,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "renueva",
        {
          _index: 1728,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "reordenar",
        {
          _index: 2928,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "reorderplaylistsongs",
        {
          _index: 2890,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "reorderplaylistsongs(playlistid",
        {
          _index: 2925,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "repeat",
        {
          _index: 2313,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "repeat(auto",
        {
          _index: 1168,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "repositories/i",
        {
          _index: 1847,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SocialLoginUseCase.html": {},
          },
        },
      ],
      [
        "repository",
        {
          _index: 1400,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "reproducción",
        {
          _index: 2382,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "reproducidas",
        {
          _index: 3559,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "reproduciendo",
        {
          _index: 2196,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "reproducir",
        {
          _index: 726,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "reproductor",
        {
          _index: 1947,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "req",
        {
          _index: 3863,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "req.clone",
        {
          _index: 3866,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'req.headers.set("authorization',
        {
          _index: 3867,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reqhandler",
        {
          _index: 3717,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "requerido",
        {
          _index: 3546,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "request",
        {
          _index: 775,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "request.clone",
        {
          _index: 1906,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        'request.headers.set("authorization',
        {
          _index: 1907,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "request.method",
        {
          _index: 1903,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "request.url",
        {
          _index: 1901,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "requestpasswordreset",
        {
          _index: 1568,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "requestpasswordreset(email",
        {
          _index: 1603,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "requests",
        {
          _index: 1444,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "requiere",
        {
          _index: 1515,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "required",
        {
          _index: 2675,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "resendverificationemail",
        {
          _index: 1569,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "reservados",
        {
          _index: 2643,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "reset",
        {
          _index: 1010,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthService-1.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "reset_password",
        {
          _index: 3898,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "resetdata",
        {
          _index: 1613,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "resetform",
        {
          _index: 644,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "resetpassword",
        {
          _index: 1570,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "resetpassword(resetdata",
        {
          _index: 1610,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "resetpasswordcomponent",
        {
          _index: 1009,
          title: { "components/ResetPasswordComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "resetpasswordusecase",
        {
          _index: 3027,
          title: { "injectables/ResetPasswordUseCase.html": {} },
          body: {
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "resolve(false",
        {
          _index: 3349,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "resolve(true",
        {
          _index: 3342,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      ["resources", { _index: 3804, title: {}, body: { "index.html": {} } }],
      [
        "responde",
        {
          _index: 2069,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "respondiendo",
        {
          _index: 2058,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "response",
        {
          _index: 878,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "response.count",
        { _index: 875, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "response.ok",
        {
          _index: 3347,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "response.previous",
        { _index: 874, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "response.results",
        { _index: 872, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "response.results.length",
        { _index: 876, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "response.status",
        {
          _index: 3348,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "response.user",
        {
          _index: 1657,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "responsive",
        {
          _index: 1188,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "responsividad",
        {
          _index: 3615,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "respuesta",
        {
          _index: 2015,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "respuestas",
        {
          _index: 67,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "rest",
        {
          _index: 777,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "restablecer",
        {
          _index: 1612,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "restablecimiento",
        {
          _index: 1606,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "restantes",
        {
          _index: 3618,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "restaurar",
        {
          _index: 2190,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "result",
        {
          _index: 2618,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "resultados",
        {
          _index: 3113,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "results",
        {
          _index: 95,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "retorna",
        {
          _index: 1729,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "return",
        {
          _index: 209,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "returned",
        {
          _index: 1839,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "returns",
        {
          _index: 780,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "revisa",
        {
          _index: 1440,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "revolucionario",
        {
          _index: 400,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "rgb(${color.r",
        {
          _index: 296,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "rgb(${math.max(0",
        {
          _index: 301,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "rgb(${math.min(255",
        {
          _index: 306,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "rgba(0",
        {
          _index: 1112,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "rgba(0,0,0,0.05",
        {
          _index: 3047,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "rgba(239",
        {
          _index: 3636,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "rgba(255",
        {
          _index: 1131,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "rgba(31",
        {
          _index: 3599,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "rgba(59",
        {
          _index: 2655,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "rhapsody",
        {
          _index: 2115,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTable.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "right",
        {
          _index: 1181,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "ritmos",
        {
          _index: 3096,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "road",
        {
          _index: 555,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "rock",
        {
          _index: 328,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "rojizo",
        {
          _index: 182,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "root",
        {
          _index: 826,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
          },
        },
      ],
      [
        "root'},{'name",
        {
          _index: 963,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "roses",
        {
          _index: 2708,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "rotate(0deg",
        {
          _index: 2400,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "rotate(360deg",
        {
          _index: 2401,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "roundedvolumepercentage",
        {
          _index: 2861,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "route",
        {
          _index: 137,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "router",
        {
          _index: 516,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-6.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "router.createurltree(['/home",
        {
          _index: 3861,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "router.createurltree(['/login",
        {
          _index: 3860,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "routerlink",
        {
          _index: 1307,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "components/SideMenuItem.html": {},
          },
        },
      ],
      [
        "routermodule",
        {
          _index: 2586,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "routeroutlet",
        { _index: 919, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "routes_config_auth",
        {
          _index: 1313,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routes_config_auth.base_url.path}/${routes_config_auth.login.path",
        {
          _index: 3906,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "routes_config_auth.base_url.path}/${routes_config_auth.register.path",
        {
          _index: 3907,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "routes_config_auth.base_url.path}/${routes_config_auth.reset_password.path",
        {
          _index: 3908,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "row",
        {
          _index: 1191,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      ["run", { _index: 3754, title: {}, body: { "index.html": {} } }],
      ["runner", { _index: 3793, title: {}, body: { "index.html": {} } }],
      ["running", { _index: 3758, title: {}, body: { "index.html": {} } }],
      [
        "runserver",
        {
          _index: 3355,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "russel",
        {
          _index: 369,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "rxjs",
        {
          _index: 818,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "rxjs/operators",
        {
          _index: 821,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "rápida",
        {
          _index: 3145,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "rápido",
        {
          _index: 215,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "s",
        {
          _index: 1492,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "s@]+@[^\\s@]+\\.[^\\s",
        {
          _index: 3064,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "salga",
        {
          _index: 2191,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "samples",
        {
          _index: 232,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "sans",
        {
          _index: 1974,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "saturnz",
        {
          _index: 468,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "saveplaylist",
        {
          _index: 693,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "saveprofile",
        {
          _index: 3440,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "savesearchtohistory",
        {
          _index: 3153,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "savesearchtohistory(query",
        {
          _index: 3141,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      ["scaffolding", { _index: 3767, title: {}, body: { "index.html": {} } }],
      [
        "scale(0.8",
        {
          _index: 3639,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "scale(0.98",
        {
          _index: 3007,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "scale(1",
        {
          _index: 3612,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "scale(1.02",
        {
          _index: 2430,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "scale(1.05",
        {
          _index: 2350,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "scale(1.1",
        {
          _index: 3635,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "scalex(0",
        {
          _index: 3608,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "scalex(1",
        {
          _index: 3610,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "schedule",
        {
          _index: 2715,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      ["schematics", { _index: 3775, title: {}, body: { "index.html": {} } }],
      [
        "scroll",
        {
          _index: 2186,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "se",
        {
          _index: 203,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "search",
        {
          _index: 1342,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "search'},{'name",
        {
          _index: 1013,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "search.css",
        {
          _index: 3068,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "search.html",
        {
          _index: 3067,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "searchall",
        {
          _index: 3154,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "searchall(query",
        {
          _index: 3122,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "searchartists",
        {
          _index: 1214,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "searchartists(query",
        {
          _index: 1264,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "searchbygenre",
        {
          _index: 3143,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "searchbygenre(genre",
        {
          _index: 3165,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "searchbytype",
        {
          _index: 3126,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "searchbytype(query",
        {
          _index: 3167,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "searchcomponent",
        {
          _index: 1012,
          title: { "components/SearchComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "searchfilters",
        {
          _index: 86,
          title: { "interfaces/SearchFilters.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "searchplaylists",
        {
          _index: 2891,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "searchplaylists(query",
        {
          _index: 2929,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "searchquery",
        {
          _index: 3069,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "searchresults",
        {
          _index: 3117,
          title: { "interfaces/SearchResults.html": {} },
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "searchservice",
        {
          _index: 3119,
          title: { "injectables/SearchService.html": {} },
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "searchsongs",
        {
          _index: 3206,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "searchsongs(query",
        {
          _index: 3248,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "season",
        {
          _index: 491,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "sección",
        {
          _index: 2376,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "seconds",
        {
          _index: 2834,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "secs",
        {
          _index: 2846,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "section",
        {
          _index: 1084,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "see",
        {
          _index: 2247,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "seektime",
        {
          _index: 2848,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "seguidas",
        {
          _index: 2912,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "seguidores",
        {
          _index: 1046,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "seguidos",
        {
          _index: 1247,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "seguir",
        {
          _index: 739,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "seguir/dejar",
        {
          _index: 2910,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "segundos",
        {
          _index: 40,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "selecciona",
        {
          _index: 661,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "selected",
        {
          _index: 696,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "selectedimagefile",
        {
          _index: 532,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "selector",
        {
          _index: 121,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "sendpasswordresetemail",
        {
          _index: 1710,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "classes/IAuthRepository.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "sendpasswordresetemail(email",
        {
          _index: 1549,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "ser",
        {
          _index: 337,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "serif",
        {
          _index: 1975,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      ["serveonce", { _index: 3757, title: {}, body: { "index.html": {} } }],
      [
        "server",
        {
          _index: 3728,
          title: {},
          body: {
            "dependencies.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "serverconfig",
        {
          _index: 3655,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "serverroute",
        {
          _index: 3900,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "serverroutes",
        {
          _index: 3659,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "service.ts",
        {
          _index: 895,
          title: {},
          body: { "injectables/ApiService-1.html": {}, "coverage.html": {} },
        },
      ],
      [
        "service.ts:13",
        {
          _index: 901,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "service.ts:17",
        {
          _index: 904,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "service.ts:21",
        {
          _index: 906,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "service.ts:6",
        {
          _index: 897,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "service.ts:9",
        {
          _index: 899,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "services/auth.service",
        {
          _index: 3472,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "services/test",
        {
          _index: 2045,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "servicio",
        {
          _index: 2064,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "servidor",
        {
          _index: 847,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/AuthService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "sesión",
        {
          _index: 1345,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "sesión/registro",
        {
          _index: 1743,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "session",
        {
          _index: 1413,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "classes/IAuthService.html": {},
          },
        },
      ],
      [
        "session.access_token",
        {
          _index: 1539,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "session.isauthenticated",
        {
          _index: 1966,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "session.refresh_token",
        {
          _index: 1540,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "session.usecase",
        { _index: 931, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "session.usecase.ts",
        {
          _index: 1842,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "session.usecase.ts:5",
        {
          _index: 1845,
          title: {},
          body: { "injectables/AuthSessionUseCase.html": {} },
        },
      ],
      [
        "session.usecase.ts:8",
        {
          _index: 1846,
          title: {},
          body: { "injectables/AuthSessionUseCase.html": {} },
        },
      ],
      [
        "session.user",
        {
          _index: 1967,
          title: {},
          body: { "injectables/CheckAuthUseCase.html": {} },
        },
      ],
      [
        "session?.isauthenticated",
        {
          _index: 1863,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "session?.token",
        {
          _index: 1867,
          title: {},
          body: {
            "injectables/AuthStateService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "session?.user",
        {
          _index: 1869,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "session_error",
        {
          _index: 1373,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "sessionerror",
        {
          _index: 1372,
          title: { "classes/SessionError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sessionerror('error",
        {
          _index: 3291,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "setactivetab(tab",
        {
          _index: 637,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "setauth",
        {
          _index: 1711,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "setauth(user",
        {
          _index: 1736,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "setauthdata",
        {
          _index: 1571,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "setauthdata(authresponse",
        {
          _index: 1614,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "setgreeting",
        { _index: 2471, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "setheaders",
        {
          _index: 2561,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "setinitialsession",
        {
          _index: 1712,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "setinterval",
        {
          _index: 2855,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "setnewcurrentmusic",
        {
          _index: 2718,
          title: {},
          body: { "components/MusicsTablePlay.html": {} },
        },
      ],
      [
        "setnewcurrentmusic(song",
        {
          _index: 2090,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "settimeout",
        {
          _index: 163,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "settimeout(resolve",
        {
          _index: 1512,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "settings.py",
        {
          _index: 3356,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "settoken",
        {
          _index: 3411,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "settoken(token",
        {
          _index: 3414,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "setvolume",
        { _index: 2781, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "setvolume(newvolume",
        {
          _index: 2136,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "shadow",
        {
          _index: 1108,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "shake",
        {
          _index: 3628,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "shakira",
        {
          _index: 2487,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "shared/services/auth.service",
        { _index: 1334, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "shit",
        {
          _index: 2291,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "showcreatemodal",
        {
          _index: 529,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "showdjangosetupguide",
        {
          _index: 3315,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "showerror",
        {
          _index: 2757,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "showerror(message",
        {
          _index: 2738,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "showguide",
        {
          _index: 2025,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "showinfo",
        {
          _index: 2758,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "showinfo(message",
        {
          _index: 2740,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "showlayout",
        { _index: 924, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "showlyricspanel",
        {
          _index: 2154,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "showplaybutton",
        { _index: 1916, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "showsuccess",
        {
          _index: 2759,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "showsuccess(message",
        {
          _index: 2735,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "showsuccessmessage",
        {
          _index: 3441,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "showwarning",
        {
          _index: 2760,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "showwarning(message",
        {
          _index: 2742,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "shrink",
        {
          _index: 1182,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "si",
        {
          _index: 310,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "side",
        {
          _index: 1015,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "sidemenucard",
        {
          _index: 1014,
          title: { "components/SideMenuCard.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-4.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sidemenuitem",
        {
          _index: 1016,
          title: { "components/SideMenuItem.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sido",
        {
          _index: 373,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "siglo",
        {
          _index: 382,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "sign",
        {
          _index: 1784,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signal",
        {
          _index: 1771,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "signal(false",
        {
          _index: 1757,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "signal(null",
        {
          _index: 1754,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "signal(true",
        {
          _index: 1759,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signals",
        {
          _index: 1797,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signed_in",
        {
          _index: 1813,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signed_out",
        {
          _index: 1816,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "significa",
        {
          _index: 1517,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "signinwithpassword",
        {
          _index: 1713,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signinwithpassword(credentials",
        {
          _index: 1739,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signinwithprovider",
        {
          _index: 1714,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "classes/IAuthRepository.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "signinwithprovider(provider",
        {
          _index: 1550,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "signout",
        {
          _index: 1715,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signup",
        {
          _index: 1716,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "signup(credentials",
        {
          _index: 1752,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "sigue",
        {
          _index: 1263,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "siguiendo",
        {
          _index: 737,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "siguiente",
        {
          _index: 2206,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "similares",
        {
          _index: 270,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "simulando",
        {
          _index: 2225,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "simular",
        {
          _index: 1955,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "sin",
        {
          _index: 1496,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/CurrentSongComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "size",
        {
          _index: 667,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/CardPlayButton.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "sizing",
        {
          _index: 2311,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "skip_next",
        {
          _index: 2817,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "skip_previous",
        {
          _index: 2816,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "skipnext",
        {
          _index: 2158,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "skipprevious",
        {
          _index: 2159,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "sleep",
        {
          _index: 2265,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "slideup",
        {
          _index: 2362,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "small",
        {
          _index: 1935,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "smile",
        {
          _index: 2259,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "smooth",
        {
          _index: 3093,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "social",
        {
          _index: 1745,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "socialloginusecase",
        {
          _index: 2591,
          title: { "injectables/SocialLoginUseCase.html": {} },
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "solicitar",
        {
          _index: 1605,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "solicitud",
        {
          _index: 2533,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "solicitudes",
        {
          _index: 2549,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "solid",
        {
          _index: 1144,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "solo",
        {
          _index: 1655,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/CurrentSongComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "song",
        {
          _index: 37,
          title: {
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/ApiResponse.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "song'},{'name",
        {
          _index: 975,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "song.album",
        {
          _index: 1055,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "song.albumid",
        {
          _index: 2085,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "song.artists.join",
        {
          _index: 2713,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "components/PlayerCurrentSong.html": {},
          },
        },
      ],
      [
        "song.css",
        {
          _index: 2151,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "song.duration",
        {
          _index: 1056,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/MusicsTable.html": {},
          },
        },
      ],
      [
        "song.html",
        {
          _index: 2818,
          title: {},
          body: {
            "components/PlayerCurrentSong.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "song.id",
        {
          _index: 2088,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "song.title",
        {
          _index: 1054,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/MusicsTable.html": {},
            "components/PlayerCurrentSong.html": {},
          },
        },
      ],
      [
        "song.ts",
        {
          _index: 2150,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-6.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "song.ts:101",
        {
          _index: 2176,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:106",
        {
          _index: 2175,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:119",
        {
          _index: 2164,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:175",
        {
          _index: 2163,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:182",
        {
          _index: 2165,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:208",
        {
          _index: 2166,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:22",
        {
          _index: 2820,
          title: {},
          body: { "components/PlayerCurrentSong.html": {} },
        },
      ],
      [
        "song.ts:224",
        {
          _index: 2168,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:26",
        {
          _index: 2821,
          title: {},
          body: { "components/PlayerCurrentSong.html": {} },
        },
      ],
      [
        "song.ts:34",
        {
          _index: 2180,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:35",
        {
          _index: 2162,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:44",
        {
          _index: 2170,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:54",
        {
          _index: 2169,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:63",
        {
          _index: 2172,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:72",
        {
          _index: 2171,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:77",
        {
          _index: 2179,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:84",
        {
          _index: 2178,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:92",
        {
          _index: 2167,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song.ts:96",
        {
          _index: 2177,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "song/player",
        {
          _index: 2107,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "songcount",
        {
          _index: 513,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "songdata",
        {
          _index: 2897,
          title: {},
          body: {
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "songid",
        {
          _index: 9,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SongService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "songorders",
        {
          _index: 2926,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "songs",
        {
          _index: 47,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/Player.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "injectables/SongService.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "songs_count",
        {
          _index: 3389,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "songservice",
        {
          _index: 3188,
          title: { "injectables/SongService.html": {} },
          body: { "injectables/SongService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "sonido",
        {
          _index: 420,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "sortby",
        {
          _index: 91,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "sortorder",
        {
          _index: 92,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "soul",
        {
          _index: 412,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "sound",
        {
          _index: 998,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "source",
        {
          _index: 4,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "space",
        {
          _index: 2007,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "spacer",
        {
          _index: 2342,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      ["speed", { _index: 3789, title: {}, body: { "index.html": {} } }],
      [
        "spin",
        {
          _index: 2394,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "spinner",
        {
          _index: 2393,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "src/.../app.config.server.ts",
        {
          _index: 3828,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../app.config.ts",
        {
          _index: 3822,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../app.routes.server.ts",
        {
          _index: 3833,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../auth",
        {
          _index: 3825,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../auth.guard.ts",
        {
          _index: 3824,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../auth.providers.ts",
        {
          _index: 3826,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../auth.tokens.ts",
        {
          _index: 3823,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.development.ts",
        {
          _index: 3829,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.prod.ts",
        {
          _index: 3830,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.ts",
        {
          _index: 3831,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../main.server.ts",
        {
          _index: 3827,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../routes",
        {
          _index: 3832,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../server.ts",
        {
          _index: 3821,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../user.map.ts",
        {
          _index: 3834,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app.config.server.ts",
        {
          _index: 3651,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app.config.ts",
        {
          _index: 3656,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app.routes.server.ts",
        {
          _index: 3658,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/app.ts",
        {
          _index: 917,
          title: {},
          body: { "components/App.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/app.ts:16",
        { _index: 927, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "src/app/app.ts:33",
        { _index: 928, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "src/app/components/aside",
        {
          _index: 1303,
          title: {},
          body: { "components/AsideMenu.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/components/card",
        {
          _index: 1923,
          title: {},
          body: { "components/CardPlayButton.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/components/card/card.ts",
        {
          _index: 1911,
          title: {},
          body: { "components/Card.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/components/card/card.ts:13",
        { _index: 1921, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "src/app/components/card/card.ts:14",
        { _index: 1917, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "src/app/components/card/card.ts:15",
        { _index: 1918, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "src/app/components/card/card.ts:16",
        { _index: 1919, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "src/app/components/card/card.ts:17",
        { _index: 1920, title: {}, body: { "components/Card.html": {} } },
      ],
      [
        "src/app/components/connection",
        {
          _index: 1968,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/components/greeting/greeting.ts",
        {
          _index: 2468,
          title: {},
          body: { "components/Greeting.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/components/greeting/greeting.ts:11",
        { _index: 2474, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "src/app/components/greeting/greeting.ts:13",
        { _index: 2472, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "src/app/components/greeting/greeting.ts:17",
        { _index: 2473, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "src/app/components/musics",
        {
          _index: 2078,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/components/play",
        {
          _index: 2770,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/components/player",
        {
          _index: 2799,
          title: {},
          body: {
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Song-4.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/components/player/player.ts",
        {
          _index: 2100,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/components/player/player.ts:100",
        { _index: 2789, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:104",
        { _index: 2792, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:109",
        { _index: 2791, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:116",
        { _index: 2782, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:121",
        { _index: 2786, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:128",
        { _index: 2787, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:132",
        { _index: 2788, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:50",
        { _index: 2795, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:53",
        { _index: 2796, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:59",
        { _index: 2797, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:60",
        { _index: 2798, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:62",
        { _index: 2785, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:79",
        { _index: 2783, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:85",
        { _index: 2784, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/player/player.ts:94",
        { _index: 2790, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "src/app/components/side",
        {
          _index: 2874,
          title: {},
          body: {
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/config/routes",
        {
          _index: 3669,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/domain/entities/auth",
        {
          _index: 1876,
          title: {},
          body: { "interfaces/AuthToken.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/domain/entities/user.entity.ts",
        {
          _index: 3420,
          title: {},
          body: { "interfaces/User-1.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/domain/errors/auth.errors.ts",
        {
          _index: 1355,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:1",
        { _index: 1361, title: {}, body: { "classes/AuthError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:12",
        {
          _index: 3646,
          title: {},
          body: { "classes/ValidationError.html": {} },
        },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:19",
        { _index: 2659, title: {}, body: { "classes/LoginError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:26",
        { _index: 3016, title: {}, body: { "classes/RegisterError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:33",
        { _index: 3169, title: {}, body: { "classes/SessionError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:4",
        { _index: 1362, title: {}, body: { "classes/AuthError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:40",
        { _index: 2727, title: {}, body: { "classes/NetworkError.html": {} } },
      ],
      [
        "src/app/domain/errors/auth.errors.ts:5",
        { _index: 1363, title: {}, body: { "classes/AuthError.html": {} } },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts",
        {
          _index: 1377,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts:22",
        {
          _index: 1384,
          title: {},
          body: { "classes/AuthRepository.html": {} },
        },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts:23",
        {
          _index: 1391,
          title: {},
          body: { "classes/AuthRepository.html": {} },
        },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts:24",
        {
          _index: 1386,
          title: {},
          body: { "classes/AuthRepository.html": {} },
        },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts:25",
        {
          _index: 1380,
          title: {},
          body: { "classes/AuthRepository.html": {} },
        },
      ],
      [
        "src/app/domain/repositories/auth.repository.ts:26",
        {
          _index: 1388,
          title: {},
          body: { "classes/AuthRepository.html": {} },
        },
      ],
      [
        "src/app/domain/repositories/i",
        {
          _index: 1543,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/services/auth",
        {
          _index: 1851,
          title: {},
          body: {
            "injectables/AuthStateService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/usecases/auth",
        {
          _index: 1841,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/usecases/check",
        {
          _index: 1960,
          title: {},
          body: {
            "injectables/CheckAuthUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/usecases/login.usecase.ts",
        {
          _index: 2665,
          title: {},
          body: { "injectables/LoginUseCase.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/login.usecase.ts:12",
        {
          _index: 2668,
          title: {},
          body: { "injectables/LoginUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/login.usecase.ts:15",
        {
          _index: 2670,
          title: {},
          body: { "injectables/LoginUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/login.usecase.ts:31",
        {
          _index: 2672,
          title: {},
          body: { "injectables/LoginUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/logout.usecase.ts",
        {
          _index: 2681,
          title: {},
          body: { "injectables/LogoutUseCase.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/logout.usecase.ts:5",
        {
          _index: 2682,
          title: {},
          body: { "injectables/LogoutUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/logout.usecase.ts:8",
        {
          _index: 2683,
          title: {},
          body: { "injectables/LogoutUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/register.usecase.ts",
        {
          _index: 3017,
          title: {},
          body: { "injectables/RegisterUseCase.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/register.usecase.ts:12",
        {
          _index: 3018,
          title: {},
          body: { "injectables/RegisterUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/register.usecase.ts:15",
        {
          _index: 3019,
          title: {},
          body: { "injectables/RegisterUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/register.usecase.ts:35",
        {
          _index: 3020,
          title: {},
          body: { "injectables/RegisterUseCase.html": {} },
        },
      ],
      [
        "src/app/domain/usecases/reset",
        {
          _index: 3054,
          title: {},
          body: {
            "injectables/ResetPasswordUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/domain/usecases/social",
        {
          _index: 3182,
          title: {},
          body: {
            "injectables/SocialLoginUseCase.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/interceptors/auth",
        {
          _index: 1880,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/interceptors/http",
        {
          _index: 2517,
          title: {},
          body: {
            "interceptors/HttpErrorInterceptor.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/providers/auth.providers.ts",
        {
          _index: 3672,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/infrastructure/repositories/auth",
        {
          _index: 1399,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/repositories/supabase",
        {
          _index: 3272,
          title: {},
          body: {
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/services/api",
        {
          _index: 894,
          title: {},
          body: { "injectables/ApiService-1.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/infrastructure/services/token.storage.service.ts",
        {
          _index: 3408,
          title: {},
          body: {
            "injectables/TokenStorageService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/infrastructure/services/token.storage.service.ts:11",
        {
          _index: 3413,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "src/app/infrastructure/services/token.storage.service.ts:14",
        {
          _index: 3412,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "src/app/infrastructure/services/token.storage.service.ts:8",
        {
          _index: 3415,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "src/app/infrastructure/supabase/supabase.service.ts",
        {
          _index: 3300,
          title: {},
          body: { "injectables/SupabaseService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/infrastructure/supabase/supabase.service.ts:18",
        {
          _index: 3306,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "src/app/infrastructure/supabase/supabase.service.ts:9",
        {
          _index: 3303,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "src/app/infrastructure/tokens/auth.tokens.ts",
        {
          _index: 3674,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/models/index.ts",
        {
          _index: 6,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/pages/artist/artist.ts",
        {
          _index: 99,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:165",
        {
          _index: 1029,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:173",
        {
          _index: 1033,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:202",
        {
          _index: 1034,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:227",
        {
          _index: 1035,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:47",
        {
          _index: 1040,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:48",
        {
          _index: 1028,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:55",
        {
          _index: 1036,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:62",
        {
          _index: 1038,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:79",
        {
          _index: 1037,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:84",
        {
          _index: 1039,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/artist/artist.ts:99",
        {
          _index: 1030,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "src/app/pages/currentsong/current",
        {
          _index: 2149,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/pages/explore/explore.ts",
        {
          _index: 2458,
          title: {},
          body: { "components/ExploreComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/pages/explore/explore.ts:13",
        {
          _index: 2462,
          title: {},
          body: { "components/ExploreComponent.html": {} },
        },
      ],
      [
        "src/app/pages/home/home.ts",
        {
          _index: 2478,
          title: {},
          body: { "components/HomeComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/pages/home/home.ts:17",
        {
          _index: 2504,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "src/app/pages/home/home.ts:42",
        {
          _index: 2482,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "src/app/pages/library/library.ts",
        {
          _index: 512,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/pages/playlist/playlist.ts",
        { _index: 3683, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "src/app/pages/search/search.ts",
        {
          _index: 3066,
          title: {},
          body: { "components/SearchComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:12",
        {
          _index: 3104,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:14",
        {
          _index: 3103,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:55",
        {
          _index: 3073,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:59",
        {
          _index: 3078,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:67",
        {
          _index: 3076,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/search/search.ts:73",
        {
          _index: 3074,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/app/pages/user",
        {
          _index: 3423,
          title: {},
          body: {
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts",
        {
          _index: 2585,
          title: {},
          body: { "components/LoginComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:31",
        {
          _index: 2609,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:33",
        {
          _index: 2611,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:34",
        {
          _index: 2607,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:35",
        {
          _index: 2608,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:37",
        {
          _index: 2603,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:42",
        {
          _index: 2605,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:43",
        {
          _index: 2604,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:45",
        {
          _index: 2602,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:62",
        {
          _index: 2597,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:79",
        {
          _index: 2600,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:83",
        {
          _index: 2599,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:87",
        {
          _index: 2601,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/login/login.ts:91",
        {
          _index: 2598,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts",
        {
          _index: 2954,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:101",
        {
          _index: 2965,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:31",
        {
          _index: 2975,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:33",
        {
          _index: 2976,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:34",
        {
          _index: 2973,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:35",
        {
          _index: 2974,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:37",
        {
          _index: 2969,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:43",
        {
          _index: 2971,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:44",
        {
          _index: 2970,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:45",
        {
          _index: 2977,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:47",
        {
          _index: 2964,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:70",
        {
          _index: 2963,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:89",
        {
          _index: 2967,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:93",
        {
          _index: 2966,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/register/register.ts:97",
        {
          _index: 2968,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "src/app/presentation/pages/auth/reset",
        {
          _index: 3022,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/services/api.service.ts",
        {
          _index: 756,
          title: {},
          body: { "injectables/ApiService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/api.service.ts:12",
        { _index: 770, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:140",
        { _index: 806, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:151",
        { _index: 808, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:162",
        { _index: 804, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:173",
        { _index: 774, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:184",
        { _index: 811, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:19",
        { _index: 788, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:26",
        { _index: 791, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:36",
        { _index: 800, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:70",
        { _index: 784, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/api.service.ts:92",
        { _index: 796, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/app/services/artist.service.ts",
        {
          _index: 1198,
          title: {},
          body: { "injectables/ArtistService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:102",
        {
          _index: 1245,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:114",
        {
          _index: 1226,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:124",
        {
          _index: 1267,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:131",
        {
          _index: 1246,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:138",
        {
          _index: 1259,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:150",
        {
          _index: 1261,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:159",
        {
          _index: 1242,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:16",
        {
          _index: 1219,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:172",
        {
          _index: 1221,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:186",
        {
          _index: 1271,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:199",
        {
          _index: 1274,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:209",
        {
          _index: 1256,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:218",
        {
          _index: 1250,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:23",
        {
          _index: 1232,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:30",
        {
          _index: 1230,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:37",
        {
          _index: 1265,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:52",
        {
          _index: 1254,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:61",
        {
          _index: 1237,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:78",
        {
          _index: 1228,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/artist.service.ts:85",
        {
          _index: 1240,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts",
        {
          _index: 1556,
          title: {},
          body: { "injectables/AuthService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:102",
        {
          _index: 1617,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:11",
        {
          _index: 1628,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:12",
        {
          _index: 1626,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:123",
        {
          _index: 1578,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:13",
        {
          _index: 1631,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:137",
        {
          _index: 1604,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:146",
        {
          _index: 1611,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:16",
        {
          _index: 1624,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:160",
        {
          _index: 1619,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:17",
        {
          _index: 1576,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:173",
        {
          _index: 1622,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:182",
        {
          _index: 1607,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:192",
        {
          _index: 1584,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:204",
        {
          _index: 1615,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:217",
        {
          _index: 1582,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:228",
        {
          _index: 1581,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:253",
        {
          _index: 1592,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:260",
        {
          _index: 1590,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:267",
        {
          _index: 1586,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:277",
        {
          _index: 1594,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:30",
        {
          _index: 1596,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:43",
        {
          _index: 1601,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:56",
        {
          _index: 1597,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:67",
        {
          _index: 1598,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/auth.service.ts:84",
        {
          _index: 1588,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts",
        {
          _index: 2879,
          title: {},
          body: { "injectables/PlaylistService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:100",
        {
          _index: 2919,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:107",
        {
          _index: 2927,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:120",
        {
          _index: 2937,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:130",
        {
          _index: 2909,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:137",
        {
          _index: 2933,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:146",
        {
          _index: 2911,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:153",
        {
          _index: 2906,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:166",
        {
          _index: 2930,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:18",
        {
          _index: 2895,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:25",
        {
          _index: 2916,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:34",
        {
          _index: 2914,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:41",
        {
          _index: 2921,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:51",
        {
          _index: 2900,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:58",
        {
          _index: 2935,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:71",
        {
          _index: 2903,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:78",
        {
          _index: 2898,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/playlist.service.ts:91",
        {
          _index: 2923,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts",
        {
          _index: 3118,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/services/search.service.ts:103",
        {
          _index: 3166,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:117",
        {
          _index: 3162,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:18",
        {
          _index: 3155,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:25",
        {
          _index: 3164,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:35",
        {
          _index: 3168,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:51",
        {
          _index: 3156,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:61",
        {
          _index: 3160,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:71",
        {
          _index: 3158,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:80",
        {
          _index: 3159,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:89",
        {
          _index: 3157,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/search.service.ts:96",
        {
          _index: 3163,
          title: {},
          body: { "injectables/SearchService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts",
        {
          _index: 3189,
          title: {},
          body: { "injectables/SongService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:10",
        {
          _index: 3210,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:102",
        {
          _index: 3245,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:109",
        {
          _index: 3251,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:116",
        {
          _index: 3214,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:123",
        {
          _index: 3234,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:135",
        {
          _index: 3218,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:144",
        {
          _index: 3231,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:153",
        {
          _index: 3256,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:164",
        {
          _index: 3254,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:17",
        {
          _index: 3237,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:171",
        {
          _index: 3213,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:178",
        {
          _index: 3222,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:191",
        {
          _index: 3211,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:24",
        {
          _index: 3229,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:31",
        {
          _index: 3249,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:46",
        {
          _index: 3224,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:55",
        {
          _index: 3226,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:64",
        {
          _index: 3241,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:71",
        {
          _index: 3239,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:78",
        {
          _index: 3243,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/song.service.ts:95",
        {
          _index: 3247,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "src/app/services/test",
        {
          _index: 3311,
          title: {},
          body: {
            "injectables/TestConnectionService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/guards/auth.guard.ts",
        {
          _index: 3697,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/models/auth.dto.ts",
        {
          _index: 2663,
          title: {},
          body: {
            "interfaces/LoginRequestDTO.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/models/user.dto.ts",
        {
          _index: 3422,
          title: {},
          body: { "interfaces/UserDTO.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/providers/auth.providers.ts",
        {
          _index: 3702,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts",
        {
          _index: 1705,
          title: {},
          body: { "injectables/AuthService-1.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:117",
        {
          _index: 1721,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:121",
        {
          _index: 1738,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:135",
        {
          _index: 1720,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:15",
        {
          _index: 1732,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:152",
        {
          _index: 1737,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:175",
        {
          _index: 1740,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:190",
        {
          _index: 1753,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:216",
        {
          _index: 1751,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:29",
        {
          _index: 1741,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:50",
        {
          _index: 1727,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:75",
        {
          _index: 1766,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:76",
        {
          _index: 1763,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:77",
        {
          _index: 1761,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:80",
        {
          _index: 1755,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:83",
        {
          _index: 1764,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:84",
        {
          _index: 1758,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:85",
        {
          _index: 1760,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:86",
        {
          _index: 1756,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:88",
        {
          _index: 1770,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/auth.service.ts:99",
        {
          _index: 1717,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts",
        {
          _index: 2729,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:11",
        {
          _index: 2769,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:13",
        {
          _index: 2763,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:17",
        {
          _index: 2767,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:21",
        {
          _index: 2765,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:25",
        {
          _index: 2766,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:29",
        {
          _index: 2768,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:33",
        {
          _index: 2761,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:45",
        {
          _index: 2764,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/services/notification.service.ts:52",
        {
          _index: 2762,
          title: {},
          body: { "injectables/NotificationService.html": {} },
        },
      ],
      [
        "src/app/shared/utils/auth",
        {
          _index: 3704,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/app/shared/utils/user.map.ts",
        {
          _index: 3707,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment",
        {
          _index: 3416,
          title: {},
          body: { "injectables/TokenStorageService.html": {} },
        },
      ],
      [
        "src/environments/environment.development.ts",
        {
          _index: 3709,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.prod.ts",
        {
          _index: 3710,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/environments/environment.ts",
        {
          _index: 3711,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/main.server.ts",
        {
          _index: 3712,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/server.ts",
        {
          _index: 3714,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ssr",
        {
          _index: 1897,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "stairway",
        {
          _index: 2699,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "standalone",
        {
          _index: 123,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "start",
        {
          _index: 1102,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "index.html": {},
          },
        },
      ],
      ["started", { _index: 3746, title: { "index.html": {} }, body: {} }],
      [
        "startplayingplaylist(playlist",
        {
          _index: 713,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "state",
        {
          _index: 528,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "state.service",
        {
          _index: 1894,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "state.service.ts",
        {
          _index: 1852,
          title: {},
          body: {
            "injectables/AuthStateService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "state.service.ts:10",
        {
          _index: 1866,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:12",
        {
          _index: 1864,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:17",
        {
          _index: 1870,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:22",
        {
          _index: 1868,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:27",
        {
          _index: 1859,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:37",
        {
          _index: 1861,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:41",
        {
          _index: 1858,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "state.service.ts:6",
        {
          _index: 1857,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "statements",
        { _index: 3650, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "static",
        {
          _index: 2111,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "stats",
        {
          _index: 1124,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "status",
        {
          _index: 1976,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "status.error",
        {
          _index: 1982,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "status.success",
        {
          _index: 1978,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "status.testing",
        {
          _index: 1986,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "statusclass",
        {
          _index: 2024,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "statustext",
        {
          _index: 2072,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "stepping",
        {
          _index: 2293,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "storage_token_key",
        {
          _index: 3876,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["store", { _index: 3782, title: {}, body: { "index.html": {} } }],
      [
        "streamflow",
        {
          _index: 952,
          title: {},
          body: {
            "components/App.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "streets",
        {
          _index: 2244,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "stride",
        {
          _index: 2272,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "string",
        {
          _index: 10,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "interfaces/AuthToken.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "style",
        {
          _index: 2256,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "styles",
        {
          _index: 1022,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "styleurl",
        {
          _index: 521,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "styleurls",
        {
          _index: 128,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "stylo",
        {
          _index: 476,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "su",
        {
          _index: 405,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "suaves",
        {
          _index: 3579,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "subir",
        {
          _index: 1275,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "subscribe",
        {
          _index: 3520,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "subscribe((event",
        { _index: 940, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "success",
        {
          _index: 72,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterDto.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "successful",
        {
          _index: 2621,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "successmessage",
        {
          _index: 3433,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      ["such", { _index: 3776, title: {}, body: { "index.html": {} } }],
      [
        "sugerencias",
        {
          _index: 3131,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      ["suits", { _index: 3801, title: {}, body: { "index.html": {} } }],
      [
        "sunday",
        {
          _index: 579,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "supabase",
        {
          _index: 1470,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "supabase/supabase",
        {
          _index: 1773,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "supabase/supabase.service",
        {
          _index: 1422,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "supabase_anon_key",
        {
          _index: 3882,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabase_jwt_algorithm",
        {
          _index: 3888,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabase_jwt_secret",
        {
          _index: 3886,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabase_project_id",
        {
          _index: 3878,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabase_service_key",
        {
          _index: 3884,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabase_url",
        {
          _index: 3880,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "supabaseauthrepository",
        {
          _index: 3271,
          title: { "injectables/SupabaseAuthRepository.html": {} },
          body: {
            "injectables/SupabaseAuthRepository.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "supabaseclient",
        {
          _index: 3304,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "supabaseservice",
        {
          _index: 1405,
          title: { "injectables/SupabaseService.html": {} },
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "supabaseuser",
        {
          _index: 1416,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "supabaseuser.created_at",
        {
          _index: 1537,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "supabaseuser.email",
        {
          _index: 1533,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "supabaseuser.id",
        {
          _index: 1532,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        'supabaseuser.user_metadata?.["name',
        {
          _index: 1769,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "supabaseuser.user_metadata?.name",
        {
          _index: 1534,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "super",
        {
          _index: 1423,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "super(message",
        {
          _index: 1364,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "superior",
        {
          _index: 2329,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "sus",
        {
          _index: 394,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "sweet",
        {
          _index: 2704,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "switch",
        {
          _index: 630,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-2.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "switchmap",
        {
          _index: 2525,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "switchmap((session",
        {
          _index: 2555,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "synthwave",
        {
          _index: 3090,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "síncrono",
        {
          _index: 1591,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "t",
        {
          _index: 74,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "tab",
        {
          _index: 639,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "table",
        {
          _index: 989,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "table'},{'name",
        {
          _index: 987,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "table.html",
        {
          _index: 2686,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "table.ts",
        {
          _index: 2685,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "table.ts:22",
        {
          _index: 2688,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "table.ts:25",
        {
          _index: 2692,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "table.ts:26",
        {
          _index: 2691,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "table.ts:28",
        {
          _index: 2690,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "table.ts:33",
        {
          _index: 2687,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "table/musics",
        {
          _index: 2466,
          title: {},
          body: {
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 3719, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "tablet",
        {
          _index: 2402,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "tailwindcss",
        { _index: 3741, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "tailwindcss/postcss",
        { _index: 3732, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "take",
        {
          _index: 2271,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "tamaño",
        {
          _index: 212,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "tamaños",
        {
          _index: 2331,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "tame",
        {
          _index: 598,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "tap",
        {
          _index: 1635,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "tap((response",
        {
          _index: 1644,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "tap((user",
        {
          _index: 1658,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "tarde",
        {
          _index: 2550,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "target",
        {
          _index: 649,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "target.files?.[0",
        {
          _index: 651,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "tarjeta",
        {
          _index: 2994,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "tarjetas",
        {
          _index: 3603,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "te",
        {
          _index: 3041,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "teclado",
        {
          _index: 746,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "teclados",
        {
          _index: 361,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "tecnología",
        {
          _index: 451,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "template",
        {
          _index: 914,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "templateurl",
        {
          _index: 126,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "temporal",
        {
          _index: 3506,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "temporalmente",
        {
          _index: 2552,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "tendencias",
        {
          _index: 2467,
          title: {},
          body: { "components/ExploreComponent.html": {} },
        },
      ],
      [
        "tener",
        {
          _index: 1483,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "test",
        {
          _index: 1128,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "test'},{'name",
        {
          _index: 973,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "test.component.ts",
        {
          _index: 1970,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "test.component.ts:148",
        {
          _index: 2042,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:149",
        {
          _index: 2040,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:151",
        {
          _index: 2043,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:152",
        {
          _index: 2044,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:153",
        {
          _index: 2030,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:157",
        {
          _index: 2032,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:162",
        {
          _index: 2034,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:192",
        {
          _index: 2036,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test.component.ts:228",
        {
          _index: 2033,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "test/connection",
        {
          _index: 1969,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "testconnection",
        {
          _index: 2026,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "testconnectionservice",
        {
          _index: 2029,
          title: { "injectables/TestConnectionService.html": {} },
          body: {
            "components/ConnectionTestComponent.html": {},
            "injectables/TestConnectionService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "testdifferentimage",
        {
          _index: 171,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "testdirectbackend",
        {
          _index: 3316,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "testdjangoendpoints",
        {
          _index: 3317,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "testendpoint",
        {
          _index: 2027,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "testendpoint(endpoint",
        {
          _index: 2035,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "testimages",
        {
          _index: 172,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "testimages.indexof(this.artist!.image",
        {
          _index: 187,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "testimages.length",
        {
          _index: 189,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "testimages[nextindex",
        {
          _index: 191,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "testing",
        {
          _index: 2010,
          title: {},
          body: {
            "components/ConnectionTestComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
            "index.html": {},
          },
        },
      ],
      ["testrunning", { _index: 3795, title: {}, body: { "index.html": {} } }],
      ["tests", { _index: 3791, title: {}, body: { "index.html": {} } }],
      [
        "testservice",
        {
          _index: 2031,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "testspecificendpoint",
        {
          _index: 3318,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "testspecificendpoint(endpoint",
        {
          _index: 3331,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "text",
        {
          _index: 1161,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "texto",
        {
          _index: 2999,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "then((response",
        {
          _index: 3346,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "this._session",
        {
          _index: 1862,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "this._session.asreadonly",
        {
          _index: 1865,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "this._session.set(null",
        {
          _index: 1875,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "this._session.set(session",
        {
          _index: 1872,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "this._supabase",
        {
          _index: 3308,
          title: {},
          body: { "injectables/SupabaseService.html": {} },
        },
      ],
      [
        "this._supabaseuser",
        {
          _index: 1768,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this._supabaseuser.set(data.session?.user",
        {
          _index: 1794,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this._supabaseuser.set(null",
        {
          _index: 1790,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this._supabaseuser.set(session?.user",
        {
          _index: 1810,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this._supabaseuser.set(supabaseuser",
        {
          _index: 1828,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.activetab",
        {
          _index: 631,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.addnotification",
        {
          _index: 2737,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.apiservice",
        {
          _index: 1642,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.apiservice.delete",
        {
          _index: 2946,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.apiservice.delete(`${this.endpoint}/${artistid}/follow",
        {
          _index: 1289,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.apiservice.delete(`${this.endpoint}/${id",
        {
          _index: 2944,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.apiservice.delete(`${this.endpoint}/${songid",
        {
          _index: 3269,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.delete(`${this.endpoint}/${songid}/like",
        {
          _index: 3263,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.delete(`${this.endpoint}/history",
        {
          _index: 3139,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get",
        {
          _index: 1285,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        'this.apiservice.get("/").subscribe',
        {
          _index: 3341,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        'this.apiservice.get("/artists',
        {
          _index: 3337,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        'this.apiservice.get("/auth/user',
        {
          _index: 3338,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        'this.apiservice.get("/playlists',
        {
          _index: 3335,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        'this.apiservice.get("/songs',
        {
          _index: 3336,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        'this.apiservice.get("/test',
        {
          _index: 3333,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/${artistid}/albums",
        {
          _index: 1283,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/${artistid}/stats",
        {
          _index: 1294,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/${id",
        {
          _index: 1278,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/${playlistid}/songs",
        {
          _index: 2948,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/${type",
        {
          _index: 3127,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/album/${albumid",
        {
          _index: 3260,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/artist/${artistid",
        {
          _index: 3259,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/followed",
        {
          _index: 1290,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/history",
        {
          _index: 3137,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/liked",
        {
          _index: 3264,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/new",
        {
          _index: 1302,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/popular",
        {
          _index: 1280,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/quick",
        {
          _index: 3148,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/recent",
        {
          _index: 3258,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/recommendations",
        {
          _index: 1301,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(`${this.endpoint}/suggestions",
        {
          _index: 3133,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(endpoint",
        {
          _index: 2941,
          title: {},
          body: {
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "this.apiservice.get(this.endpoint",
        {
          _index: 3123,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.getfullurl(endpoint",
        {
          _index: 3334,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "this.apiservice.getpaginated",
        {
          _index: 1281,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.getpaginated(`${this.endpoint}/history",
        {
          _index: 3270,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.getpaginated(`${this.endpoint}/search",
        {
          _index: 1279,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.getpaginated(this.endpoint",
        {
          _index: 1277,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.apiservice.patch",
        {
          _index: 2949,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.apiservice.post",
        {
          _index: 1287,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/${songid}/like",
        {
          _index: 3262,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/${songid}/play",
        {
          _index: 3261,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/forgot",
        {
          _index: 1665,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/history",
        {
          _index: 3142,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/logout",
        {
          _index: 1647,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.apiservice.post(`${this.endpoint}/verify",
        {
          _index: 1668,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.apiservice.post(this.endpoint",
        {
          _index: 2942,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.apiservice.put",
        {
          _index: 1297,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
          },
        },
      ],
      [
        "this.apiservice.put(`${this.endpoint}/${songid",
        {
          _index: 3268,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.apiservice.upload",
        {
          _index: 1299,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.applyfallbackgradient",
        {
          _index: 170,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.artist",
        {
          _index: 247,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.artist!.image",
        {
          _index: 192,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.artist.gradient",
        {
          _index: 248,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.artistid",
        {
          _index: 140,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.audioelement",
        {
          _index: 2850,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "this.audioelement.nativeelement.currenttime",
        {
          _index: 2851,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "this.audioref.nativeelement.pause",
        {
          _index: 2127,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.audioref.nativeelement.volume",
        {
          _index: 2123,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.audioref?.nativeelement",
        {
          _index: 2122,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.audioref?.nativeelement?.pause",
        {
          _index: 2132,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.authrepository.getcurrentsession",
        {
          _index: 1849,
          title: {},
          body: {
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "injectables/CheckAuthUseCase.html": {},
          },
        },
      ],
      [
        "this.authrepository.logout",
        {
          _index: 2684,
          title: {},
          body: { "injectables/LogoutUseCase.html": {} },
        },
      ],
      [
        "this.authrepository.sendpasswordresetemail(email",
        {
          _index: 3062,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "this.authrepository.signinwithprovider(provider",
        {
          _index: 3187,
          title: {},
          body: { "injectables/SocialLoginUseCase.html": {} },
        },
      ],
      [
        "this.authservice",
        {
          _index: 3516,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.authservice.getauthtoken",
        {
          _index: 3485,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.authservice.getcurrentuser().subscribe",
        {
          _index: 3487,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.authservice.getcurrentuservalue",
        {
          _index: 3483,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.authservice.isauthenticated",
        {
          _index: 1319,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "this.authservice.signinwithprovider('google",
        {
          _index: 1749,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.authservice.signout",
        { _index: 1339, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "this.authservice.user",
        { _index: 1328, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "this.authsessionusecase.initsession",
        { _index: 951, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "this.authstateservice.token",
        {
          _index: 1898,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "this.baseurl}${endpoint",
        { _index: 827, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this.cdr.detectchanges",
        {
          _index: 254,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.checkauthstate",
        {
          _index: 1641,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.clearauthdata",
        {
          _index: 1648,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.click.emit",
        {
          _index: 3181,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "this.closemodal",
        {
          _index: 704,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.currentmusic",
        {
          _index: 2091,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.currentmusic.playlist?.albumid",
        {
          _index: 2089,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.currentmusic.playlist?.id",
        {
          _index: 2084,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.currentmusic.song",
        {
          _index: 2141,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.currentmusic.song?.id",
        {
          _index: 2087,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.currentplaylistid",
        {
          _index: 1949,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "this.currentsong",
        {
          _index: 2193,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.currentsong.gradient",
        {
          _index: 2222,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.currentsong.isplaying",
        {
          _index: 2194,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.currentsong.progress",
        {
          _index: 2216,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.currentsong?.id",
        {
          _index: 2693,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "this.currenttime",
        {
          _index: 2843,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "this.currentuser",
        {
          _index: 3496,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.currentusersubject.asobservable",
        {
          _index: 1623,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.currentusersubject.next(authresponse.user",
        {
          _index: 1680,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.currentusersubject.next(null",
        {
          _index: 1685,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.currentusersubject.next(user",
        {
          _index: 1659,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.currentusersubject.value",
        {
          _index: 1695,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.document.body.style.margin",
        {
          _index: 2188,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.document.body.style.overflow",
        {
          _index: 2187,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.document.body.style.padding",
        {
          _index: 2189,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'this.document.createelement("canvas',
        {
          _index: 2219,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.duration",
        {
          _index: 2842,
          title: {},
          body: { "components/PlayerSoundControl.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid",
        {
          _index: 1298,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/follow",
        {
          _index: 1288,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/image",
        {
          _index: 1300,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/is",
        {
          _index: 1292,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/similar",
        {
          _index: 1291,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/songs",
        {
          _index: 1284,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${artistid}/top",
        {
          _index: 1286,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${id",
        {
          _index: 2943,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/cover",
        {
          _index: 2951,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/duplicate",
        {
          _index: 2953,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/follow",
        {
          _index: 2952,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/reorder",
        {
          _index: 2950,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/songs",
        {
          _index: 2945,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${playlistid}/songs/${songid",
        {
          _index: 2947,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/${songid}/lyrics",
        {
          _index: 3266,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.endpoint}/${songid}/recommendations",
        {
          _index: 3265,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.endpoint}/advanced",
        {
          _index: 3130,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.endpoint}/change",
        {
          _index: 1664,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.endpoint}/create",
        {
          _index: 1295,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "this.endpoint}/genre/${genre",
        {
          _index: 1282,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "this.endpoint}/genre/${genre}/${type",
        {
          _index: 3144,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "this.endpoint}/my",
        {
          _index: 2940,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.endpoint}/resend",
        {
          _index: 1669,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.endpoint}/reset",
        {
          _index: 1666,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.endpoint}/upload",
        {
          _index: 3267,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "this.endpoint}/user/${userid",
        {
          _index: 2939,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "this.error.set",
        {
          _index: 2626,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.error.set('credenciales",
        {
          _index: 2624,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "this.error.set('error",
        {
          _index: 2628,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.error.set(error.message",
        {
          _index: 1782,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.error.set(null",
        {
          _index: 1780,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.errormessage",
        {
          _index: 3481,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.extractcolorsfromimage(img",
        {
          _index: 164,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.fb.group",
        {
          _index: 3474,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.finddominantcolor(colors",
        {
          _index: 241,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.generategradient(dominantcolor",
        {
          _index: 244,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.getauthtoken",
        {
          _index: 1696,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.getheaders",
        { _index: 866, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this.getnextsong",
        {
          _index: 2144,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        'this.handleauthstatechange("initial_session',
        {
          _index: 1805,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        'this.handleauthstatechange("signed_out',
        {
          _index: 1808,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.handleauthstatechange(event",
        {
          _index: 1800,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.handleerror(error",
        {
          _index: 2623,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.handletokenexpired(request",
        {
          _index: 2541,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "this.href",
        {
          _index: 3180,
          title: {},
          body: { "components/SideMenuItem.html": {} },
        },
      ],
      [
        "this.http",
        { _index: 864, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this.http.get(environment.api_url",
        {
          _index: 908,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "this.http.post(environment.api_url",
        {
          _index: 911,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "this.http.put(environment.api_url",
        {
          _index: 912,
          title: {},
          body: { "injectables/ApiService-1.html": {} },
        },
      ],
      [
        "this.id",
        {
          _index: 1950,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "this.imagepreviewurl",
        {
          _index: 647,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.isauthenticated.set(!!data.session",
        {
          _index: 1795,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.isauthenticated.set(!!session",
        {
          _index: 1811,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.isauthenticated.set(false",
        {
          _index: 1789,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.isauthenticated.set(true",
        {
          _index: 1834,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.iscurrentsongrunning(song",
        {
          _index: 2093,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.isediting",
        {
          _index: 3510,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.isloading",
        {
          _index: 2617,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "this.isloading.set(false",
        {
          _index: 1786,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.isloading.set(true",
        {
          _index: 1779,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.isloggedinsubject.asobservable",
        {
          _index: 1629,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.isloggedinsubject.next(false",
        {
          _index: 1686,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.isloggedinsubject.next(true",
        {
          _index: 1681,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.isloggedinsubject.value",
        {
          _index: 1694,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.isnewsongofanotherplaylist(song",
        {
          _index: 2094,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.isplaying",
        {
          _index: 1948,
          title: {},
          body: {
            "components/CardPlayButton.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/MusicsTablePlay.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.isthisplaylistinstore",
        {
          _index: 1954,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "this.isvalidemail(credentials.email",
        {
          _index: 2676,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
          },
        },
      ],
      [
        "this.isvalidemail(email",
        {
          _index: 3061,
          title: {},
          body: { "injectables/ResetPasswordUseCase.html": {} },
        },
      ],
      [
        "this.loadcurrentsong",
        {
          _index: 2184,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.loadgorillazdata",
        {
          _index: 142,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.loaduserdata",
        {
          _index: 3480,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.login",
        {
          _index: 1514,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.loginusecase.execute(this.credentials",
        {
          _index: 2619,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "this.mapsupabasesessiontotoken(data.session",
        {
          _index: 1463,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.mapsupabaseusertodomain(data.session.user",
        {
          _index: 3293,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "this.mapsupabaseusertodomain(data.user",
        {
          _index: 3286,
          title: {},
          body: { "injectables/SupabaseAuthRepository.html": {} },
        },
      ],
      [
        "this.mapsupabaseusertouser(data.user",
        {
          _index: 1462,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.mapsupabaseusertouser(user",
        {
          _index: 1526,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.markformgrouptouched",
        {
          _index: 3525,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.message",
        {
          _index: 2050,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.mockalbums.length",
        {
          _index: 635,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.mockartists.length",
        {
          _index: 634,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.mockplaylists.length",
        {
          _index: 633,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.mockplaylists.unshift(newplaylist",
        {
          _index: 703,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.name",
        {
          _index: 1365,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "this.newplaylist",
        {
          _index: 645,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.newplaylist.description.trim",
        {
          _index: 702,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.newplaylist.name.trim",
        {
          _index: 694,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.notifications",
        {
          _index: 2745,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.notifications.asreadonly",
        {
          _index: 2734,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.notifications.set",
        {
          _index: 2751,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.notifications.set([...currentnotifications",
        {
          _index: 2746,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.originalvalues",
        {
          _index: 3507,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.pause",
        {
          _index: 2135,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.play",
        {
          _index: 2134,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.playlist.id",
        {
          _index: 2877,
          title: {},
          body: {
            "interfaces/Playlist-4.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "this.playlist?.artists?.join",
        {
          _index: 2777,
          title: {},
          body: {
            "components/PlayListItemCard.html": {},
            "interfaces/Playlist-2.html": {},
          },
        },
      ],
      [
        "this.playpauseclick.emit",
        {
          _index: 2813,
          title: {},
          body: { "components/PlayerControlButtonBar.html": {} },
        },
      ],
      [
        "this.profileform",
        {
          _index: 3473,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'this.profileform.get("description',
        {
          _index: 3537,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'this.profileform.get("email',
        {
          _index: 3536,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        'this.profileform.get("username',
        {
          _index: 3535,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileform.get(key",
        {
          _index: 3529,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileform.patchvalue(this.originalvalues",
        {
          _index: 3511,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileform.patchvalue(userdata",
        {
          _index: 3508,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileform.valid",
        {
          _index: 3512,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileform.value",
        {
          _index: 3514,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.profileimageurl",
        {
          _index: 3509,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.registerusecase.execute(this.credentials",
        {
          _index: 2980,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "this.removenotification(notification",
        {
          _index: 2749,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "this.resetform",
        {
          _index: 643,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.resetpasswordusecase.execute(this.email",
        {
          _index: 3039,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "this.response",
        {
          _index: 2053,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        'this.route.snapshot.parammap.get("id',
        {
          _index: 141,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "this.router.events",
        { _index: 937, title: {}, body: { "components/App.html": {} } },
      ],
      [
        'this.router.navigate(["/artist',
        {
          _index: 733,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        'this.router.navigate(["/currentsong',
        {
          _index: 2823,
          title: {},
          body: {
            "components/PlayerCurrentSong.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        'this.router.navigate(["/home',
        {
          _index: 1815,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        'this.router.navigate(["/login',
        {
          _index: 1792,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        'this.router.navigate(["/playlist',
        {
          _index: 711,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "components/SideMenuCard.html": {},
          },
        },
      ],
      [
        "this.router.navigate(['/home",
        {
          _index: 2622,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.searchquery",
        {
          _index: 3105,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "this.selectedimagefile",
        {
          _index: 646,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "this.session",
        {
          _index: 1788,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.session.set",
        {
          _index: 1829,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.session.set(data.session",
        {
          _index: 1793,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.session.set(null",
        {
          _index: 1791,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.session.set(session",
        {
          _index: 1809,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.setauthdata(response",
        {
          _index: 1645,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "this.setgreeting",
        { _index: 2475, title: {}, body: { "components/Greeting.html": {} } },
      ],
      [
        "this.setinitialsession",
        {
          _index: 1803,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.setnewcurrentmusic(song",
        {
          _index: 2095,
          title: {},
          body: {
            "interfaces/CurrentMusic.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Song-2.html": {},
          },
        },
      ],
      [
        "this.setvolume(volume",
        {
          _index: 2148,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.showcreatemodal",
        {
          _index: 641,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "this.showlayout",
        { _index: 947, title: {}, body: { "components/App.html": {} } },
      ],
      [
        "this.showlyricspanel",
        {
          _index: 2198,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "this.size",
        {
          _index: 1951,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "this.socialloginusecase.execute('discord",
        {
          _index: 2633,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.socialloginusecase.execute('github",
        {
          _index: 2631,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.socialloginusecase.execute('google",
        {
          _index: 2630,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.socialloginusecase.execute('twitter",
        {
          _index: 2632,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "this.song",
        {
          _index: 2822,
          title: {},
          body: {
            "components/PlayerCurrentSong.html": {},
            "interfaces/Song-4.html": {},
          },
        },
      ],
      [
        "this.songs",
        {
          _index: 2694,
          title: {},
          body: {
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "this.status",
        {
          _index: 2049,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.statusclass",
        {
          _index: 2052,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.success.set",
        {
          _index: 3040,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "this.success.set('¡registro",
        {
          _index: 2982,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "this.success.set(null",
        {
          _index: 2979,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "this.successmessage",
        {
          _index: 3513,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "this.supabaseservice.client.auth",
        {
          _index: 1798,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "this.supabaseservice.client.auth.getsession",
        {
          _index: 1804,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.getuser",
        {
          _index: 1525,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.supabaseservice.client.auth.refreshsession",
        {
          _index: 1527,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.resetpasswordforemail(email",
        {
          _index: 1776,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.signinwithoauth",
        {
          _index: 1781,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.signinwithpassword",
        {
          _index: 1425,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "this.supabaseservice.client.auth.signinwithpassword(credentials",
        {
          _index: 1835,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.signout",
        {
          _index: 1523,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.supabaseservice.client.auth.signup",
        {
          _index: 1467,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "this.testconnection",
        {
          _index: 2047,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.testdirectbackend().then(resolve",
        {
          _index: 3343,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "this.testing",
        {
          _index: 2048,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.testservice.checkdjangoserver",
        {
          _index: 2055,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.testservice.getfullurl(endpoint",
        {
          _index: 2062,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.testservice.showdjangosetupguide",
        {
          _index: 2076,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.testservice.testspecificendpoint(endpoint).subscribe",
        {
          _index: 2067,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "this.toggleplaypause",
        {
          _index: 2146,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.volume",
        {
          _index: 2124,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "this.volumechange.emit(newvolume",
        {
          _index: 2869,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "throw",
        {
          _index: 1431,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "throwerror",
        {
          _index: 817,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
          },
        },
      ],
      [
        "thumb",
        {
          _index: 2380,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "ti",
        {
          _index: 2513,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "ticking",
        {
          _index: 2273,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "tienen",
        {
          _index: 393,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "tienes",
        {
          _index: 2637,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "time",
        {
          _index: 2377,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "tipo",
        {
          _index: 3125,
          title: {},
          body: {
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "title",
        {
          _index: 31,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "toda",
        {
          _index: 2316,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
          },
        },
      ],
      [
        "todas",
        {
          _index: 2917,
          title: {},
          body: {
            "injectables/PlaylistService.html": {},
            "injectables/SongService.html": {},
          },
        },
      ],
      [
        "todo",
        {
          _index: 2511,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "todos",
        {
          _index: 1233,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "togglefollowartist(artist",
        {
          _index: 735,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "togglelyricspanel",
        {
          _index: 2160,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "toggleplaypause",
        {
          _index: 2133,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "token",
        {
          _index: 65,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "token.entity",
        {
          _index: 1395,
          title: {},
          body: {
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/RegisterCredentials.html": {},
          },
        },
      ],
      [
        "token.entity.ts",
        {
          _index: 1877,
          title: {},
          body: { "interfaces/AuthToken.html": {}, "coverage.html": {} },
        },
      ],
      [
        "token.interceptor.ts",
        {
          _index: 1881,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "token.interceptor.ts:14",
        {
          _index: 1890,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "token.interceptor.ts:15",
        {
          _index: 1883,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "token.interceptor.ts:19",
        {
          _index: 1888,
          title: {},
          body: { "interceptors/AuthTokenInterceptor.html": {} },
        },
      ],
      [
        "token.substring(0",
        {
          _index: 1904,
          title: {},
          body: {
            "interceptors/AuthTokenInterceptor.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "token_expired",
        {
          _index: 2540,
          title: {},
          body: { "interceptors/HttpErrorInterceptor.html": {} },
        },
      ],
      [
        "token_type",
        {
          _index: 1830,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "tokenstorageservice",
        {
          _index: 3407,
          title: { "injectables/TokenStorageService.html": {} },
          body: {
            "injectables/TokenStorageService.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["tools", { _index: 3770, title: {}, body: { "index.html": {} } }],
      [
        "top",
        {
          _index: 1129,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "total",
        {
          _index: 81,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "totalduration",
        {
          _index: 49,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "totalpages",
        {
          _index: 82,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "totalsongs",
        {
          _index: 50,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "totaltracks",
        {
          _index: 35,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "touser",
        {
          _index: 3708,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "town",
        {
          _index: 2257,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "trabajar",
        {
          _index: 549,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "track",
        {
          _index: 1352,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "components/CurrentSongComponent.html": {},
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
          },
        },
      ],
      [
        "tracks",
        {
          _index: 101,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "tranquilas",
        {
          _index: 569,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "tranquility",
        {
          _index: 625,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "transform",
        {
          _index: 2349,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "transiciones",
        {
          _index: 3578,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "transition",
        {
          _index: 1093,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "translate",
        {
          _index: 2381,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "translatex",
        {
          _index: 2351,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "translatex(0",
        {
          _index: 3629,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "translatex(100",
        {
          _index: 3595,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "translatex(5px",
        {
          _index: 3631,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "translatey",
        {
          _index: 3586,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "translatey(0",
        {
          _index: 2399,
          title: {},
          body: {
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "translatey(20px",
        {
          _index: 2658,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "translatey(30px",
        {
          _index: 2398,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "transparent",
        {
          _index: 3592,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "tranz",
        {
          _index: 478,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "trasciende",
        {
          _index: 422,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "trasfondos",
        {
          _index: 397,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "tree",
        {
          _index: 916,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "trending",
        {
          _index: 2515,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "triggerimageupload",
        {
          _index: 691,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "trip",
        {
          _index: 556,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "true",
        {
          _index: 124,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "try",
        {
          _index: 194,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/Award.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      ["tslib", { _index: 3742, title: {}, body: { "dependencies.html": {} } }],
      [
        "tu",
        {
          _index: 1350,
          title: {},
          body: {
            "components/AsideMenu.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "turn",
        {
          _index: 2268,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "turned",
        {
          _index: 2277,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "twitter",
        {
          _index: 1554,
          title: {},
          body: {
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "classes/IAuthRepository.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "twitter|x",
        {
          _index: 2641,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "type",
        {
          _index: 11,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthError.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthSessionUseCase.html": {},
            "injectables/AuthStateService.html": {},
            "interfaces/AuthToken.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "interfaces/Award.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "classes/IAuthRepository.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "classes/LoginError.html": {},
            "interfaces/LoginRequestDTO.html": {},
            "injectables/LoginUseCase.html": {},
            "injectables/LogoutUseCase.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "classes/NetworkError.html": {},
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "classes/RegisterError.html": {},
            "interfaces/RegisterRequestDTO.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "injectables/SocialLoginUseCase.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-1.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-4.html": {},
            "interfaces/Song-5.html": {},
            "interfaces/Song-6.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "injectables/SupabaseService.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "interfaces/UserDTO.html": {},
            "components/UserPerfilComponent.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typeof",
        {
          _index: 2126,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "términos",
        {
          _index: 2990,
          title: {},
          body: { "components/RegisterComponent.html": {} },
        },
      ],
      [
        "típicas",
        {
          _index: 3367,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "título",
        {
          _index: 2714,
          title: {},
          body: { "components/MusicsTable.html": {} },
        },
      ],
      [
        "un",
        {
          _index: 391,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "interfaces/Award.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "una",
        {
          _index: 343,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/Award.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/LoginComponent.html": {},
            "components/Player.html": {},
            "components/PlayerCurrentSong.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-4.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "components/SideMenuCard.html": {},
            "interfaces/Song-3.html": {},
            "interfaces/Song-5.html": {},
            "injectables/SongService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "undefined",
        { _index: 861, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "unfollowartist",
        {
          _index: 1215,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "unfollowartist(artistid",
        {
          _index: 1266,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "unfollowplaylist",
        {
          _index: 2892,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "unfollowplaylist(playlistid",
        {
          _index: 2932,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      ["unit", { _index: 3790, title: {}, body: { "index.html": {} } }],
      [
        "unknown",
        {
          _index: 910,
          title: {},
          body: {
            "injectables/ApiService-1.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "unlikesong",
        {
          _index: 3207,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "unlikesong(songid",
        {
          _index: 3250,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "uno",
        {
          _index: 376,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "up",
        {
          _index: 1838,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/CurrentSongComponent.html": {},
          },
        },
      ],
      [
        "updateartistprofile",
        {
          _index: 1216,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "updateartistprofile(artistid",
        {
          _index: 1269,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "updated_at",
        {
          _index: 1826,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/TestConnectionService.html": {},
          },
        },
      ],
      [
        "updatedat",
        {
          _index: 20,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "updateduser",
        {
          _index: 3521,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "updateplaylist",
        {
          _index: 2893,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "updateplaylist(id",
        {
          _index: 2934,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "updateplaylistdto",
        {
          _index: 60,
          title: { "interfaces/UpdatePlaylistDto.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "updateprofile",
        {
          _index: 1572,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "updateprofile(userdata",
        {
          _index: 1616,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "updatesession",
        {
          _index: 1856,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "updatesession(session",
        {
          _index: 1860,
          title: {},
          body: { "injectables/AuthStateService.html": {} },
        },
      ],
      [
        "updatesong",
        {
          _index: 3208,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "updatesong(songid",
        {
          _index: 3253,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "upload",
        {
          _index: 531,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "upload(`${this.endpoint}/profile",
        {
          _index: 1667,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "upload(endpoint",
        { _index: 809, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "uploadartistimage",
        {
          _index: 1217,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "uploadartistimage(artistid",
        {
          _index: 1273,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "uploadplaylistcover",
        {
          _index: 2894,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "uploadplaylistcover(playlistid",
        {
          _index: 2936,
          title: {},
          body: { "injectables/PlaylistService.html": {} },
        },
      ],
      [
        "uploadprofileimage",
        {
          _index: 1573,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "uploadprofileimage(file",
        {
          _index: 1618,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "uploadsong",
        {
          _index: 3209,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "uploadsong(file",
        {
          _index: 3255,
          title: {},
          body: { "injectables/SongService.html": {} },
        },
      ],
      [
        "urbanos",
        {
          _index: 3087,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "url",
        {
          _index: 679,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "injectables/ApiService.html": {},
            "injectables/ApiService-1.html": {},
            "interfaces/Artist-2.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Playlist-5.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "urls",
        {
          _index: 3366,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "usa",
        {
          _index: 1478,
          title: {},
          body: { "injectables/AuthRepositoryImpl.html": {} },
        },
      ],
      [
        "usando",
        {
          _index: 1735,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "usar",
        {
          _index: 2063,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "use",
        {
          _index: 695,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "useclass",
        {
          _index: 3854,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "used",
        {
          _index: 3839,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "user",
        {
          _index: 14,
          title: { "interfaces/User.html": {}, "interfaces/User-1.html": {} },
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "components/App.html": {},
            "interfaces/Artist.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "classes/AuthRepository.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/AuthResult.html": {},
            "interfaces/AuthResult-1.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/AuthSession.html": {},
            "injectables/AuthStateService.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "classes/IAuthRepository.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginCredentials.html": {},
            "interfaces/LoginCredentials-1.html": {},
            "interfaces/LoginDto.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "interfaces/PaginatedResponse.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterCredentials.html": {},
            "interfaces/RegisterCredentials-1.html": {},
            "interfaces/RegisterDto.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "interfaces/User-1.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "user.createdat",
        {
          _index: 3492,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user.createdat.toisostring",
        {
          _index: 1825,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "user.email",
        {
          _index: 1818,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        'user.email.split("@")[0',
        {
          _index: 3504,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user.id",
        {
          _index: 1817,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "user.name",
        {
          _index: 1820,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "user.profileimage",
        {
          _index: 3491,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user.updatedat",
        {
          _index: 3493,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user.updatedat.toisostring",
        {
          _index: 1827,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "user.username",
        {
          _index: 3490,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user?.email",
        {
          _index: 3500,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "user_metadata",
        {
          _index: 1819,
          title: {},
          body: { "injectables/AuthService-1.html": {} },
        },
      ],
      [
        "userdata",
        {
          _index: 1602,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "userdto",
        {
          _index: 3421,
          title: { "interfaces/UserDTO.html": {} },
          body: {
            "interfaces/UserDTO.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userid",
        {
          _index: 46,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "username",
        {
          _index: 16,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "username?.errors?.['maxlength",
        {
          _index: 3548,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.errors?.['minlength",
        {
          _index: 3547,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.errors?.['required",
        {
          _index: 3545,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.errors?.[\\'maxlength",
        {
          _index: 3642,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.errors?.[\\'minlength",
        {
          _index: 3641,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.errors?.[\\'required",
        {
          _index: 3640,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.invalid",
        {
          _index: 3543,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "username?.touched",
        {
          _index: 3544,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "userperfilcomponent",
        {
          _index: 1018,
          title: { "components/UserPerfilComponent.html": {} },
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "users",
        {
          _index: 2019,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "userstr",
        {
          _index: 1688,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      ["using", { _index: 3749, title: {}, body: { "index.html": {} } }],
      [
        "uso",
        {
          _index: 1748,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "usuario",
        {
          _index: 1248,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "injectables/AuthService.html": {},
            "injectables/PlaylistService.html": {},
            "interfaces/SearchResults.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "usuarios",
        {
          _index: 1222,
          title: {},
          body: { "injectables/ArtistService.html": {} },
        },
      ],
      [
        "utilidad",
        {
          _index: 1692,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "utilizan",
        {
          _index: 450,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "validación",
        {
          _index: 3625,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validar",
        {
          _index: 3497,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validate",
        {
          _index: 652,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "validation_error",
        {
          _index: 1367,
          title: {},
          body: {
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "classes/RegisterError.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "validationerror",
        {
          _index: 1366,
          title: { "classes/ValidationError.html": {} },
          body: {
            "classes/AuthError.html": {},
            "components/LoginComponent.html": {},
            "classes/LoginError.html": {},
            "injectables/LoginUseCase.html": {},
            "classes/NetworkError.html": {},
            "components/RegisterComponent.html": {},
            "classes/RegisterError.html": {},
            "injectables/RegisterUseCase.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/ResetPasswordUseCase.html": {},
            "classes/SessionError.html": {},
            "classes/ValidationError.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        'validationerror("email',
        {
          _index: 2674,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        'validationerror("invalid',
        {
          _index: 2677,
          title: {},
          body: {
            "injectables/LoginUseCase.html": {},
            "injectables/RegisterUseCase.html": {},
            "injectables/ResetPasswordUseCase.html": {},
          },
        },
      ],
      [
        'validationerror("name',
        {
          _index: 3021,
          title: {},
          body: { "injectables/RegisterUseCase.html": {} },
        },
      ],
      [
        "validators",
        {
          _index: 3471,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validators.email",
        {
          _index: 3478,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validators.maxlength(20",
        {
          _index: 3477,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validators.maxlength(500",
        {
          _index: 3479,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validators.minlength(3",
        {
          _index: 3476,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "validators.required",
        {
          _index: 3475,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "valor",
        {
          _index: 3503,
          title: {},
          body: { "components/UserPerfilComponent.html": {} },
        },
      ],
      [
        "value",
        {
          _index: 813,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "injectables/ArtistService.html": {},
            "components/AsideMenu.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "interceptors/AuthTokenInterceptor.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "injectables/CheckAuthUseCase.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "injectables/NotificationService.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "injectables/PlaylistService.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SearchService.html": {},
            "injectables/SongService.html": {},
            "injectables/SupabaseAuthRepository.html": {},
            "components/UserPerfilComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "vanguardia",
        {
          _index: 452,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "var",
        {
          _index: 961,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      ["variable", { _index: 3652, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 3820,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "variaciones",
        {
          _index: 294,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "ver",
        {
          _index: 2514,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "verde",
        {
          _index: 185,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "verifica",
        {
          _index: 848,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "verificación",
        {
          _index: 1609,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "verificar",
        {
          _index: 1262,
          title: {},
          body: {
            "injectables/ArtistService.html": {},
            "injectables/AuthService.html": {},
            "components/ConnectionTestComponent.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "injectables/TestConnectionService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "verification",
        {
          _index: 1670,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "verified",
        {
          _index: 27,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/AuthResponse.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "interfaces/RegisterDto.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
          },
        },
      ],
      [
        "verifyemail",
        {
          _index: 1574,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "verifyemail(token",
        {
          _index: 1621,
          title: {},
          body: { "injectables/AuthService.html": {} },
        },
      ],
      [
        "version",
        {
          _index: 3751,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "via",
        { _index: 832, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "viajes",
        {
          _index: 559,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "vibes",
        {
          _index: 557,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/HomeComponent.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "vida",
        {
          _index: 454,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "video",
        {
          _index: 503,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "videos",
        {
          _index: 447,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "view",
        {
          _index: 1184,
          title: {},
          body: { "components/ArtistComponent.html": {} },
        },
      ],
      [
        "viewartist(artist",
        {
          _index: 732,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "viewchild",
        {
          _index: 2103,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        'viewchild("audioelement',
        {
          _index: 2110,
          title: {},
          body: {
            "interfaces/CurrentMusic-1.html": {},
            "components/Player.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Song-3.html": {},
          },
        },
      ],
      [
        "viewchild('audioelement",
        { _index: 2794, title: {}, body: { "components/Player.html": {} } },
      ],
      [
        "virtual",
        {
          _index: 345,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      ["visit", { _index: 3810, title: {}, body: { "index.html": {} } }],
      [
        "visita",
        {
          _index: 3374,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "vista",
        {
          _index: 709,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-6.html": {},
          },
        },
      ],
      [
        "visuales",
        {
          _index: 456,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "vivo",
        {
          _index: 449,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "vocalista",
        {
          _index: 360,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "vocals",
        {
          _index: 499,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "void",
        {
          _index: 638,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "components/App.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthService.html": {},
            "injectables/AuthService-1.html": {},
            "injectables/AuthStateService.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/Greeting.html": {},
            "classes/IAuthService.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTablePlay.html": {},
            "injectables/NotificationService.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-1.html": {},
            "interfaces/Playlist-2.html": {},
            "interfaces/Playlist-3.html": {},
            "interfaces/Playlist-5.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-2.html": {},
            "interfaces/Song-3.html": {},
            "injectables/TestConnectionService.html": {},
            "injectables/TokenStorageService.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "volume",
        {
          _index: 1001,
          title: {},
          body: {
            "components/App.html": {},
            "components/ArtistComponent.html": {},
            "components/AsideMenu.html": {},
            "components/Card.html": {},
            "components/CardPlayButton.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CurrentMusic-1.html": {},
            "components/CurrentSongComponent.html": {},
            "components/ExploreComponent.html": {},
            "components/Greeting.html": {},
            "components/HomeComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MusicsTable.html": {},
            "components/MusicsTablePlay.html": {},
            "components/PlayListItemCard.html": {},
            "components/Player.html": {},
            "components/PlayerControlButtonBar.html": {},
            "components/PlayerCurrentSong.html": {},
            "components/PlayerSoundControl.html": {},
            "components/PlayerVolumeControl.html": {},
            "interfaces/Playlist-3.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/SideMenuCard.html": {},
            "components/SideMenuItem.html": {},
            "interfaces/Song-3.html": {},
            "components/UserPerfilComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "volume_down",
        {
          _index: 2872,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "volume_off",
        {
          _index: 2871,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "volume_up",
        {
          _index: 2873,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "volumechange",
        {
          _index: 2859,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "volumepercentage",
        {
          _index: 2860,
          title: {},
          body: { "components/PlayerVolumeControl.html": {} },
        },
      ],
      [
        "volver",
        {
          _index: 2438,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "voz",
        {
          _index: 367,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "vuelve",
        {
          _index: 2435,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "válida",
        {
          _index: 662,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "válido",
        {
          _index: 1487,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "válidos",
        {
          _index: 257,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interceptors/HttpErrorInterceptor.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "w",
        {
          _index: 1952,
          title: {},
          body: { "components/CardPlayButton.html": {} },
        },
      ],
      [
        "wack",
        {
          _index: 2243,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "wanna",
        {
          _index: 2260,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "warning",
        {
          _index: 2730,
          title: {},
          body: {
            "interfaces/Notification.html": {},
            "injectables/NotificationService.html": {},
          },
        },
      ],
      [
        "watch",
        {
          _index: 2301,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "webp",
        {
          _index: 666,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "weeknd",
        {
          _index: 594,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "weight",
        {
          _index: 1116,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      ["whenever", { _index: 3764, title: {}, body: { "index.html": {} } }],
      [
        "white",
        {
          _index: 1092,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "width",
        {
          _index: 1070,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "components/RegisterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Song-6.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "windmill",
        {
          _index: 2266,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "window.location.href",
        { _index: 1340, title: {}, body: { "components/AsideMenu.html": {} } },
      ],
      [
        "window.location.origin",
        {
          _index: 1778,
          title: {},
          body: {
            "injectables/AuthService-1.html": {},
            "injectables/SupabaseAuthRepository.html": {},
          },
        },
      ],
      [
        "wine",
        {
          _index: 2503,
          title: {},
          body: { "components/HomeComponent.html": {} },
        },
      ],
      [
        "won't",
        {
          _index: 2248,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "won\\'t",
        {
          _index: 2454,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "word",
        {
          _index: 2008,
          title: {},
          body: { "components/ConnectionTestComponent.html": {} },
        },
      ],
      [
        "workout",
        {
          _index: 573,
          title: {},
          body: {
            "interfaces/Album-2.html": {},
            "interfaces/Artist-2.html": {},
            "interfaces/Playlist-5.html": {},
          },
        },
      ],
      [
        "wrap",
        {
          _index: 1125,
          title: {},
          body: {
            "components/ArtistComponent.html": {},
            "components/ConnectionTestComponent.html": {},
          },
        },
      ],
      [
        "wrapper",
        {
          _index: 2333,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "x",
        {
          _index: 155,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "xito",
        {
          _index: 2986,
          title: {},
          body: {
            "components/RegisterComponent.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "xxi",
        {
          _index: 383,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Artist-1.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "y",
        {
          _index: 84,
          title: {},
          body: {
            "interfaces/AddSongToPlaylistDto.html": {},
            "interfaces/Album.html": {},
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/ApiResponse.html": {},
            "interfaces/Artist.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "injectables/AuthRepositoryImpl.html": {},
            "interfaces/AuthResponse.html": {},
            "injectables/AuthService-1.html": {},
            "interfaces/Award.html": {},
            "components/ConnectionTestComponent.html": {},
            "interfaces/CreatePlaylistDto.html": {},
            "components/CurrentSongComponent.html": {},
            "components/LoginComponent.html": {},
            "interfaces/LoginDto.html": {},
            "interfaces/PaginatedResponse.html": {},
            "interfaces/Playlist.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/PlaylistFilters.html": {},
            "interfaces/PlaylistSong.html": {},
            "components/RegisterComponent.html": {},
            "interfaces/RegisterDto.html": {},
            "components/SearchComponent.html": {},
            "interfaces/SearchFilters.html": {},
            "interfaces/Song.html": {},
            "interfaces/Song-5.html": {},
            "injectables/TestConnectionService.html": {},
            "interfaces/UpdatePlaylistDto.html": {},
            "interfaces/User.html": {},
            "components/UserPerfilComponent.html": {},
          },
        },
      ],
      [
        "ya",
        {
          _index: 1476,
          title: {},
          body: {
            "injectables/AuthRepositoryImpl.html": {},
            "components/RegisterComponent.html": {},
          },
        },
      ],
      [
        "yasg",
        {
          _index: 3378,
          title: {},
          body: { "injectables/TestConnectionService.html": {} },
        },
      ],
      [
        "yeah",
        {
          _index: 2296,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "year",
        {
          _index: 102,
          title: {},
          body: {
            "interfaces/Album-1.html": {},
            "interfaces/Album-2.html": {},
            "interfaces/Artist-1.html": {},
            "interfaces/Artist-2.html": {},
            "components/ArtistComponent.html": {},
            "interfaces/Award.html": {},
            "components/CurrentSongComponent.html": {},
            "interfaces/Playlist-5.html": {},
            "interfaces/Song-5.html": {},
          },
        },
      ],
      [
        "yellow",
        {
          _index: 3088,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "yes",
        {
          _index: 786,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/ArtistService.html": {},
            "classes/AuthError.html": {},
            "classes/LoginError.html": {},
            "classes/NetworkError.html": {},
            "injectables/PlaylistService.html": {},
            "classes/RegisterError.html": {},
            "injectables/SearchService.html": {},
            "classes/SessionError.html": {},
            "injectables/SongService.html": {},
            "classes/ValidationError.html": {},
          },
        },
      ],
      [
        "you're",
        {
          _index: 2250,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "you've",
        {
          _index: 2253,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "you\\'re",
        {
          _index: 2455,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "you\\'ve",
        {
          _index: 2456,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "z",
        {
          _index: 2345,
          title: {},
          body: { "components/CurrentSongComponent.html": {} },
        },
      ],
      [
        "zeppelin",
        {
          _index: 2484,
          title: {},
          body: {
            "components/HomeComponent.html": {},
            "components/MusicsTable.html": {},
            "interfaces/Song-1.html": {},
          },
        },
      ],
      [
        "zone.js",
        { _index: 3744, title: {}, body: { "dependencies.html": {} } },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "interfaces/AddSongToPlaylistDto.html": {
      url: "interfaces/AddSongToPlaylistDto.html",
      title: "interface - AddSongToPlaylistDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddSongToPlaylistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            songId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        songId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Album.html": {
      url: "interfaces/Album.html",
      title: "interface - Album",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            artistId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coverImage\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            totalTracks\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         Artist\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Artist\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTracks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTracks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Album-1.html": {
      url: "interfaces/Album-1.html",
      title: "interface - Album-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/artist/artist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tracks\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tracks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tracks:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ChangeDetectorRef } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { ActivatedRoute } from "@angular/router";\n\ninterface Song {\n  title: string;\n  album: string;\n  duration: string;\n}\n\ninterface Album {\n  title: string;\n  year: string;\n  tracks: number;\n  cover: string;\n}\n\ninterface Award {\n  name: string;\n  year: string;\n  category: string;\n}\n\ninterface Artist {\n  id: number;\n  name: string;\n  genre: string;\n  image: string;\n  gradient: string;\n  monthlyListeners: string;\n  followers: string;\n  activeYears: string;\n  biography: string;\n  popularSongs: Song[];\n  albums: Album[];\n  awards: Award[];\n}\n\n@Component({\n  selector: "app-artist",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./artist.html",\n  styleUrls: ["./artist.css"],\n})\nexport class ArtistComponent implements OnInit {\n  artistId: string | null = null;\n  artist: Artist | null = null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get("id");\n    if (this.artistId === "1") {\n      this.loadGorillazData();\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\n      "Imagen cargada:",\n      img.src,\n      "Dimensiones:",\n      img.width,\n      "x",\n      img.height,\n    );\n\n    // Pequeño delay para asegurar que la imagen está completamente cargada\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar la imagen:", event);\n    this.applyFallbackGradient();\n  }\n\n  testDifferentImage() {\n    const testImages = [\n      "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop", // Original\n      "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=400&h=400&fit=crop", // Azul/morado\n      "https://images.unsplash.com/photo-1511379938547-c1f69419868d?w=400&h=400&fit=crop", // Rojizo\n      "https://images.unsplash.com/photo-1446057032654-9d8885db76c6?w=400&h=400&fit=crop", // Verde\n    ];\n\n    const currentIndex = testImages.indexOf(this.artist!.image);\n    const nextIndex = (currentIndex + 1) % testImages.length;\n\n    console.log("🎨 Cambiando a imagen:", testImages[nextIndex]);\n    this.artist!.image = testImages[nextIndex];\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    try {\n      console.log("Iniciando extracción de colores...");\n\n      const canvas = document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      // Reducir el tamaño para análisis más rápido\n      const analysisSize = 200;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      // Configurar CORS para imágenes externas\n      img.crossOrigin = "anonymous";\n\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      // Extraer colores de diferentes puntos de la imagen\n      const colors = [];\n      const samples = 50; // Más muestras para mejor análisis\n\n      for (let i = 0; i  200 && r + g + b > 60 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        console.log("Color dominante:", dominantColor);\n\n        const gradient = this.generateGradient(dominantColor);\n        console.log("Gradiente generado:", gradient);\n\n        if (this.artist) {\n          this.artist.gradient = gradient;\n          console.log("Gradiente aplicado al artista");\n          // Forzar detección de cambios\n          this.cdr.detectChanges();\n        }\n      } else {\n        console.warn("No se encontraron colores válidos en la imagen");\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores de la imagen:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.artist) {\n      this.artist.gradient =\n        "linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)";\n      console.log("Aplicado gradiente de fallback");\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    // Agrupar colores similares y encontrar el más común\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      // Reducir la precisión del color para agrupar similares\n      const key = `${Math.floor(color.r / 20) * 20}-${Math.floor(color.g / 20) * 20}-${Math.floor(color.b / 20) * 20}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    // Encontrar el grupo con más colores\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    // Crear variaciones del color dominante\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n    // Color más oscuro para el gradiente\n    const darkerColor = `rgb(${Math.max(0, color.r - 60)}, ${Math.max(0, color.g - 60)}, ${Math.max(0, color.b - 60)})`;\n\n    // Color más claro para el gradiente\n    const lighterColor = `rgb(${Math.min(255, color.r + 40)}, ${Math.min(255, color.g + 40)}, ${Math.min(255, color.b + 40)})`;\n\n    // Determinar si el color es muy oscuro o muy claro para ajustar la dirección\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  200) {\n      // Color claro - gradiente hacia más oscuro\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      // Color medio - gradiente en ambas direcciones\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadGorillazData() {\n    this.artist = {\n      id: 1,\n      name: "Gorillaz",\n      genre: "Alternative Rock, Electronic, Hip Hop",\n      image: "/assets/gorillaz2.jpg", // Imagen de prueba\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)", // Gradiente inicial que será reemplazado\n      monthlyListeners: "45.2M",\n      followers: "12.8M",\n      activeYears: "1998 - presente",\n      biography: `Gorillaz es una banda virtual británica creada en 1998 por Damon Albarn y Jamie Hewlett. La banda está compuesta por cuatro miembros ficticios animados: 2-D (vocalista, teclados), Murdoc Niccals (bajo), Noodle (guitarra, teclados, voz ocasional) y Russel Hobbs (batería). Gorillaz ha sido aclamado como uno de los proyectos musicales más innovadores y exitosos del siglo XXI, combinando elementos de rock alternativo, hip hop, electrónica y pop.\n\nEl concepto único de la banda como un grupo completamente virtual, con personajes animados que tienen sus propias personalidades y trasfondos elaborados, fue revolucionario en la industria musical. A lo largo de su carrera, Gorillaz ha colaborado con una amplia gama de artistas, desde De La Soul y Del the Funky Homosapien hasta Elton John y Beck, creando un sonido ecléctico que trasciende géneros musicales.\n\nLa banda ha lanzado múltiples álbumes exitosos, incluyendo su álbum debut homónimo (2001), "Demon Days" (2005), "Plastic Beach" (2010), "Humanz" (2017), "The Now Now" (2018), "Song Machine" (2020) y "Cracker Island" (2023). Sus videos musicales y presentaciones en vivo utilizan tecnología de vanguardia para dar vida a los personajes animados, creando experiencias visuales únicas.`,\n      popularSongs: [\n        { title: "Feel Good Inc.", album: "Demon Days", duration: "3:41" },\n        { title: "Clint Eastwood", album: "Gorillaz", duration: "5:41" },\n        {\n          title: "On Melancholy Hill",\n          album: "Plastic Beach",\n          duration: "3:53",\n        },\n        { title: "Saturnz Barz", album: "Humanz", duration: "3:58" },\n        { title: "Humility", album: "The Now Now", duration: "3:01" },\n        { title: "Dirty Harry", album: "Demon Days", duration: "3:43" },\n        { title: "Stylo", album: "Plastic Beach", duration: "4:30" },\n        { title: "Tranz", album: "The Now Now", duration: "2:42" },\n        { title: "Cracker Island", album: "Cracker Island", duration: "3:42" },\n        { title: "19-2000", album: "Gorillaz", duration: "3:27" },\n      ],\n      albums: [\n        {\n          title: "Gorillaz",\n          year: "2001",\n          tracks: 15,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Demon Days",\n          year: "2005",\n          tracks: 15,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Plastic Beach",\n          year: "2010",\n          tracks: 16,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n        {\n          title: "Humanz",\n          year: "2017",\n          tracks: 20,\n          cover: "/assets/playlists/playlist4.jpg",\n        },\n        {\n          title: "The Now Now",\n          year: "2018",\n          tracks: 11,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Song Machine, Season One",\n          year: "2020",\n          tracks: 17,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Cracker Island",\n          year: "2023",\n          tracks: 10,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n      ],\n      awards: [\n        {\n          name: "Grammy Award",\n          year: "2006",\n          category: "Best Pop Collaboration with Vocals - Feel Good Inc.",\n        },\n        { name: "BRIT Award", year: "2006", category: "Best British Group" },\n        {\n          name: "MTV Video Music Award",\n          year: "2005",\n          category: "Best Group Video - Feel Good Inc.",\n        },\n        {\n          name: "Q Award",\n          year: "2005",\n          category: "Best Video - Feel Good Inc.",\n        },\n        {\n          name: "Ivor Novello Award",\n          year: "2002",\n          category: "Best Contemporary Song - Clint Eastwood",\n        },\n        { name: "NME Award", year: "2006", category: "Best Band" },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Album-2.html": {
      url: "interfaces/Album-2.html",
      title: "interface - Album-2",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Album\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/library/library.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            songCount\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { Router } from "@angular/router";\n\ninterface Playlist {\n  id: string;\n  name: string;\n  description: string;\n  image: string;\n  songCount: number;\n  createdAt: Date;\n}\n\ninterface Artist {\n  id: string;\n  name: string;\n  genre: string;\n  image: string;\n  followers: string;\n  isFollowing: boolean;\n}\n\ninterface Album {\n  id: string;\n  title: string;\n  artist: string;\n  year: number;\n  image: string;\n  songCount: number;\n}\n\n@Component({\n  selector: "app-library",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: "./library.html",\n  styleUrl: "./library.css",\n})\nexport class LibraryComponent {\n  activeTab: "playlists" | "artists" | "albums" = "playlists";\n\n  // Modal state\n  showCreateModal = false;\n\n  // Image upload state\n  selectedImageFile: File | null = null;\n  imagePreviewUrl: string | null = null;\n\n  // Form data for new playlist\n  newPlaylist = {\n    name: "",\n    description: "",\n    isPrivate: false,\n  };\n\n  constructor(private readonly router: Router) {}\n\n  // Mock data para playlists\n  mockPlaylists: Playlist[] = [\n    {\n      id: "1",\n      name: "Mi Playlist Favorita",\n      description: "Las mejores canciones para relajarse",\n      image: "https://picsum.photos/400/400?random=1",\n      songCount: 25,\n      createdAt: new Date(),\n    },\n    {\n      id: "2",\n      name: "Música para Trabajar",\n      description: "Concentración y productividad",\n      image: "https://picsum.photos/400/400?random=2",\n      songCount: 42,\n      createdAt: new Date(),\n    },\n    {\n      id: "3",\n      name: "Road Trip Vibes",\n      description: "Para esos viajes largos en carretera",\n      image: "https://picsum.photos/400/400?random=3",\n      songCount: 18,\n      createdAt: new Date(),\n    },\n    {\n      id: "4",\n      name: "Chill Evening",\n      description: "Perfecta para las noches tranquilas",\n      image: "https://picsum.photos/400/400?random=4",\n      songCount: 31,\n      createdAt: new Date(),\n    },\n    {\n      id: "5",\n      name: "Workout Energy",\n      description: "Música enérgica para el gimnasio",\n      image: "https://picsum.photos/400/400?random=5",\n      songCount: 20,\n      createdAt: new Date(),\n    },\n    {\n      id: "6",\n      name: "Sunday Morning",\n      description: "Despertar con buena música",\n      image: "https://picsum.photos/400/400?random=6",\n      songCount: 15,\n      createdAt: new Date(),\n    },\n  ];\n\n  // Mock data para artistas\n  mockArtists: Artist[] = [\n    {\n      id: "1",\n      name: "Arctic Monkeys",\n      genre: "Indie Rock",\n      image: "https://picsum.photos/400/400?random=11",\n      followers: "2.4M",\n      isFollowing: true,\n    },\n    {\n      id: "2",\n      name: "Billie Eilish",\n      genre: "Pop Alternativo",\n      image: "https://picsum.photos/400/400?random=12",\n      followers: "8.1M",\n      isFollowing: true,\n    },\n    {\n      id: "3",\n      name: "The Weeknd",\n      genre: "R&B",\n      image: "https://picsum.photos/400/400?random=13",\n      followers: "6.7M",\n      isFollowing: false,\n    },\n    {\n      id: "4",\n      name: "Tame Impala",\n      genre: "Psychedelic Pop",\n      image: "https://picsum.photos/400/400?random=14",\n      followers: "1.8M",\n      isFollowing: true,\n    },\n    {\n      id: "5",\n      name: "Dua Lipa",\n      genre: "Pop",\n      image: "https://picsum.photos/400/400?random=15",\n      followers: "5.2M",\n      isFollowing: false,\n    },\n  ];\n\n  // Mock data para álbumes\n  mockAlbums: Album[] = [\n    {\n      id: "1",\n      title: "AM",\n      artist: "Arctic Monkeys",\n      year: 2013,\n      image: "https://picsum.photos/400/400?random=21",\n      songCount: 12,\n    },\n    {\n      id: "2",\n      title: "When We All Fall Asleep",\n      artist: "Billie Eilish",\n      year: 2019,\n      image: "https://picsum.photos/400/400?random=22",\n      songCount: 14,\n    },\n    {\n      id: "3",\n      title: "After Hours",\n      artist: "The Weeknd",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=23",\n      songCount: 14,\n    },\n    {\n      id: "4",\n      title: "Currents",\n      artist: "Tame Impala",\n      year: 2015,\n      image: "https://picsum.photos/400/400?random=24",\n      songCount: 13,\n    },\n    {\n      id: "5",\n      title: "Future Nostalgia",\n      artist: "Dua Lipa",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=25",\n      songCount: 11,\n    },\n    {\n      id: "6",\n      title: "Tranquility Base Hotel",\n      artist: "Arctic Monkeys",\n      year: 2018,\n      image: "https://picsum.photos/400/400?random=26",\n      songCount: 11,\n    },\n  ];\n\n  get isEmpty(): boolean {\n    switch (this.activeTab) {\n      case "playlists":\n        return this.mockPlaylists.length === 0;\n      case "artists":\n        return this.mockArtists.length === 0;\n      case "albums":\n        return this.mockAlbums.length === 0;\n      default:\n        return true;\n    }\n  }\n\n  setActiveTab(tab: "playlists" | "artists" | "albums"): void {\n    this.activeTab = tab;\n  }\n\n  createPlaylist(): void {\n    this.showCreateModal = true;\n  }\n\n  closeModal(): void {\n    this.showCreateModal = false;\n    this.resetForm();\n  }\n\n  resetForm(): void {\n    this.newPlaylist = {\n      name: "",\n      description: "",\n      isPrivate: false,\n    };\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n  }\n\n  onImageSelected(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const file = target.files?.[0];\n\n    if (file) {\n      // Validate file type\n      const allowedTypes = [\n        "image/jpeg",\n        "image/png",\n        "image/gif",\n        "image/webp",\n      ];\n      if (!allowedTypes.includes(file.type)) {\n        alert("Por favor selecciona una imagen válida (JPEG, PNG, GIF, WebP)");\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        alert("La imagen es demasiado grande. El tamaño máximo es 5MB");\n        return;\n      }\n\n      this.selectedImageFile = file;\n\n      // Create preview URL\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePreviewUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  removeImage(): void {\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n\n    // Clear the input\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    if (input) {\n      input.value = "";\n    }\n  }\n\n  triggerImageUpload(): void {\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    input?.click();\n  }\n\n  savePlaylist(): void {\n    if (!this.newPlaylist.name.trim()) {\n      return;\n    }\n\n    // Use the selected image or a default placeholder\n    const playlistImage =\n      this.imagePreviewUrl ||\n      "https://picsum.photos/400/400?random=" + Date.now();\n\n    const newPlaylist: Playlist = {\n      id: Date.now().toString(),\n      name: this.newPlaylist.name.trim(),\n      description: this.newPlaylist.description.trim(),\n      image: playlistImage,\n      songCount: 0,\n      createdAt: new Date(),\n    };\n\n    this.mockPlaylists.unshift(newPlaylist);\n    this.closeModal();\n  }\n\n  onModalBackdropClick(event: Event): void {\n    if (event.target === event.currentTarget) {\n      this.closeModal();\n    }\n  }\n\n  playPlaylist(playlist: Playlist): void {\n    // Navegar a la vista individual de la playlist\n    this.router.navigate(["/playlist", playlist.id]);\n  }\n\n  startPlayingPlaylist(playlist: Playlist, event: Event): void {\n    // Prevenir que se navegue cuando se hace click en el botón de play\n    event.stopPropagation();\n    // Aquí iría la lógica para empezar a reproducir la playlist\n    console.log("Reproduciendo playlist:", playlist.name);\n  }\n\n  playAlbum(album: Album): void {\n    console.log("Reproducir álbum:", album.title);\n  }\n\n  viewArtist(artist: Artist): void {\n    // Navegar a la vista individual del artista\n    this.router.navigate(["/artist", artist.id]);\n  }\n\n  toggleFollowArtist(artist: Artist): void {\n    artist.isFollowing = !artist.isFollowing;\n    console.log(\n      artist.isFollowing ? "Siguiendo" : "Dejando de seguir",\n      artist.name,\n    );\n  }\n\n  exploreMusic(): void {\n    console.log("Explorar música");\n  }\n\n  // Métodos para manejo de eventos de teclado\n  onKeyDown(event: KeyboardEvent, action: () => void): void {\n    if (event.key === "Enter" || event.key === " ") {\n      event.preventDefault();\n      action();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/ApiResponse.html": {
      url: "interfaces/ApiResponse.html",
      title: "interface - ApiResponse",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/ApiService.html": {
      url: "injectables/ApiService.html",
      title: "injectable - ApiService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getFullUrl\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                getPaginated\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:173\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        DELETE request - Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string, params?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        GET request - Adaptado para Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullUrl\n                        \n                    \n                \n            \n            \n                \ngetFullUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Obtener la URL completa para debug\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Headers por defecto para las peticiones\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(endpoint: string, params?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:92\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        GET request para respuestas paginadas - Django REST Framework formato\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Manejar errores de la API\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patch\n                        \n                    \n                \n            \n            \n                \npatch(endpoint: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:162\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        PATCH request - Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:140\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        POST request - Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:151\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        PUT request - Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(endpoint: string, file: File, additionalData?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api.service.ts:184\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Upload de archivos - Django REST Framework\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                additionalData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { HttpClient, HttpHeaders, HttpParams } from "@angular/common/http";\nimport { Observable, throwError } from "rxjs";\nimport { catchError, map } from "rxjs/operators";\nimport { environment } from "../../environments/environment";\nimport { ApiResponse, PaginatedResponse } from "../models";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class ApiService {\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Obtener la URL completa para debug\n   */\n  getFullUrl(endpoint: string): string {\n    return `${this.baseUrl}${endpoint}`;\n  }\n\n  /**\n   * Headers por defecto para las peticiones\n   */\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      "Content-Type": "application/json",\n    });\n    // El token se agrega automáticamente via AuthTokenInterceptor\n  }\n\n  /**\n   * Manejar errores de la API\n   */\n  private handleError(error: any): Observable {\n    console.error("API Error:", error);\n\n    let errorMessage = "Ha ocurrido un error inesperado";\n\n    if (error.error?.message) {\n      errorMessage = error.error.message;\n    } else if (error.error?.errors && Array.isArray(error.error.errors)) {\n      errorMessage = error.error.errors.join(", ");\n    } else if (error.message) {\n      errorMessage = error.message;\n    } else if (error.status) {\n      switch (error.status) {\n        case 0:\n          errorMessage =\n            "No se puede conectar al servidor. Verifica que el backend esté ejecutándose.";\n          break;\n        case 404:\n          errorMessage = "Endpoint no encontrado";\n          break;\n        case 500:\n          errorMessage = "Error interno del servidor";\n          break;\n        default:\n          errorMessage = `Error ${error.status}: ${error.statusText || "Error desconocido"}`;\n      }\n    }\n\n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * GET request - Adaptado para Django REST Framework\n   */\n  get(endpoint: string, params?: any): Observable {\n    let httpParams = new HttpParams();\n\n    if (params) {\n      Object.keys(params).forEach((key) => {\n        if (params[key] !== null && params[key] !== undefined) {\n          httpParams = httpParams.set(key, params[key].toString());\n        }\n      });\n    }\n\n    return this.http\n      .get(`${this.baseUrl}${endpoint}`, {\n        headers: this.getHeaders(),\n        params: httpParams,\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * GET request para respuestas paginadas - Django REST Framework formato\n   */\n  getPaginated(\n    endpoint: string,\n    params?: any,\n  ): Observable> {\n    let httpParams = new HttpParams();\n\n    if (params) {\n      Object.keys(params).forEach((key) => {\n        if (params[key] !== null && params[key] !== undefined) {\n          httpParams = httpParams.set(key, params[key].toString());\n        }\n      });\n    }\n\n    return this.http\n      .get(`${this.baseUrl}${endpoint}`, {\n        headers: this.getHeaders(),\n        params: httpParams,\n      })\n      .pipe(\n        map((response) => {\n          // Adaptار formato de paginación de Django REST Framework\n          if (response.results) {\n            return {\n              success: true,\n              data: response.results,\n              pagination: {\n                page:\n                  Math.ceil(\n                    (response.previous\n                      ? response.count - response.results.length\n                      : 0) / response.results.length,\n                  ) + 1,\n                limit: response.results.length,\n                total: response.count,\n                totalPages: Math.ceil(response.count / response.results.length),\n              },\n            };\n          }\n          return response;\n        }),\n        catchError(this.handleError),\n      );\n  }\n\n  /**\n   * POST request - Django REST Framework\n   */\n  post(endpoint: string, data: any): Observable {\n    return this.http\n      .post(`${this.baseUrl}${endpoint}`, data, {\n        headers: this.getHeaders(),\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * PUT request - Django REST Framework\n   */\n  put(endpoint: string, data: any): Observable {\n    return this.http\n      .put(`${this.baseUrl}${endpoint}`, data, {\n        headers: this.getHeaders(),\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * PATCH request - Django REST Framework\n   */\n  patch(endpoint: string, data: any): Observable {\n    return this.http\n      .patch(`${this.baseUrl}${endpoint}`, data, {\n        headers: this.getHeaders(),\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * DELETE request - Django REST Framework\n   */\n  delete(endpoint: string): Observable {\n    return this.http\n      .delete(`${this.baseUrl}${endpoint}`, {\n        headers: this.getHeaders(),\n      })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Upload de archivos - Django REST Framework\n   */\n  upload(endpoint: string, file: File, additionalData?: any): Observable {\n    const formData = new FormData();\n    formData.append("file", file);\n\n    if (additionalData) {\n      Object.keys(additionalData).forEach((key) => {\n        formData.append(key, additionalData[key]);\n      });\n    }\n\n    let headers = new HttpHeaders();\n    const token = localStorage.getItem("authToken");\n    if (token) {\n      headers = headers.set("Authorization", `Bearer ${token}`);\n    }\n    // No agregar Content-Type para FormData, el browser lo hace automáticamente\n\n    return this.http\n      .post(`${this.baseUrl}${endpoint}`, formData, {\n        headers,\n      })\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/ApiService-1.html": {
      url: "injectables/ApiService-1.html",
      title: "injectable - ApiService-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/api-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getWithSignal\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/services/api-service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/api-service.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWithSignal\n                        \n                    \n                \n            \n            \n                \ngetWithSignal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/api-service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(url: string, body)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/api-service.ts:17\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(url: string, body)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/api-service.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, httpResource } from "@angular/common/http";\nimport { Injectable } from "@angular/core";\nimport { environment } from "../../../environments/environment";\n\n@Injectable({ providedIn: "root" })\nexport class ApiService {\n  constructor(private readonly http: HttpClient) {}\n\n  get(url: string) {\n    return this.http.get(environment.API_URL + url);\n  }\n\n  getWithSignal(url: string) {\n    return httpResource(() => environment.API_URL + url);\n  }\n\n  post(url: string, body: unknown) {\n    return this.http.post(environment.API_URL + url, body);\n  }\n\n  put(url: string, body: unknown) {\n    return this.http.put(environment.API_URL + url, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/App.html": {
      url: "components/App.html",
      title: "component - App",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                AsideMenu\n                                Player\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLayout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSessionUseCase: AuthSessionUseCase)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSessionUseCase\n                                                  \n                                                        \n                                                                        AuthSessionUseCase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLayout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, RouterOutlet, NavigationEnd } from '@angular/router';\nimport { AuthSessionUseCase } from '@app/domain/usecases/auth-session.usecase';\nimport { AsideMenu } from './components/aside-menu/aside-menu';\nimport { Player } from './components/player/player';\nimport { CommonModule } from '@angular/common';\nimport { filter } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, AsideMenu, Player, CommonModule],\n  templateUrl: './app.html',\n  styleUrl: './app.css',\n})\nexport class App implements OnInit {\n  showLayout = true;\n\n  constructor(\n    private readonly router: Router,\n    private readonly authSessionUseCase: AuthSessionUseCase\n  ) {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        // Hide layout for login, register and current song pages\n        this.showLayout =\n          !event.url.includes('/login') &&\n          !event.url.includes('/register') &&\n          !event.url.includes('/currentSong');\n      });\n  }\n\n  ngOnInit() {\n    this.authSessionUseCase.initSession();\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n          \n        \n        StreamFlow\n      \n      \n        \n          Inicio\n          Explorar\n        \n      \n    \n  \n\n  \n  \n    \n    \n      \n    \n\n    \n      \n    \n  \n\n  \n  \n    \n  \n\n  \n  \n    \n      \n        \n          \n            \n          \n        \n        Inicio\n      \n\n      \n        \n          \n            \n          \n        \n        Buscar\n      \n\n      \n        \n          \n            \n          \n        \n        Explorar\n      \n\n      \n        \n          \n            \n          \n        \n        Biblioteca\n      \n    \n  \n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      StreamFlow                              Inicio          Explorar                                                                                                                                          Inicio                                                                    Buscar                                                                    Explorar                                                                    Biblioteca              '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Artist.html": {
      url: "interfaces/Artist.html",
      title: "interface - Artist",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Artist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            followers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            genres\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Artist-1.html": {
      url: "interfaces/Artist-1.html",
      title: "interface - Artist-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Artist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/artist/artist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeYears\n                                        \n                                \n                                \n                                        \n                                            albums\n                                        \n                                \n                                \n                                        \n                                            awards\n                                        \n                                \n                                \n                                        \n                                            biography\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            gradient\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            monthlyListeners\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            popularSongs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeYears\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeYears:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albums\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albums:     Album[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Album[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        awards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        awards:         Award[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Award[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biography\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biography:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradient:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        monthlyListeners\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monthlyListeners:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popularSongs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popularSongs:     Song[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ChangeDetectorRef } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { ActivatedRoute } from "@angular/router";\n\ninterface Song {\n  title: string;\n  album: string;\n  duration: string;\n}\n\ninterface Album {\n  title: string;\n  year: string;\n  tracks: number;\n  cover: string;\n}\n\ninterface Award {\n  name: string;\n  year: string;\n  category: string;\n}\n\ninterface Artist {\n  id: number;\n  name: string;\n  genre: string;\n  image: string;\n  gradient: string;\n  monthlyListeners: string;\n  followers: string;\n  activeYears: string;\n  biography: string;\n  popularSongs: Song[];\n  albums: Album[];\n  awards: Award[];\n}\n\n@Component({\n  selector: "app-artist",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./artist.html",\n  styleUrls: ["./artist.css"],\n})\nexport class ArtistComponent implements OnInit {\n  artistId: string | null = null;\n  artist: Artist | null = null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get("id");\n    if (this.artistId === "1") {\n      this.loadGorillazData();\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\n      "Imagen cargada:",\n      img.src,\n      "Dimensiones:",\n      img.width,\n      "x",\n      img.height,\n    );\n\n    // Pequeño delay para asegurar que la imagen está completamente cargada\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar la imagen:", event);\n    this.applyFallbackGradient();\n  }\n\n  testDifferentImage() {\n    const testImages = [\n      "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop", // Original\n      "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=400&h=400&fit=crop", // Azul/morado\n      "https://images.unsplash.com/photo-1511379938547-c1f69419868d?w=400&h=400&fit=crop", // Rojizo\n      "https://images.unsplash.com/photo-1446057032654-9d8885db76c6?w=400&h=400&fit=crop", // Verde\n    ];\n\n    const currentIndex = testImages.indexOf(this.artist!.image);\n    const nextIndex = (currentIndex + 1) % testImages.length;\n\n    console.log("🎨 Cambiando a imagen:", testImages[nextIndex]);\n    this.artist!.image = testImages[nextIndex];\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    try {\n      console.log("Iniciando extracción de colores...");\n\n      const canvas = document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      // Reducir el tamaño para análisis más rápido\n      const analysisSize = 200;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      // Configurar CORS para imágenes externas\n      img.crossOrigin = "anonymous";\n\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      // Extraer colores de diferentes puntos de la imagen\n      const colors = [];\n      const samples = 50; // Más muestras para mejor análisis\n\n      for (let i = 0; i  200 && r + g + b > 60 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        console.log("Color dominante:", dominantColor);\n\n        const gradient = this.generateGradient(dominantColor);\n        console.log("Gradiente generado:", gradient);\n\n        if (this.artist) {\n          this.artist.gradient = gradient;\n          console.log("Gradiente aplicado al artista");\n          // Forzar detección de cambios\n          this.cdr.detectChanges();\n        }\n      } else {\n        console.warn("No se encontraron colores válidos en la imagen");\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores de la imagen:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.artist) {\n      this.artist.gradient =\n        "linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)";\n      console.log("Aplicado gradiente de fallback");\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    // Agrupar colores similares y encontrar el más común\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      // Reducir la precisión del color para agrupar similares\n      const key = `${Math.floor(color.r / 20) * 20}-${Math.floor(color.g / 20) * 20}-${Math.floor(color.b / 20) * 20}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    // Encontrar el grupo con más colores\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    // Crear variaciones del color dominante\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n    // Color más oscuro para el gradiente\n    const darkerColor = `rgb(${Math.max(0, color.r - 60)}, ${Math.max(0, color.g - 60)}, ${Math.max(0, color.b - 60)})`;\n\n    // Color más claro para el gradiente\n    const lighterColor = `rgb(${Math.min(255, color.r + 40)}, ${Math.min(255, color.g + 40)}, ${Math.min(255, color.b + 40)})`;\n\n    // Determinar si el color es muy oscuro o muy claro para ajustar la dirección\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  200) {\n      // Color claro - gradiente hacia más oscuro\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      // Color medio - gradiente en ambas direcciones\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadGorillazData() {\n    this.artist = {\n      id: 1,\n      name: "Gorillaz",\n      genre: "Alternative Rock, Electronic, Hip Hop",\n      image: "/assets/gorillaz2.jpg", // Imagen de prueba\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)", // Gradiente inicial que será reemplazado\n      monthlyListeners: "45.2M",\n      followers: "12.8M",\n      activeYears: "1998 - presente",\n      biography: `Gorillaz es una banda virtual británica creada en 1998 por Damon Albarn y Jamie Hewlett. La banda está compuesta por cuatro miembros ficticios animados: 2-D (vocalista, teclados), Murdoc Niccals (bajo), Noodle (guitarra, teclados, voz ocasional) y Russel Hobbs (batería). Gorillaz ha sido aclamado como uno de los proyectos musicales más innovadores y exitosos del siglo XXI, combinando elementos de rock alternativo, hip hop, electrónica y pop.\n\nEl concepto único de la banda como un grupo completamente virtual, con personajes animados que tienen sus propias personalidades y trasfondos elaborados, fue revolucionario en la industria musical. A lo largo de su carrera, Gorillaz ha colaborado con una amplia gama de artistas, desde De La Soul y Del the Funky Homosapien hasta Elton John y Beck, creando un sonido ecléctico que trasciende géneros musicales.\n\nLa banda ha lanzado múltiples álbumes exitosos, incluyendo su álbum debut homónimo (2001), "Demon Days" (2005), "Plastic Beach" (2010), "Humanz" (2017), "The Now Now" (2018), "Song Machine" (2020) y "Cracker Island" (2023). Sus videos musicales y presentaciones en vivo utilizan tecnología de vanguardia para dar vida a los personajes animados, creando experiencias visuales únicas.`,\n      popularSongs: [\n        { title: "Feel Good Inc.", album: "Demon Days", duration: "3:41" },\n        { title: "Clint Eastwood", album: "Gorillaz", duration: "5:41" },\n        {\n          title: "On Melancholy Hill",\n          album: "Plastic Beach",\n          duration: "3:53",\n        },\n        { title: "Saturnz Barz", album: "Humanz", duration: "3:58" },\n        { title: "Humility", album: "The Now Now", duration: "3:01" },\n        { title: "Dirty Harry", album: "Demon Days", duration: "3:43" },\n        { title: "Stylo", album: "Plastic Beach", duration: "4:30" },\n        { title: "Tranz", album: "The Now Now", duration: "2:42" },\n        { title: "Cracker Island", album: "Cracker Island", duration: "3:42" },\n        { title: "19-2000", album: "Gorillaz", duration: "3:27" },\n      ],\n      albums: [\n        {\n          title: "Gorillaz",\n          year: "2001",\n          tracks: 15,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Demon Days",\n          year: "2005",\n          tracks: 15,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Plastic Beach",\n          year: "2010",\n          tracks: 16,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n        {\n          title: "Humanz",\n          year: "2017",\n          tracks: 20,\n          cover: "/assets/playlists/playlist4.jpg",\n        },\n        {\n          title: "The Now Now",\n          year: "2018",\n          tracks: 11,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Song Machine, Season One",\n          year: "2020",\n          tracks: 17,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Cracker Island",\n          year: "2023",\n          tracks: 10,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n      ],\n      awards: [\n        {\n          name: "Grammy Award",\n          year: "2006",\n          category: "Best Pop Collaboration with Vocals - Feel Good Inc.",\n        },\n        { name: "BRIT Award", year: "2006", category: "Best British Group" },\n        {\n          name: "MTV Video Music Award",\n          year: "2005",\n          category: "Best Group Video - Feel Good Inc.",\n        },\n        {\n          name: "Q Award",\n          year: "2005",\n          category: "Best Video - Feel Good Inc.",\n        },\n        {\n          name: "Ivor Novello Award",\n          year: "2002",\n          category: "Best Contemporary Song - Clint Eastwood",\n        },\n        { name: "NME Award", year: "2006", category: "Best Band" },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Artist-2.html": {
      url: "interfaces/Artist-2.html",
      title: "interface - Artist-2",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Artist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/library/library.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            isFollowing\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFollowing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { Router } from "@angular/router";\n\ninterface Playlist {\n  id: string;\n  name: string;\n  description: string;\n  image: string;\n  songCount: number;\n  createdAt: Date;\n}\n\ninterface Artist {\n  id: string;\n  name: string;\n  genre: string;\n  image: string;\n  followers: string;\n  isFollowing: boolean;\n}\n\ninterface Album {\n  id: string;\n  title: string;\n  artist: string;\n  year: number;\n  image: string;\n  songCount: number;\n}\n\n@Component({\n  selector: "app-library",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: "./library.html",\n  styleUrl: "./library.css",\n})\nexport class LibraryComponent {\n  activeTab: "playlists" | "artists" | "albums" = "playlists";\n\n  // Modal state\n  showCreateModal = false;\n\n  // Image upload state\n  selectedImageFile: File | null = null;\n  imagePreviewUrl: string | null = null;\n\n  // Form data for new playlist\n  newPlaylist = {\n    name: "",\n    description: "",\n    isPrivate: false,\n  };\n\n  constructor(private readonly router: Router) {}\n\n  // Mock data para playlists\n  mockPlaylists: Playlist[] = [\n    {\n      id: "1",\n      name: "Mi Playlist Favorita",\n      description: "Las mejores canciones para relajarse",\n      image: "https://picsum.photos/400/400?random=1",\n      songCount: 25,\n      createdAt: new Date(),\n    },\n    {\n      id: "2",\n      name: "Música para Trabajar",\n      description: "Concentración y productividad",\n      image: "https://picsum.photos/400/400?random=2",\n      songCount: 42,\n      createdAt: new Date(),\n    },\n    {\n      id: "3",\n      name: "Road Trip Vibes",\n      description: "Para esos viajes largos en carretera",\n      image: "https://picsum.photos/400/400?random=3",\n      songCount: 18,\n      createdAt: new Date(),\n    },\n    {\n      id: "4",\n      name: "Chill Evening",\n      description: "Perfecta para las noches tranquilas",\n      image: "https://picsum.photos/400/400?random=4",\n      songCount: 31,\n      createdAt: new Date(),\n    },\n    {\n      id: "5",\n      name: "Workout Energy",\n      description: "Música enérgica para el gimnasio",\n      image: "https://picsum.photos/400/400?random=5",\n      songCount: 20,\n      createdAt: new Date(),\n    },\n    {\n      id: "6",\n      name: "Sunday Morning",\n      description: "Despertar con buena música",\n      image: "https://picsum.photos/400/400?random=6",\n      songCount: 15,\n      createdAt: new Date(),\n    },\n  ];\n\n  // Mock data para artistas\n  mockArtists: Artist[] = [\n    {\n      id: "1",\n      name: "Arctic Monkeys",\n      genre: "Indie Rock",\n      image: "https://picsum.photos/400/400?random=11",\n      followers: "2.4M",\n      isFollowing: true,\n    },\n    {\n      id: "2",\n      name: "Billie Eilish",\n      genre: "Pop Alternativo",\n      image: "https://picsum.photos/400/400?random=12",\n      followers: "8.1M",\n      isFollowing: true,\n    },\n    {\n      id: "3",\n      name: "The Weeknd",\n      genre: "R&B",\n      image: "https://picsum.photos/400/400?random=13",\n      followers: "6.7M",\n      isFollowing: false,\n    },\n    {\n      id: "4",\n      name: "Tame Impala",\n      genre: "Psychedelic Pop",\n      image: "https://picsum.photos/400/400?random=14",\n      followers: "1.8M",\n      isFollowing: true,\n    },\n    {\n      id: "5",\n      name: "Dua Lipa",\n      genre: "Pop",\n      image: "https://picsum.photos/400/400?random=15",\n      followers: "5.2M",\n      isFollowing: false,\n    },\n  ];\n\n  // Mock data para álbumes\n  mockAlbums: Album[] = [\n    {\n      id: "1",\n      title: "AM",\n      artist: "Arctic Monkeys",\n      year: 2013,\n      image: "https://picsum.photos/400/400?random=21",\n      songCount: 12,\n    },\n    {\n      id: "2",\n      title: "When We All Fall Asleep",\n      artist: "Billie Eilish",\n      year: 2019,\n      image: "https://picsum.photos/400/400?random=22",\n      songCount: 14,\n    },\n    {\n      id: "3",\n      title: "After Hours",\n      artist: "The Weeknd",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=23",\n      songCount: 14,\n    },\n    {\n      id: "4",\n      title: "Currents",\n      artist: "Tame Impala",\n      year: 2015,\n      image: "https://picsum.photos/400/400?random=24",\n      songCount: 13,\n    },\n    {\n      id: "5",\n      title: "Future Nostalgia",\n      artist: "Dua Lipa",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=25",\n      songCount: 11,\n    },\n    {\n      id: "6",\n      title: "Tranquility Base Hotel",\n      artist: "Arctic Monkeys",\n      year: 2018,\n      image: "https://picsum.photos/400/400?random=26",\n      songCount: 11,\n    },\n  ];\n\n  get isEmpty(): boolean {\n    switch (this.activeTab) {\n      case "playlists":\n        return this.mockPlaylists.length === 0;\n      case "artists":\n        return this.mockArtists.length === 0;\n      case "albums":\n        return this.mockAlbums.length === 0;\n      default:\n        return true;\n    }\n  }\n\n  setActiveTab(tab: "playlists" | "artists" | "albums"): void {\n    this.activeTab = tab;\n  }\n\n  createPlaylist(): void {\n    this.showCreateModal = true;\n  }\n\n  closeModal(): void {\n    this.showCreateModal = false;\n    this.resetForm();\n  }\n\n  resetForm(): void {\n    this.newPlaylist = {\n      name: "",\n      description: "",\n      isPrivate: false,\n    };\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n  }\n\n  onImageSelected(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const file = target.files?.[0];\n\n    if (file) {\n      // Validate file type\n      const allowedTypes = [\n        "image/jpeg",\n        "image/png",\n        "image/gif",\n        "image/webp",\n      ];\n      if (!allowedTypes.includes(file.type)) {\n        alert("Por favor selecciona una imagen válida (JPEG, PNG, GIF, WebP)");\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        alert("La imagen es demasiado grande. El tamaño máximo es 5MB");\n        return;\n      }\n\n      this.selectedImageFile = file;\n\n      // Create preview URL\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePreviewUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  removeImage(): void {\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n\n    // Clear the input\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    if (input) {\n      input.value = "";\n    }\n  }\n\n  triggerImageUpload(): void {\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    input?.click();\n  }\n\n  savePlaylist(): void {\n    if (!this.newPlaylist.name.trim()) {\n      return;\n    }\n\n    // Use the selected image or a default placeholder\n    const playlistImage =\n      this.imagePreviewUrl ||\n      "https://picsum.photos/400/400?random=" + Date.now();\n\n    const newPlaylist: Playlist = {\n      id: Date.now().toString(),\n      name: this.newPlaylist.name.trim(),\n      description: this.newPlaylist.description.trim(),\n      image: playlistImage,\n      songCount: 0,\n      createdAt: new Date(),\n    };\n\n    this.mockPlaylists.unshift(newPlaylist);\n    this.closeModal();\n  }\n\n  onModalBackdropClick(event: Event): void {\n    if (event.target === event.currentTarget) {\n      this.closeModal();\n    }\n  }\n\n  playPlaylist(playlist: Playlist): void {\n    // Navegar a la vista individual de la playlist\n    this.router.navigate(["/playlist", playlist.id]);\n  }\n\n  startPlayingPlaylist(playlist: Playlist, event: Event): void {\n    // Prevenir que se navegue cuando se hace click en el botón de play\n    event.stopPropagation();\n    // Aquí iría la lógica para empezar a reproducir la playlist\n    console.log("Reproduciendo playlist:", playlist.name);\n  }\n\n  playAlbum(album: Album): void {\n    console.log("Reproducir álbum:", album.title);\n  }\n\n  viewArtist(artist: Artist): void {\n    // Navegar a la vista individual del artista\n    this.router.navigate(["/artist", artist.id]);\n  }\n\n  toggleFollowArtist(artist: Artist): void {\n    artist.isFollowing = !artist.isFollowing;\n    console.log(\n      artist.isFollowing ? "Siguiendo" : "Dejando de seguir",\n      artist.name,\n    );\n  }\n\n  exploreMusic(): void {\n    console.log("Explorar música");\n  }\n\n  // Métodos para manejo de eventos de teclado\n  onKeyDown(event: KeyboardEvent, action: () => void): void {\n    if (event.key === "Enter" || event.key === " ") {\n      event.preventDefault();\n      action();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ArtistComponent.html": {
      url: "components/ArtistComponent.html",
      title: "component - ArtistComponent",
      body: '\n                   \n\n\n\n\n\n  Components\n  \n  ArtistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/artist/artist.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-artist\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./artist.css\n            \n\n\n\n            \n                templateUrl\n                ./artist.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artist\n                            \n                            \n                                artistId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFallbackGradient\n                            \n                            \n                                    Private\n                                extractColorsFromImage\n                            \n                            \n                                    Private\n                                findDominantColor\n                            \n                            \n                                    Private\n                                generateGradient\n                            \n                            \n                                    Private\n                                loadGorillazData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageError\n                            \n                            \n                                onImageLoad\n                            \n                            \n                                testDifferentImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/artist/artist.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyFallbackGradient\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFallbackGradient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractColorsFromImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractColorsFromImage(img: HTMLImageElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        HTMLImageElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        findDominantColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDominantColor(colors: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateGradient\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateGradient(color: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadGorillazData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadGorillazData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageError\n                        \n                    \n                \n            \n            \n                \nonImageError(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageLoad\n                        \n                    \n                \n            \n            \n                \nonImageLoad(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testDifferentImage\n                        \n                    \n                \n            \n            \n                \ntestDifferentImage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artist/artist.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Artist | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artist/artist.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        artistId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artist/artist.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { ActivatedRoute } from "@angular/router";\n\ninterface Song {\n  title: string;\n  album: string;\n  duration: string;\n}\n\ninterface Album {\n  title: string;\n  year: string;\n  tracks: number;\n  cover: string;\n}\n\ninterface Award {\n  name: string;\n  year: string;\n  category: string;\n}\n\ninterface Artist {\n  id: number;\n  name: string;\n  genre: string;\n  image: string;\n  gradient: string;\n  monthlyListeners: string;\n  followers: string;\n  activeYears: string;\n  biography: string;\n  popularSongs: Song[];\n  albums: Album[];\n  awards: Award[];\n}\n\n@Component({\n  selector: "app-artist",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./artist.html",\n  styleUrls: ["./artist.css"],\n})\nexport class ArtistComponent implements OnInit {\n  artistId: string | null = null;\n  artist: Artist | null = null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get("id");\n    if (this.artistId === "1") {\n      this.loadGorillazData();\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\n      "Imagen cargada:",\n      img.src,\n      "Dimensiones:",\n      img.width,\n      "x",\n      img.height,\n    );\n\n    // Pequeño delay para asegurar que la imagen está completamente cargada\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar la imagen:", event);\n    this.applyFallbackGradient();\n  }\n\n  testDifferentImage() {\n    const testImages = [\n      "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop", // Original\n      "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=400&h=400&fit=crop", // Azul/morado\n      "https://images.unsplash.com/photo-1511379938547-c1f69419868d?w=400&h=400&fit=crop", // Rojizo\n      "https://images.unsplash.com/photo-1446057032654-9d8885db76c6?w=400&h=400&fit=crop", // Verde\n    ];\n\n    const currentIndex = testImages.indexOf(this.artist!.image);\n    const nextIndex = (currentIndex + 1) % testImages.length;\n\n    console.log("🎨 Cambiando a imagen:", testImages[nextIndex]);\n    this.artist!.image = testImages[nextIndex];\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    try {\n      console.log("Iniciando extracción de colores...");\n\n      const canvas = document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      // Reducir el tamaño para análisis más rápido\n      const analysisSize = 200;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      // Configurar CORS para imágenes externas\n      img.crossOrigin = "anonymous";\n\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      // Extraer colores de diferentes puntos de la imagen\n      const colors = [];\n      const samples = 50; // Más muestras para mejor análisis\n\n      for (let i = 0; i  200 && r + g + b > 60 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        console.log("Color dominante:", dominantColor);\n\n        const gradient = this.generateGradient(dominantColor);\n        console.log("Gradiente generado:", gradient);\n\n        if (this.artist) {\n          this.artist.gradient = gradient;\n          console.log("Gradiente aplicado al artista");\n          // Forzar detección de cambios\n          this.cdr.detectChanges();\n        }\n      } else {\n        console.warn("No se encontraron colores válidos en la imagen");\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores de la imagen:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.artist) {\n      this.artist.gradient =\n        "linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)";\n      console.log("Aplicado gradiente de fallback");\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    // Agrupar colores similares y encontrar el más común\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      // Reducir la precisión del color para agrupar similares\n      const key = `${Math.floor(color.r / 20) * 20}-${Math.floor(color.g / 20) * 20}-${Math.floor(color.b / 20) * 20}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    // Encontrar el grupo con más colores\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    // Crear variaciones del color dominante\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n    // Color más oscuro para el gradiente\n    const darkerColor = `rgb(${Math.max(0, color.r - 60)}, ${Math.max(0, color.g - 60)}, ${Math.max(0, color.b - 60)})`;\n\n    // Color más claro para el gradiente\n    const lighterColor = `rgb(${Math.min(255, color.r + 40)}, ${Math.min(255, color.g + 40)}, ${Math.min(255, color.b + 40)})`;\n\n    // Determinar si el color es muy oscuro o muy claro para ajustar la dirección\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  200) {\n      // Color claro - gradiente hacia más oscuro\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      // Color medio - gradiente en ambas direcciones\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadGorillazData() {\n    this.artist = {\n      id: 1,\n      name: "Gorillaz",\n      genre: "Alternative Rock, Electronic, Hip Hop",\n      image: "/assets/gorillaz2.jpg", // Imagen de prueba\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)", // Gradiente inicial que será reemplazado\n      monthlyListeners: "45.2M",\n      followers: "12.8M",\n      activeYears: "1998 - presente",\n      biography: `Gorillaz es una banda virtual británica creada en 1998 por Damon Albarn y Jamie Hewlett. La banda está compuesta por cuatro miembros ficticios animados: 2-D (vocalista, teclados), Murdoc Niccals (bajo), Noodle (guitarra, teclados, voz ocasional) y Russel Hobbs (batería). Gorillaz ha sido aclamado como uno de los proyectos musicales más innovadores y exitosos del siglo XXI, combinando elementos de rock alternativo, hip hop, electrónica y pop.\n\nEl concepto único de la banda como un grupo completamente virtual, con personajes animados que tienen sus propias personalidades y trasfondos elaborados, fue revolucionario en la industria musical. A lo largo de su carrera, Gorillaz ha colaborado con una amplia gama de artistas, desde De La Soul y Del the Funky Homosapien hasta Elton John y Beck, creando un sonido ecléctico que trasciende géneros musicales.\n\nLa banda ha lanzado múltiples álbumes exitosos, incluyendo su álbum debut homónimo (2001), "Demon Days" (2005), "Plastic Beach" (2010), "Humanz" (2017), "The Now Now" (2018), "Song Machine" (2020) y "Cracker Island" (2023). Sus videos musicales y presentaciones en vivo utilizan tecnología de vanguardia para dar vida a los personajes animados, creando experiencias visuales únicas.`,\n      popularSongs: [\n        { title: "Feel Good Inc.", album: "Demon Days", duration: "3:41" },\n        { title: "Clint Eastwood", album: "Gorillaz", duration: "5:41" },\n        {\n          title: "On Melancholy Hill",\n          album: "Plastic Beach",\n          duration: "3:53",\n        },\n        { title: "Saturnz Barz", album: "Humanz", duration: "3:58" },\n        { title: "Humility", album: "The Now Now", duration: "3:01" },\n        { title: "Dirty Harry", album: "Demon Days", duration: "3:43" },\n        { title: "Stylo", album: "Plastic Beach", duration: "4:30" },\n        { title: "Tranz", album: "The Now Now", duration: "2:42" },\n        { title: "Cracker Island", album: "Cracker Island", duration: "3:42" },\n        { title: "19-2000", album: "Gorillaz", duration: "3:27" },\n      ],\n      albums: [\n        {\n          title: "Gorillaz",\n          year: "2001",\n          tracks: 15,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Demon Days",\n          year: "2005",\n          tracks: 15,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Plastic Beach",\n          year: "2010",\n          tracks: 16,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n        {\n          title: "Humanz",\n          year: "2017",\n          tracks: 20,\n          cover: "/assets/playlists/playlist4.jpg",\n        },\n        {\n          title: "The Now Now",\n          year: "2018",\n          tracks: 11,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Song Machine, Season One",\n          year: "2020",\n          tracks: 17,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Cracker Island",\n          year: "2023",\n          tracks: 10,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n      ],\n      awards: [\n        {\n          name: "Grammy Award",\n          year: "2006",\n          category: "Best Pop Collaboration with Vocals - Feel Good Inc.",\n        },\n        { name: "BRIT Award", year: "2006", category: "Best British Group" },\n        {\n          name: "MTV Video Music Award",\n          year: "2005",\n          category: "Best Group Video - Feel Good Inc.",\n        },\n        {\n          name: "Q Award",\n          year: "2005",\n          category: "Best Video - Feel Good Inc.",\n        },\n        {\n          name: "Ivor Novello Award",\n          year: "2002",\n          category: "Best Contemporary Song - Clint Eastwood",\n        },\n        { name: "NME Award", year: "2006", category: "Best Band" },\n      ],\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n          {{ artist.name }}\n          {{ artist.genre }}\n          \n            {{ artist.monthlyListeners }} oyentes mensuales\n            {{ artist.followers }} seguidores\n            Activo desde {{ artist.activeYears }}\n          \n          \n          \n            🎨 Probar otra imagen\n          \n        \n      \n    \n\n    \n    \n      Biografía\n      {{ artist.biography }}\n    \n  \n\n  \n    \n    \n      Canciones populares\n      \n        \n          {{ i + 1 }}\n          \n            {{ song.title }}\n            {{ song.album }}\n          \n          {{ song.duration }}\n        \n      \n    \n\n    \n    \n      Álbumes\n      \n        \n          \n          {{ album.title }}\n          {{ album.year }}\n          {{ album.tracks }} canciones\n        \n      \n    \n\n    \n     0">\n      Premios y reconocimientos\n      \n        \n          \n            \n            \n              {{ award.name }}\n              {{ award.year }} - {{ award.category }}\n            \n          \n        \n      \n    \n  \n\n  \n  \n    Artista {{ artistId }}\n    Información del artista próximamente\n  \n\n\n    \n\n    \n                \n                    ./artist.css\n                \n                /* Container principal */\n.artist-container {\n  padding: 1.5rem;\n  max-width: 1200px;\n  margin: 0 auto;\n  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n  min-height: 100vh;\n}\n\n/* Header del artista */\n.artist-header {\n  margin-bottom: 2rem;\n}\n\n/* Hero section */\n.artist-hero {\n  position: relative;\n  border-radius: 1rem;\n  overflow: hidden;\n  color: white;\n  padding: 2rem;\n  margin-bottom: 1.5rem;\n  transition: all 1s ease;\n}\n\n.hero-content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 1.5rem;\n}\n\n.artist-image {\n  width: 12rem;\n  height: 12rem;\n  border-radius: 50%;\n  object-fit: cover;\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n}\n\n.artist-info {\n  flex: 1;\n}\n\n.artist-name {\n  font-size: 3rem;\n  font-weight: 800;\n  margin-bottom: 0.5rem;\n  line-height: 1.1;\n}\n\n.artist-genre {\n  font-size: 1.25rem;\n  opacity: 0.9;\n  margin-bottom: 1rem;\n}\n\n.artist-stats {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  font-size: 0.875rem;\n  opacity: 0.8;\n  margin-bottom: 1rem;\n}\n\n.test-button {\n  margin-top: 1rem;\n  padding: 0.75rem 1rem;\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 0.5rem;\n  color: white;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.test-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n/* Biografía */\n.artist-bio {\n  background: white;\n  border-radius: 0.75rem;\n  padding: 1.5rem;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n  margin-bottom: 1.5rem;\n}\n\n.artist-bio h2 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.artist-bio p {\n  color: #374151;\n  line-height: 1.6;\n  margin: 0;\n}\n\n/* Contenido del artista */\n.artist-content {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.artist-content section h2 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n/* Canciones populares */\n.popular-songs {\n  margin-bottom: 2rem;\n}\n\n.songs-container {\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n  overflow: hidden;\n}\n\n.song-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #f3f4f6;\n  transition: background-color 0.2s ease;\n}\n\n.song-item:hover {\n  background: #f9fafb;\n}\n\n.song-item:last-child {\n  border-bottom: none;\n}\n\n.song-number {\n  color: #6b7280;\n  width: 2rem;\n  text-align: center;\n  font-weight: 500;\n}\n\n.song-details {\n  flex: 1;\n  margin-left: 1rem;\n}\n\n.song-details h3 {\n  font-weight: 500;\n  color: #1f2937;\n  margin: 0 0 0.25rem 0;\n}\n\n.song-details p {\n  font-size: 0.875rem;\n  color: #6b7280;\n  margin: 0;\n}\n\n.song-duration {\n  font-size: 0.875rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n/* Álbumes */\n.albums {\n  margin-bottom: 2rem;\n}\n\n.albums-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1.5rem;\n}\n\n.album-card {\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n  padding: 1rem;\n  transition: box-shadow 0.2s ease;\n}\n\n.album-card:hover {\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n}\n\n.album-cover {\n  width: 100%;\n  aspect-ratio: 1;\n  object-fit: cover;\n  border-radius: 0.5rem;\n  margin-bottom: 0.75rem;\n}\n\n.album-card h3 {\n  font-weight: 600;\n  margin-bottom: 0.25rem;\n  color: #1f2937;\n}\n\n.album-year {\n  font-size: 0.875rem;\n  color: #6b7280;\n  margin-bottom: 0.25rem;\n}\n\n.album-tracks {\n  font-size: 0.75rem;\n  color: #9ca3af;\n  margin: 0;\n}\n\n/* Premios */\n.awards {\n  margin-bottom: 2rem;\n}\n\n.awards-container {\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n  padding: 1.5rem;\n}\n\n.awards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n}\n\n.award-item {\n  display: flex;\n  align-items: center;\n  padding: 0.75rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n}\n\n.award-icon {\n  width: 0.5rem;\n  height: 0.5rem;\n  background: #eab308;\n  border-radius: 50%;\n  margin-right: 0.75rem;\n  flex-shrink: 0;\n}\n\n.award-details h4 {\n  font-weight: 500;\n  color: #1f2937;\n  margin: 0 0 0.25rem 0;\n}\n\n.award-details p {\n  font-size: 0.875rem;\n  color: #6b7280;\n  margin: 0;\n}\n\n/* Vista por defecto */\n.default-view {\n  text-align: center;\n  padding: 3rem 0;\n}\n\n.default-view h1 {\n  font-size: 2.5rem;\n  font-weight: 800;\n  margin-bottom: 0.5rem;\n  color: #1f2937;\n}\n\n.default-view p {\n  color: #6b7280;\n  font-size: 1.125rem;\n}\n\n/* Responsive */\n@media (min-width: 768px) {\n  .hero-content {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n  .artist-name {\n    font-size: 3.5rem;\n  }\n\n  .albums-grid {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  }\n}\n\n@media (max-width: 640px) {\n  .artist-container {\n    padding: 1rem;\n  }\n\n  .artist-hero {\n    padding: 1.5rem;\n  }\n\n  .artist-image {\n    width: 8rem;\n    height: 8rem;\n  }\n\n  .artist-name {\n    font-size: 2rem;\n  }\n\n  .artist-genre {\n    font-size: 1rem;\n  }\n\n  .artist-stats {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .albums-grid {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    gap: 1rem;\n  }\n\n  .awards-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = \'                                          {{ artist.name }}          {{ artist.genre }}                      {{ artist.monthlyListeners }} oyentes mensuales            {{ artist.followers }} seguidores            Activo desde {{ artist.activeYears }}                                          🎨 Probar otra imagen                                          Biografía      {{ artist.biography }}                      Canciones populares                        {{ i + 1 }}                      {{ song.title }}            {{ song.album }}                    {{ song.duration }}                                Álbumes                                  {{ album.title }}          {{ album.year }}          {{ album.tracks }} canciones                           0">      Premios y reconocimientos                                                              {{ award.name }}              {{ award.year }} - {{ award.category }}                                                  Artista {{ artistId }}    Información del artista próximamente  \'\n    var COMPONENTS = [{\'name\': \'App\', \'selector\': \'app-root\'},{\'name\': \'ArtistComponent\', \'selector\': \'app-artist\'},{\'name\': \'AsideMenu\', \'selector\': \'app-aside-menu\'},{\'name\': \'Card\', \'selector\': \'app-card\'},{\'name\': \'CardPlayButton\', \'selector\': \'app-card-play-button\'},{\'name\': \'ConnectionTestComponent\', \'selector\': \'app-connection-test\'},{\'name\': \'CurrentSongComponent\', \'selector\': \'app-current-song\'},{\'name\': \'ExploreComponent\', \'selector\': \'app-explore\'},{\'name\': \'Greeting\', \'selector\': \'app-greeting\'},{\'name\': \'HomeComponent\', \'selector\': \'app-home\'},{\'name\': \'LibraryComponent\', \'selector\': \'app-library\'},{\'name\': \'LoginComponent\', \'selector\': \'app-login\'},{\'name\': \'MusicsTable\', \'selector\': \'app-musics-table\'},{\'name\': \'MusicsTablePlay\', \'selector\': \'app-musics-table-play\'},{\'name\': \'Player\', \'selector\': \'app-player\'},{\'name\': \'PlayerControlButtonBar\', \'selector\': \'app-player-control-button-bar\'},{\'name\': \'PlayerCurrentSong\', \'selector\': \'app-player-current-song\'},{\'name\': \'PlayerSoundControl\', \'selector\': \'app-player-sound-control\'},{\'name\': \'PlayerVolumeControl\', \'selector\': \'app-player-volume-control\'},{\'name\': \'PlaylistComponent\', \'selector\': \'app-playlist\'},{\'name\': \'PlayListItemCard\', \'selector\': \'app-play-list-item-card\'},{\'name\': \'RegisterComponent\', \'selector\': \'app-register\'},{\'name\': \'ResetPasswordComponent\', \'selector\': \'app-reset-password\'},{\'name\': \'SearchComponent\', \'selector\': \'app-search\'},{\'name\': \'SideMenuCard\', \'selector\': \'app-side-menu-card\'},{\'name\': \'SideMenuItem\', \'selector\': \'app-side-menu-item\'},{\'name\': \'UserPerfilComponent\', \'selector\': \'app-user-perfil\'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {\'name\': \'ArtistComponent\'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/ArtistService.html": {
      url: "injectables/ArtistService.html",
      title: "injectable - ArtistService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArtistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/artist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createArtistProfile\n                            \n                            \n                                followArtist\n                            \n                            \n                                getArtistAlbums\n                            \n                            \n                                getArtistById\n                            \n                            \n                                getArtists\n                            \n                            \n                                getArtistsByGenre\n                            \n                            \n                                getArtistSongs\n                            \n                            \n                                getArtistStats\n                            \n                            \n                                getArtistTopSongs\n                            \n                            \n                                getFollowedArtists\n                            \n                            \n                                getNewArtists\n                            \n                            \n                                getPopularArtists\n                            \n                            \n                                getRecommendedArtists\n                            \n                            \n                                getSimilarArtists\n                            \n                            \n                                isFollowingArtist\n                            \n                            \n                                searchArtists\n                            \n                            \n                                unfollowArtist\n                            \n                            \n                                updateArtistProfile\n                            \n                            \n                                uploadArtistImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/artist.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createArtistProfile\n                        \n                    \n                \n            \n            \n                \ncreateArtistProfile(artistData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:172\n                        \n                    \n\n\n            \n                \n                        Crear perfil de artista (para usuarios que quieren ser artistas)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followArtist\n                        \n                    \n                \n            \n            \n                \nfollowArtist(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Seguir a un artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistAlbums\n                        \n                    \n                \n            \n            \n                \ngetArtistAlbums(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Obtener álbumes de un artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistById\n                        \n                    \n                \n            \n            \n                \ngetArtistById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Obtener un artista por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtists\n                        \n                    \n                \n            \n            \n                \ngetArtists(filters?: SearchFilters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Obtener todos los artistas con filtros opcionales\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            SearchFilters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistsByGenre\n                        \n                    \n                \n            \n            \n                \ngetArtistsByGenre(genre: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Obtener artistas por género\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genre\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistSongs\n                        \n                    \n                \n            \n            \n                \ngetArtistSongs(artistId: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Obtener canciones de un artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistStats\n                        \n                    \n                \n            \n            \n                \ngetArtistStats(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Obtener estadísticas del artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistTopSongs\n                        \n                    \n                \n            \n            \n                \ngetArtistTopSongs(artistId: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Obtener canciones top de un artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowedArtists\n                        \n                    \n                \n            \n            \n                \ngetFollowedArtists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Obtener artistas seguidos por el usuario\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewArtists\n                        \n                    \n                \n            \n            \n                \ngetNewArtists(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:218\n                        \n                    \n\n\n            \n                \n                        Obtener nuevos artistas/lanzamientos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPopularArtists\n                        \n                    \n                \n            \n            \n                \ngetPopularArtists(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Obtener artistas populares\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecommendedArtists\n                        \n                    \n                \n            \n            \n                \ngetRecommendedArtists(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:209\n                        \n                    \n\n\n            \n                \n                        Obtener artistas recomendados para el usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSimilarArtists\n                        \n                    \n                \n            \n            \n                \ngetSimilarArtists(artistId: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:138\n                        \n                    \n\n\n            \n                \n                        Obtener artistas similares\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFollowingArtist\n                        \n                    \n                \n            \n            \n                \nisFollowingArtist(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:150\n                        \n                    \n\n\n            \n                \n                        Verificar si el usuario sigue al artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchArtists\n                        \n                    \n                \n            \n            \n                \nsearchArtists(query: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Buscar artistas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollowArtist\n                        \n                    \n                \n            \n            \n                \nunfollowArtist(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Dejar de seguir a un artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateArtistProfile\n                        \n                    \n                \n            \n            \n                \nupdateArtistProfile(artistId: string, artistData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Actualizar perfil de artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                artistData\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadArtistImage\n                        \n                    \n                \n            \n            \n                \nuploadArtistImage(artistId: string, file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/artist.service.ts:199\n                        \n                    \n\n\n            \n                \n                        Subir imagen de perfil del artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "/artists"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/artist.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable } from "rxjs";\nimport { ApiService } from "./api.service";\nimport {\n  Artist,\n  Album,\n  Song,\n  SearchFilters,\n  PaginatedResponse,\n} from "../models";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class ArtistService {\n  private endpoint = "/artists";\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Obtener todos los artistas con filtros opcionales\n   */\n  getArtists(filters?: SearchFilters): Observable> {\n    return this.apiService.getPaginated(this.endpoint, filters);\n  }\n\n  /**\n   * Obtener un artista por ID\n   */\n  getArtistById(id: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Buscar artistas\n   */\n  searchArtists(\n    query: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(`${this.endpoint}/search`, {\n      query,\n      limit: limit || 20,\n      offset: offset || 0,\n    });\n  }\n\n  /**\n   * Obtener artistas populares\n   */\n  getPopularArtists(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/popular`, {\n      limit: limit || 50,\n    });\n  }\n\n  /**\n   * Obtener artistas por género\n   */\n  getArtistsByGenre(\n    genre: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(\n      `${this.endpoint}/genre/${genre}`,\n      {\n        limit: limit || 20,\n        offset: offset || 0,\n      },\n    );\n  }\n\n  /**\n   * Obtener álbumes de un artista\n   */\n  getArtistAlbums(artistId: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${artistId}/albums`);\n  }\n\n  /**\n   * Obtener canciones de un artista\n   */\n  getArtistSongs(\n    artistId: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(\n      `${this.endpoint}/${artistId}/songs`,\n      {\n        limit: limit || 20,\n        offset: offset || 0,\n      },\n    );\n  }\n\n  /**\n   * Obtener canciones top de un artista\n   */\n  getArtistTopSongs(artistId: string, limit?: number): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/${artistId}/top-songs`,\n      {\n        limit: limit || 10,\n      },\n    );\n  }\n\n  /**\n   * Seguir a un artista\n   */\n  followArtist(artistId: string): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/${artistId}/follow`,\n      {},\n    );\n  }\n\n  /**\n   * Dejar de seguir a un artista\n   */\n  unfollowArtist(artistId: string): Observable {\n    return this.apiService.delete(`${this.endpoint}/${artistId}/follow`);\n  }\n\n  /**\n   * Obtener artistas seguidos por el usuario\n   */\n  getFollowedArtists(): Observable {\n    return this.apiService.get(`${this.endpoint}/followed`);\n  }\n\n  /**\n   * Obtener artistas similares\n   */\n  getSimilarArtists(artistId: string, limit?: number): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/${artistId}/similar`,\n      {\n        limit: limit || 10,\n      },\n    );\n  }\n\n  /**\n   * Verificar si el usuario sigue al artista\n   */\n  isFollowingArtist(artistId: string): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/${artistId}/is-following`,\n    );\n  }\n\n  /**\n   * Obtener estadísticas del artista\n   */\n  getArtistStats(artistId: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${artistId}/stats`);\n  }\n\n  /**\n   * Crear perfil de artista (para usuarios que quieren ser artistas)\n   */\n  createArtistProfile(artistData: {\n    name: string;\n    description?: string;\n    genres?: string[];\n  }): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/create-profile`,\n      artistData,\n    );\n  }\n\n  /**\n   * Actualizar perfil de artista\n   */\n  updateArtistProfile(\n    artistId: string,\n    artistData: Partial,\n  ): Observable {\n    return this.apiService.put(\n      `${this.endpoint}/${artistId}`,\n      artistData,\n    );\n  }\n\n  /**\n   * Subir imagen de perfil del artista\n   */\n  uploadArtistImage(artistId: string, file: File): Observable {\n    return this.apiService.upload(\n      `${this.endpoint}/${artistId}/image`,\n      file,\n    );\n  }\n\n  /**\n   * Obtener artistas recomendados para el usuario\n   */\n  getRecommendedArtists(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/recommendations`, {\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Obtener nuevos artistas/lanzamientos\n   */\n  getNewArtists(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/new`, {\n      limit: limit || 20,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/AsideMenu.html": {
      url: "components/AsideMenu.html",
      title: "component - AsideMenu",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  AsideMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/aside-menu/aside-menu.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-aside-menu\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                                SideMenuItem\n                                SideMenuCard\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./aside-menu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                playlists\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ROUTES_CONFIG_AUTH\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/aside-menu/aside-menu.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aside-menu/aside-menu.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.isAuthenticated()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aside-menu/aside-menu.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playlists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, name: 'Liked Songs', cover: '/assets/playlists/playlist1.jpg' },\n    { id: 2, name: 'Daily Mix 1', cover: '/assets/playlists/playlist2.webp' },\n    { id: 3, name: 'Rock Classics', cover: '/assets/playlists/playlist3.jpg' },\n    { id: 4, name: 'Chill Hits', cover: '/assets/playlists/playlist4.jpg' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aside-menu/aside-menu.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ROUTES_CONFIG_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ROUTES_CONFIG_AUTH\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aside-menu/aside-menu.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.user\n                    \n                \n                    \n                        \n                                Defined in src/app/components/aside-menu/aside-menu.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { SideMenuItem } from '../side-menu-item/side-menu-item';\nimport { SideMenuCard } from '../side-menu-card/side-menu-card';\nimport { AuthService } from '@shared/services/auth.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ROUTES_CONFIG_AUTH } from '@app/config/routes-auth.config';\n@Component({\n  selector: 'app-aside-menu',\n  imports: [RouterLink, SideMenuItem, SideMenuCard, MatIconModule],\n  templateUrl: './aside-menu.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AsideMenu {\n  protected readonly ROUTES_CONFIG_AUTH = ROUTES_CONFIG_AUTH;\n  private readonly authService = inject(AuthService);\n  isAuthenticated = this.authService.isAuthenticated();\n  user = this.authService.user;\n\n  async logout() {\n    await this.authService.signOut();\n    window.location.href = '/login';\n  }\n  // Mock data para las playlists\n  playlists = [\n    { id: 1, name: 'Liked Songs', cover: '/assets/playlists/playlist1.jpg' },\n    { id: 2, name: 'Daily Mix 1', cover: '/assets/playlists/playlist2.webp' },\n    { id: 3, name: 'Rock Classics', cover: '/assets/playlists/playlist3.jpg' },\n    { id: 4, name: 'Chill Hits', cover: '/assets/playlists/playlist4.jpg' },\n  ];\n}\n\n    \n\n    \n        \n  \n    \n      \n        home\n        Inicio\n      \n\n      \n        search\n        Buscar\n      \n\n      @if (user()) {\n      \n        person\n        Mi Perfil\n      \n\n      \n        logout\n        Cerrar Sesión\n      \n      } @else {\n      \n        login\n        Iniciar Sesión\n      \n      \n        person_add\n        Registrarse\n      \n      }\n    \n\n    \n      \n        library_music\n        Tu Biblioteca\n      \n      \n        add\n      \n    \n\n    \n      @for (playlist of playlists; track playlist.id) {\n      \n      }\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    home        Inicio                    search        Buscar            @if (user()) {              person        Mi Perfil                    logout        Cerrar Sesión            } @else {              login        Iniciar Sesión                    person_add        Registrarse            }                      library_music        Tu Biblioteca                    add                    @for (playlist of playlists; track playlist.id) {            }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AsideMenu'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/AuthError.html": {
      url: "classes/AuthError.html",
      title: "class - AuthError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, code: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/errors/auth.errors.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/errors/auth.errors.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/AuthRepository.html": {
      url: "classes/AuthRepository.html",
      title: "class - AuthRepository",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/auth.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCurrentUser\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                            \n                                    Abstract\n                                refreshToken\n                            \n                            \n                                    Abstract\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/auth.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/auth.repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/auth.repository.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/auth.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(credentials: RegisterCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/auth.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            RegisterCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from "../entities/user.entity";\nimport { AuthToken } from "../entities/auth-token.entity";\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: AuthToken;\n  needsEmailConfirmation?: boolean;\n}\n\nexport abstract class AuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentUser(): Promise;\n  abstract refreshToken(refreshToken: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/AuthRepositoryImpl.html": {
      url: "injectables/AuthRepositoryImpl.html",
      title: "injectable - AuthRepositoryImpl",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRepositoryImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/repositories/auth-repository-impl.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Private\n                                mapSupabaseSessionToToken\n                            \n                            \n                                    Private\n                                mapSupabaseUserToUser\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/repositories/auth-repository-impl.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:143\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:136\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapSupabaseSessionToToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapSupabaseSessionToToken(session: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/auth-repository-impl.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                session\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AuthToken\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapSupabaseUserToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapSupabaseUserToUser(supabaseUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/auth-repository-impl.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supabaseUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:155\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(credentials: RegisterCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthRepository:64\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            RegisterCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport {\n  LoginCredentials,\n  RegisterCredentials,\n  AuthResult,\n  AuthRepository,\n} from "@app/domain/repositories/auth.repository";\nimport { User } from "@app/domain/entities/user.entity";\nimport { AuthToken } from "@app/domain/entities/auth-token.entity";\nimport { SupabaseService } from "../supabase/supabase.service";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class AuthRepositoryImpl extends AuthRepository {\n  constructor(private readonly supabaseService: SupabaseService) {\n    super();\n  }\n\n  async login(credentials: LoginCredentials): Promise {\n    console.log("Iniciando login para:", credentials.email);\n    \n    const { data, error } =\n      await this.supabaseService.client.auth.signInWithPassword({\n        email: credentials.email,\n        password: credentials.password,\n      });\n\n    console.log("Respuesta de login:", { data, error });\n\n    if (error) {\n      console.error("Error en el login:", error);\n      // Manejo específico de errores comunes\n      if (error.message.includes(\'Invalid login credentials\')) {\n        throw new Error("Email o contraseña incorrectos");\n      }\n      if (error.message.includes(\'Email not confirmed\')) {\n        throw new Error("Tu cuenta no ha sido confirmada. Por favor, revisa tu email y confirma tu cuenta.");\n      }\n      if (error.message.includes(\'Too many requests\')) {\n        throw new Error("Demasiados intentos de inicio de sesión. Espera un momento e intenta de nuevo.");\n      }\n      throw new Error(`Error en el login: ${error.message}`);\n    }\n\n    if (!data.user) {\n      console.error("No se recibieron datos del usuario");\n      throw new Error("Inicio de sesión fallido: No se recibieron datos del usuario");\n    }\n\n    if (!data.session) {\n      console.error("No se recibió sesión");\n      throw new Error("Inicio de sesión fallido: No se pudo crear la sesión");\n    }\n\n    console.log("Login exitoso para usuario:", data.user.id);\n\n    return {\n      user: this.mapSupabaseUserToUser(data.user),\n      token: this.mapSupabaseSessionToToken(data.session),\n    };\n  }\n\n  async register(credentials: RegisterCredentials): Promise {\n    console.log("Iniciando registro para:", credentials.email);\n    \n    // Intentamos registrar al usuario\n    const { data, error } = await this.supabaseService.client.auth.signUp({\n      email: credentials.email,\n      password: credentials.password,\n      options: {\n        data: {\n          name: credentials.name,\n        },\n      },\n    });\n\n    console.log("Respuesta de Supabase:", { data, error });\n\n    if (error) {\n      console.error("Error en el registro:", error);\n      // Manejo específico de errores comunes\n      if (error.message.includes(\'User already registered\') || error.message.includes(\'already registered\')) {\n        throw new Error("Este email ya está registrado. Intenta iniciar sesión o usa otro email.");\n      }\n      if (error.message.includes(\'Password should be at least\')) {\n        throw new Error("La contraseña debe tener al menos 6 caracteres.");\n      }\n      if (error.message.includes(\'Invalid email\')) {\n        throw new Error("El formato del email no es válido.");\n      }\n      throw new Error(`Error en el registro: ${error.message}`);\n    }\n\n    if (!data.user) {\n      console.error("No se recibieron datos del usuario");\n      throw new Error("Registro fallido: No se recibieron datos del usuario");\n    }\n\n    console.log("Usuario creado:", data.user.id);\n    console.log("Sesión:", data.session ? "Sí" : "No");\n\n    // Si hay una sesión, el usuario se registró exitosamente sin confirmación\n    if (data.session) {\n      console.log("Registro exitoso con sesión inmediata");\n      return {\n        user: this.mapSupabaseUserToUser(data.user),\n        token: this.mapSupabaseSessionToToken(data.session),\n      };\n    }\n\n    // Si no hay sesión, intentamos hacer login inmediato\n    // (esto funciona si el usuario ya confirmó el email o si está deshabilitada la confirmación)\n    console.log("Intentando login inmediato después del registro...");\n    \n    try {\n      // Esperamos un poco para que Supabase procese el registro\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const loginResult = await this.login({\n        email: credentials.email,\n        password: credentials.password,\n      });\n      \n      console.log("Login inmediato exitoso");\n      return loginResult;\n    } catch (loginError) {\n      console.log("Login inmediato falló, requiere confirmación de email", loginError);\n      // Si el login falla, significa que realmente se requiere confirmación de email\n      throw new Error(\n        "Registro exitoso. Se ha enviado un email de confirmación a tu correo electrónico. Por favor, confirma tu cuenta e intenta iniciar sesión nuevamente."\n      );\n    }\n  }\n\n  async logout(): Promise {\n    const { error } = await this.supabaseService.client.auth.signOut();\n    if (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async getCurrentUser(): Promise {\n    const {\n      data: { user },\n    } = await this.supabaseService.client.auth.getUser();\n\n    if (!user) {\n      return null;\n    }\n\n    return this.mapSupabaseUserToUser(user);\n  }\n\n  async refreshToken(refreshToken: string): Promise {\n    const { data, error } =\n      await this.supabaseService.client.auth.refreshSession({\n        refresh_token: refreshToken,\n      });\n\n    if (error || !data.session) {\n      throw new Error(error?.message || "Failed to refresh token");\n    }\n\n    return this.mapSupabaseSessionToToken(data.session);\n  }\n\n  private mapSupabaseUserToUser(supabaseUser: any): User {\n    return {\n      id: supabaseUser.id,\n      email: supabaseUser.email || "",\n      name: supabaseUser.user_metadata?.name || supabaseUser.email || "",\n      createdAt: new Date(supabaseUser.created_at),\n      updatedAt: new Date(supabaseUser.updated_at || supabaseUser.created_at),\n    };\n  }\n\n  private mapSupabaseSessionToToken(session: any): AuthToken {\n    return {\n      accessToken: session.access_token,\n      refreshToken: session.refresh_token,\n      expiresAt: new Date(session.expires_at * 1000),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/AuthResponse.html": {
      url: "interfaces/AuthResponse.html",
      title: "interface - AuthResponse",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/AuthResult.html": {
      url: "interfaces/AuthResult.html",
      title: "interface - AuthResult",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            needsEmailConfirmation\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        needsEmailConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsEmailConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         AuthToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthToken\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from "../entities/user.entity";\nimport { AuthToken } from "../entities/auth-token.entity";\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: AuthToken;\n  needsEmailConfirmation?: boolean;\n}\n\nexport abstract class AuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentUser(): Promise;\n  abstract refreshToken(refreshToken: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/AuthResult-1.html": {
      url: "interfaces/AuthResult-1.html",
      title: "interface - AuthResult-1",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: string;\n}\n\nexport interface AuthSession {\n  user: User | null;\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nexport abstract class IAuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentSession(): Promise;\n  abstract refreshSession(): Promise;\n  abstract sendPasswordResetEmail(email: string): Promise;\n  abstract signInWithProvider(provider: 'google' | 'github' | 'facebook' | 'twitter' | 'discord'): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/AuthService.html": {
      url: "injectables/AuthService.html",
      title: "injectable - AuthService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Public\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Private\n                                checkAuthState\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                getAuthToken\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getCurrentUserValue\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isTokenExpired\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                requestPasswordReset\n                            \n                            \n                                resendVerificationEmail\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                setAuthData\n                            \n                            \n                                updateProfile\n                            \n                            \n                                uploadProfileImage\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(passwordData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Cambiar contraseña\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAuthState\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAuthState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAuthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:192\n                        \n                    \n\n\n            \n                \n                        Eliminar cuenta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthToken\n                        \n                    \n                \n            \n            \n                \ngetAuthToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:267\n                        \n                    \n\n\n            \n                \n                        Obtener el token de autenticación\n\n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Obtener perfil del usuario actual\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserValue\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:260\n                        \n                    \n\n\n            \n                \n                        Obtener el usuario actual (síncrono)\n\n\n                        \n                            Returns :     User | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:253\n                        \n                    \n\n\n            \n                \n                        Verificar si el usuario está autenticado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \nisTokenExpired()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:277\n                        \n                    \n\n\n            \n                \n                        Verificar si el token ha expirado\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Iniciar sesión\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Cerrar sesión\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Refrescar token\n\n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Registrarse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \nrequestPasswordReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Solicitar restablecimiento de contraseña\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendVerificationEmail\n                        \n                    \n                \n            \n            \n                \nresendVerificationEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Reenviar email de verificación\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(resetData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Restablecer contraseña\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAuthData(authResponse: AuthResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResponse\n                                            \n                                                            AuthResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(userData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Actualizar perfil del usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadProfileImage\n                        \n                    \n                \n            \n            \n                \nuploadProfileImage(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Subir foto de perfil\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Verificar email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "/auth"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.isLoggedInSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from "@angular/core";\nimport { isPlatformBrowser } from "@angular/common";\nimport { Observable, BehaviorSubject, tap, map } from "rxjs";\nimport { ApiService } from "./api.service";\nimport { User, LoginDto, RegisterDto, AuthResponse } from "../models";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class AuthService {\n  private endpoint = "/auth";\n  private currentUserSubject = new BehaviorSubject(null);\n  private isLoggedInSubject = new BehaviorSubject(false);\n\n  // Observables públicos\n  public currentUser$ = this.currentUserSubject.asObservable();\n  public isLoggedIn$ = this.isLoggedInSubject.asObservable();\n\n  constructor(\n    private apiService: ApiService,\n    @Inject(PLATFORM_ID) private platformId: object,\n  ) {\n    // Verificar si hay un token guardado al inicializar\n    this.checkAuthState();\n  }\n\n  /**\n   * Iniciar sesión\n   */\n  login(credentials: LoginDto): Observable {\n    return this.apiService\n      .post(`${this.endpoint}/login`, credentials)\n      .pipe(\n        tap((response) => {\n          this.setAuthData(response);\n        }),\n      );\n  }\n\n  /**\n   * Registrarse\n   */\n  register(userData: RegisterDto): Observable {\n    return this.apiService\n      .post(`${this.endpoint}/register`, userData)\n      .pipe(\n        tap((response) => {\n          this.setAuthData(response);\n        }),\n      );\n  }\n\n  /**\n   * Cerrar sesión\n   */\n  logout(): Observable {\n    return this.apiService.post(`${this.endpoint}/logout`, {}).pipe(\n      tap(() => {\n        this.clearAuthData();\n      }),\n    );\n  }\n\n  /**\n   * Refrescar token\n   */\n  refreshToken(): Observable {\n    let refreshToken = null;\n    if (isPlatformBrowser(this.platformId)) {\n      refreshToken = localStorage.getItem("refreshToken");\n    }\n    return this.apiService\n      .post(`${this.endpoint}/refresh`, { refreshToken })\n      .pipe(\n        tap((response) => {\n          this.setAuthData(response);\n        }),\n      );\n  }\n\n  /**\n   * Obtener perfil del usuario actual\n   */\n  getCurrentUser(): Observable {\n    return this.apiService\n      .get(`${this.endpoint}/me`)\n      .pipe(\n        map((response: { user: User; message: string }) => {\n          // El backend devuelve { user: {...}, message: "..." }\n          // Extraemos solo el objeto user\n          return response.user;\n        }),\n        tap((user) => {\n          this.currentUserSubject.next(user);\n        }),\n      );\n  }\n\n  /**\n   * Actualizar perfil del usuario\n   */\n  updateProfile(userData: Partial): Observable {\n    return this.apiService\n      .put(`${this.endpoint}/profile`, userData)\n      .pipe(\n        map((response: { user: User; message: string }) => {\n          // El backend devuelve { user: {...}, message: "..." }\n          // Extraemos solo el objeto user\n          return response.user;\n        }),\n        tap((user) => {\n          this.currentUserSubject.next(user);\n        }),\n      );\n  }\n\n  /**\n   * Cambiar contraseña\n   */\n  changePassword(passwordData: {\n    currentPassword: string;\n    newPassword: string;\n    confirmPassword: string;\n  }): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/change-password`,\n      passwordData,\n    );\n  }\n\n  /**\n   * Solicitar restablecimiento de contraseña\n   */\n  requestPasswordReset(email: string): Observable {\n    return this.apiService.post(`${this.endpoint}/forgot-password`, {\n      email,\n    });\n  }\n\n  /**\n   * Restablecer contraseña\n   */\n  resetPassword(resetData: {\n    token: string;\n    newPassword: string;\n    confirmPassword: string;\n  }): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/reset-password`,\n      resetData,\n    );\n  }\n\n  /**\n   * Subir foto de perfil\n   */\n  uploadProfileImage(file: File): Observable {\n    return this.apiService\n      .upload(`${this.endpoint}/profile-image`, file)\n      .pipe(\n        tap((user) => {\n          this.currentUserSubject.next(user);\n        }),\n      );\n  }\n\n  /**\n   * Verificar email\n   */\n  verifyEmail(token: string): Observable {\n    return this.apiService.post(`${this.endpoint}/verify-email`, {\n      token,\n    });\n  }\n\n  /**\n   * Reenviar email de verificación\n   */\n  resendVerificationEmail(): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/resend-verification`,\n      {},\n    );\n  }\n\n  /**\n   * Eliminar cuenta\n   */\n  deleteAccount(password: string): Observable {\n    return this.apiService\n      .post(`${this.endpoint}/delete-account`, { password })\n      .pipe(\n        tap(() => {\n          this.clearAuthData();\n        }),\n      );\n  }\n\n  // Métodos privados para manejo de autenticación\n\n  private setAuthData(authResponse: AuthResponse): void {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.setItem("authToken", authResponse.token);\n      if (authResponse.refreshToken) {\n        localStorage.setItem("refreshToken", authResponse.refreshToken);\n      }\n      localStorage.setItem("user", JSON.stringify(authResponse.user));\n    }\n\n    this.currentUserSubject.next(authResponse.user);\n    this.isLoggedInSubject.next(true);\n  }\n\n  private clearAuthData(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.removeItem("authToken");\n      localStorage.removeItem("refreshToken");\n      localStorage.removeItem("user");\n    }\n\n    this.currentUserSubject.next(null);\n    this.isLoggedInSubject.next(false);\n  }\n\n  private checkAuthState(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return; // No hacer nada en el servidor\n    }\n\n    const token = localStorage.getItem("authToken");\n    const userStr = localStorage.getItem("user");\n\n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        this.currentUserSubject.next(user);\n        this.isLoggedInSubject.next(true);\n      } catch (error) {\n        console.error("Error parsing user data:", error);\n        this.clearAuthData();\n      }\n    }\n  }\n\n  // Métodos de utilidad pública\n\n  /**\n   * Verificar si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    return this.isLoggedInSubject.value;\n  }\n\n  /**\n   * Obtener el usuario actual (síncrono)\n   */\n  getCurrentUserValue(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Obtener el token de autenticación\n   */\n  getAuthToken(): string | null {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return localStorage.getItem("authToken");\n  }\n\n  /**\n   * Verificar si el token ha expirado\n   */\n  isTokenExpired(): boolean {\n    const token = this.getAuthToken();\n    if (!token) return true;\n\n    try {\n      const payload = JSON.parse(atob(token.split(".")[1]));\n      const exp = payload.exp * 1000; // Convertir a milisegundos\n      return Date.now() > exp;\n    } catch (error) {\n      console.error("Error checking token expiration:", error);\n      return true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/AuthService-1.html": {
      url: "injectables/AuthService-1.html",
      title: "injectable - AuthService-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _supabaseUser\n                            \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Readonly\n                                isAuthenticated\n                            \n                            \n                                    Readonly\n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Readonly\n                                session\n                            \n                            \n                                    Private\n                                    Readonly\n                                supabaseService\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleAuthStateChange\n                            \n                            \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                refreshSession\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                setAuth\n                            \n                            \n                                    Private\n                                    Async\n                                setInitialSession\n                            \n                            \n                                    Async\n                                signInWithPassword\n                            \n                            \n                                    Async\n                                signInWithProvider\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth.service.ts:99\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleAuthStateChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleAuthStateChange(event: AuthChangeEvent, session: Session | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        AuthChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        Session | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Inicializa el estado de sesión. Llamar desde el componente principal (AppComponent).\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Renueva la sesión de Supabase y retorna la nueva sesión (con el nuevo access_token).\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendPasswordResetEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Envía el correo de recuperación de contraseña usando Supabase\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuth\n                        \n                    \n                \n            \n            \n                \nsetAuth(user: User, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setInitialSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithPassword(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithProvider(provider: "google" | "github" | "facebook" | "twitter" | "discord")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Inicia sesión/registro con proveedor social (OAuth) usando Supabase.\nEjemplo de uso: this.authService.signInWithProvider(\'google\')\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                        "google" | "github" | "facebook" | "twitter" | "discord"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(credentials: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/auth.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _supabaseUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        supabaseService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SupabaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const supabaseUser = this._supabaseUser();\n    if (!supabaseUser) return null;\n\n    return {\n      id: supabaseUser.id,\n      email: supabaseUser.email ?? "",\n      name: supabaseUser.user_metadata?.["name"] ?? "",\n      createdAt: new Date(supabaseUser.created_at ?? ""),\n      updatedAt: new Date(supabaseUser.updated_at ?? ""),\n    };\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:88\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, inject, PLATFORM_ID, computed } from "@angular/core";\nimport { isPlatformBrowser } from "@angular/common";\nimport { Router } from "@angular/router";\nimport { SupabaseService } from "@app/infrastructure/supabase/supabase.service";\nimport { AuthChangeEvent, Session, User as SupabaseUser } from "@supabase/supabase-js";\nimport { User } from "../../domain/entities/user.entity";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class AuthService {\n  /**\n   * Envía el correo de recuperación de contraseña usando Supabase\n   */\n  async sendPasswordResetEmail(email: string): Promise {\n    try {\n      const { error } = await this.supabaseService.client.auth.resetPasswordForEmail(email, {\n        redirectTo: window.location.origin + \'/reset-password\',\n      });\n      if (error) throw error;\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * Inicia sesión/registro con proveedor social (OAuth) usando Supabase.\n   * Ejemplo de uso: this.authService.signInWithProvider(\'google\')\n   */\n  async signInWithProvider(provider: \'google\' | \'github\' | \'facebook\' | \'twitter\' | \'discord\') {\n    this.isLoading.set(true);\n    this.error.set(null);\n    try {\n      const { error } = await this.supabaseService.client.auth.signInWithOAuth({\n        provider,\n        options: {\n          redirectTo: window.location.origin,\n        },\n      });\n      if (error) throw error;\n    } catch (error: any) {\n      this.error.set(error.message);\n      console.error("OAuth sign in error:", error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n  /**\n   * Renueva la sesión de Supabase y retorna la nueva sesión (con el nuevo access_token).\n   */\n  async refreshSession(): Promise {\n    // Solo refresca si hay sesión actual\n    if (!this.session()) {\n      this.isAuthenticated.set(false);\n      this._supabaseUser.set(null);\n      this.session.set(null);\n      this.router.navigate(["/login"]);\n      return null;\n    }\n    try {\n      const { data, error } = await this.supabaseService.client.auth.refreshSession();\n      if (error) throw error;\n      this.session.set(data.session);\n      this._supabaseUser.set(data.session?.user ?? null);\n      this.isAuthenticated.set(!!data.session);\n      return data.session;\n    } catch (error) {\n      console.error("Error refreshing session:", error);\n      this.isAuthenticated.set(false);\n      this._supabaseUser.set(null);\n      this.session.set(null);\n      this.router.navigate(["/login"]);\n      return null;\n    }\n  }\n  private readonly supabaseService = inject(SupabaseService);\n  private readonly router = inject(Router);\n  private readonly platformId = inject(PLATFORM_ID);\n\n  // Private signals\n  private readonly _supabaseUser = signal(null);\n\n  // Public signals\n  readonly session = signal(null);\n  readonly isAuthenticated = signal(false);\n  readonly isLoading = signal(true);\n  readonly error = signal(null);\n\n  readonly user = computed(() => {\n    const supabaseUser = this._supabaseUser();\n    if (!supabaseUser) return null;\n\n    return {\n      id: supabaseUser.id,\n      email: supabaseUser.email ?? "",\n      name: supabaseUser.user_metadata?.["name"] ?? "",\n      createdAt: new Date(supabaseUser.created_at ?? ""),\n      updatedAt: new Date(supabaseUser.updated_at ?? ""),\n    };\n  });\n\n  constructor() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.supabaseService.client.auth\n        .onAuthStateChange(\n          (event: AuthChangeEvent, session: Session | null) => {\n            this.handleAuthStateChange(event, session);\n          },\n        );\n      // La inicialización de sesión se debe llamar manualmente con init()\n    } else {\n      this.isLoading.set(false);\n    }\n  }\n  /**\n   * Inicializa el estado de sesión. Llamar desde el componente principal (AppComponent).\n   */\n  public async init() {\n    await this.setInitialSession();\n  }\n\n  private async setInitialSession() {\n    try {\n      const {\n        data: { session },\n      } = await this.supabaseService.client.auth.getSession();\n      this.handleAuthStateChange("INITIAL_SESSION", session);\n    } catch (error) {\n      console.error("Error getting initial session:", error);\n      this.handleAuthStateChange("SIGNED_OUT", null);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  private handleAuthStateChange(\n    event: AuthChangeEvent,\n    session: Session | null,\n  ) {\n    this.session.set(session);\n    this._supabaseUser.set(session?.user ?? null);\n    this.isAuthenticated.set(!!session);\n\n    console.log(`Auth event: ${event}`);\n\n    if (event === "SIGNED_IN" || (event === "INITIAL_SESSION" && session)) {\n      this.router.navigate(["/home"]);\n    } else if (event === "SIGNED_OUT") {\n      this.router.navigate(["/login"]);\n    }\n  }\n\n  setAuth(user: User, token: string) {\n    const supabaseUser: SupabaseUser = {\n      id: user.id,\n      email: user.email,\n      user_metadata: { name: user.name },\n      app_metadata: {},\n      aud: "authenticated",\n      created_at: user.createdAt.toISOString(),\n      updated_at: user.updatedAt.toISOString(),\n    };\n\n    this._supabaseUser.set(supabaseUser);\n    this.session.set({\n      access_token: token,\n      refresh_token: "",\n      token_type: "bearer",\n      user: supabaseUser,\n      expires_in: 3600,\n      expires_at: Date.now() + 3600 * 1000,\n    });\n    this.isAuthenticated.set(true);\n  }\n\n  async signInWithPassword(credentials: { email: string; password: string }) {\n    this.isLoading.set(true);\n    this.error.set(null);\n    try {\n      const { error } =\n        await this.supabaseService.client.auth.signInWithPassword(credentials);\n      if (error) throw error;\n    } catch (error: any) {\n      this.error.set(error.message);\n      console.error("Sign in error:", error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  async signUp(credentials: { email: string; password: string; name: string }) {\n    this.isLoading.set(true);\n    this.error.set(null);\n    try {\n      const {\n        data: { user },\n        error,\n      } = await this.supabaseService.client.auth.signUp({\n        email: credentials.email,\n        password: credentials.password,\n        options: {\n          data: {\n            name: credentials.name,\n          },\n        },\n      });\n      if (error) throw error;\n      if (!user) throw new Error("Sign up failed: no user returned.");\n    } catch (error: any) {\n      this.error.set(error.message);\n      console.error("Sign up error:", error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  async signOut() {\n    this.isLoading.set(true);\n    try {\n      await this.supabaseService.client.auth.signOut();\n    } catch (error:  any) {\n      this.error.set(error.message || "Error al cerrar sesión");\n      console.error("Sign out error:", error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/AuthSession.html": {
      url: "interfaces/AuthSession.html",
      title: "interface - AuthSession",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAuthenticated\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthenticated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: string;\n}\n\nexport interface AuthSession {\n  user: User | null;\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nexport abstract class IAuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentSession(): Promise;\n  abstract refreshSession(): Promise;\n  abstract sendPasswordResetEmail(email: string): Promise;\n  abstract signInWithProvider(provider: 'google' | 'github' | 'facebook' | 'twitter' | 'discord'): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/AuthSessionUseCase.html": {
      url: "injectables/AuthSessionUseCase.html",
      title: "injectable - AuthSessionUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthSessionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/auth-session.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                initSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/auth-session.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/auth-session.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { IAuthRepository } from "../repositories/i-auth.repository";\n\n@Injectable({ providedIn: "root" })\nexport class AuthSessionUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async initSession() {\n    await this.authRepository.getCurrentSession();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/AuthStateService.html": {
      url: "injectables/AuthStateService.html",
      title: "injectable - AuthStateService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/services/auth-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _session\n                            \n                            \n                                    Readonly\n                                isAuthenticated\n                            \n                            \n                                    Readonly\n                                session\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSession\n                            \n                            \n                                    Async\n                                initializeSession\n                            \n                            \n                                updateSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/services/auth-state.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSession\n                        \n                    \n                \n            \n            \n                \nclearSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/services/auth-state.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializeSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/services/auth-state.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSession\n                        \n                    \n                \n            \n            \n                \nupdateSession(session: AuthSession | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/services/auth-state.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                session\n                                            \n                                                            AuthSession | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _session\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth-state.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const session = this._session();\n    return session?.isAuthenticated ?? false;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth-state.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._session.asReadonly()\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth-state.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const session = this._session();\n    return session?.token ?? null;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth-state.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const session = this._session();\n    return session?.user ?? null;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/services/auth-state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, computed } from '@angular/core';\nimport { IAuthRepository, AuthSession } from '@app/domain/repositories/i-auth.repository';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthStateService {\n  private readonly _session = signal(null);\n  \n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  readonly session = this._session.asReadonly();\n  \n  readonly isAuthenticated = computed(() => {\n    const session = this._session();\n    return session?.isAuthenticated ?? false;\n  });\n\n  readonly user = computed(() => {\n    const session = this._session();\n    return session?.user ?? null;\n  });\n\n  readonly token = computed(() => {\n    const session = this._session();\n    return session?.token ?? null;\n  });\n\n  async initializeSession(): Promise {\n    try {\n      const session = await this.authRepository.getCurrentSession();\n      this._session.set(session);\n    } catch (error) {\n      console.error('Error initializing session:', error);\n      this._session.set(null);\n    }\n  }\n\n  updateSession(session: AuthSession | null): void {\n    this._session.set(session);\n  }\n\n  clearSession(): void {\n    this._session.set(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/AuthToken.html": {
      url: "interfaces/AuthToken.html",
      title: "interface - AuthToken",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/entities/auth-token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthToken {\n  accessToken: string;\n  refreshToken: string;\n  expiresAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interceptors/AuthTokenInterceptor.html": {
      url: "interceptors/AuthTokenInterceptor.html",
      title: "interceptor - AuthTokenInterceptor",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/interceptors/auth-token.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authStateService\n                            \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/interceptors/auth-token.interceptor.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/interceptors/auth-token.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authStateService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthStateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/interceptors/auth-token.interceptor.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/interceptors/auth-token.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, PLATFORM_ID } from "@angular/core";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from "@angular/common/http";\nimport { Observable } from "rxjs";\nimport { isPlatformBrowser } from "@angular/common";\nimport { AuthStateService } from "@app/domain/services/auth-state.service";\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  private readonly platformId = inject(PLATFORM_ID);\n  private readonly authStateService = inject(AuthStateService);\n\n  constructor() {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    // Solo agregar token en el navegador (no durante SSR)\n    if (isPlatformBrowser(this.platformId)) {\n      const token = this.authStateService.token();\n\n      if (token) {\n        console.log(\n          "🔑 AuthTokenInterceptor - Agregando token a la petición:",\n          {\n            url: request.url,\n            method: request.method,\n            token: token.substring(0, 20) + "...",\n          },\n        );\n\n        const authRequest = request.clone({\n          headers: request.headers.set("Authorization", `Bearer ${token}`),\n        });\n\n        return next.handle(authRequest);\n      } else {\n        console.log("🚫 AuthTokenInterceptor - No hay token disponible para:", {\n          url: request.url,\n          method: request.method,\n        });\n      }\n    } else {\n      console.log(\n        "🖥️ AuthTokenInterceptor - Ejecutándose en servidor (SSR), no se agrega token",\n      );\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Award.html": {
      url: "interfaces/Award.html",
      title: "interface - Award",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Award\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/artist/artist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ChangeDetectorRef } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { ActivatedRoute } from "@angular/router";\n\ninterface Song {\n  title: string;\n  album: string;\n  duration: string;\n}\n\ninterface Album {\n  title: string;\n  year: string;\n  tracks: number;\n  cover: string;\n}\n\ninterface Award {\n  name: string;\n  year: string;\n  category: string;\n}\n\ninterface Artist {\n  id: number;\n  name: string;\n  genre: string;\n  image: string;\n  gradient: string;\n  monthlyListeners: string;\n  followers: string;\n  activeYears: string;\n  biography: string;\n  popularSongs: Song[];\n  albums: Album[];\n  awards: Award[];\n}\n\n@Component({\n  selector: "app-artist",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./artist.html",\n  styleUrls: ["./artist.css"],\n})\nexport class ArtistComponent implements OnInit {\n  artistId: string | null = null;\n  artist: Artist | null = null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get("id");\n    if (this.artistId === "1") {\n      this.loadGorillazData();\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\n      "Imagen cargada:",\n      img.src,\n      "Dimensiones:",\n      img.width,\n      "x",\n      img.height,\n    );\n\n    // Pequeño delay para asegurar que la imagen está completamente cargada\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar la imagen:", event);\n    this.applyFallbackGradient();\n  }\n\n  testDifferentImage() {\n    const testImages = [\n      "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop", // Original\n      "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=400&h=400&fit=crop", // Azul/morado\n      "https://images.unsplash.com/photo-1511379938547-c1f69419868d?w=400&h=400&fit=crop", // Rojizo\n      "https://images.unsplash.com/photo-1446057032654-9d8885db76c6?w=400&h=400&fit=crop", // Verde\n    ];\n\n    const currentIndex = testImages.indexOf(this.artist!.image);\n    const nextIndex = (currentIndex + 1) % testImages.length;\n\n    console.log("🎨 Cambiando a imagen:", testImages[nextIndex]);\n    this.artist!.image = testImages[nextIndex];\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    try {\n      console.log("Iniciando extracción de colores...");\n\n      const canvas = document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      // Reducir el tamaño para análisis más rápido\n      const analysisSize = 200;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      // Configurar CORS para imágenes externas\n      img.crossOrigin = "anonymous";\n\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      // Extraer colores de diferentes puntos de la imagen\n      const colors = [];\n      const samples = 50; // Más muestras para mejor análisis\n\n      for (let i = 0; i  200 && r + g + b > 60 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        console.log("Color dominante:", dominantColor);\n\n        const gradient = this.generateGradient(dominantColor);\n        console.log("Gradiente generado:", gradient);\n\n        if (this.artist) {\n          this.artist.gradient = gradient;\n          console.log("Gradiente aplicado al artista");\n          // Forzar detección de cambios\n          this.cdr.detectChanges();\n        }\n      } else {\n        console.warn("No se encontraron colores válidos en la imagen");\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores de la imagen:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.artist) {\n      this.artist.gradient =\n        "linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)";\n      console.log("Aplicado gradiente de fallback");\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    // Agrupar colores similares y encontrar el más común\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      // Reducir la precisión del color para agrupar similares\n      const key = `${Math.floor(color.r / 20) * 20}-${Math.floor(color.g / 20) * 20}-${Math.floor(color.b / 20) * 20}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    // Encontrar el grupo con más colores\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    // Crear variaciones del color dominante\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n    // Color más oscuro para el gradiente\n    const darkerColor = `rgb(${Math.max(0, color.r - 60)}, ${Math.max(0, color.g - 60)}, ${Math.max(0, color.b - 60)})`;\n\n    // Color más claro para el gradiente\n    const lighterColor = `rgb(${Math.min(255, color.r + 40)}, ${Math.min(255, color.g + 40)}, ${Math.min(255, color.b + 40)})`;\n\n    // Determinar si el color es muy oscuro o muy claro para ajustar la dirección\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  200) {\n      // Color claro - gradiente hacia más oscuro\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      // Color medio - gradiente en ambas direcciones\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadGorillazData() {\n    this.artist = {\n      id: 1,\n      name: "Gorillaz",\n      genre: "Alternative Rock, Electronic, Hip Hop",\n      image: "/assets/gorillaz2.jpg", // Imagen de prueba\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)", // Gradiente inicial que será reemplazado\n      monthlyListeners: "45.2M",\n      followers: "12.8M",\n      activeYears: "1998 - presente",\n      biography: `Gorillaz es una banda virtual británica creada en 1998 por Damon Albarn y Jamie Hewlett. La banda está compuesta por cuatro miembros ficticios animados: 2-D (vocalista, teclados), Murdoc Niccals (bajo), Noodle (guitarra, teclados, voz ocasional) y Russel Hobbs (batería). Gorillaz ha sido aclamado como uno de los proyectos musicales más innovadores y exitosos del siglo XXI, combinando elementos de rock alternativo, hip hop, electrónica y pop.\n\nEl concepto único de la banda como un grupo completamente virtual, con personajes animados que tienen sus propias personalidades y trasfondos elaborados, fue revolucionario en la industria musical. A lo largo de su carrera, Gorillaz ha colaborado con una amplia gama de artistas, desde De La Soul y Del the Funky Homosapien hasta Elton John y Beck, creando un sonido ecléctico que trasciende géneros musicales.\n\nLa banda ha lanzado múltiples álbumes exitosos, incluyendo su álbum debut homónimo (2001), "Demon Days" (2005), "Plastic Beach" (2010), "Humanz" (2017), "The Now Now" (2018), "Song Machine" (2020) y "Cracker Island" (2023). Sus videos musicales y presentaciones en vivo utilizan tecnología de vanguardia para dar vida a los personajes animados, creando experiencias visuales únicas.`,\n      popularSongs: [\n        { title: "Feel Good Inc.", album: "Demon Days", duration: "3:41" },\n        { title: "Clint Eastwood", album: "Gorillaz", duration: "5:41" },\n        {\n          title: "On Melancholy Hill",\n          album: "Plastic Beach",\n          duration: "3:53",\n        },\n        { title: "Saturnz Barz", album: "Humanz", duration: "3:58" },\n        { title: "Humility", album: "The Now Now", duration: "3:01" },\n        { title: "Dirty Harry", album: "Demon Days", duration: "3:43" },\n        { title: "Stylo", album: "Plastic Beach", duration: "4:30" },\n        { title: "Tranz", album: "The Now Now", duration: "2:42" },\n        { title: "Cracker Island", album: "Cracker Island", duration: "3:42" },\n        { title: "19-2000", album: "Gorillaz", duration: "3:27" },\n      ],\n      albums: [\n        {\n          title: "Gorillaz",\n          year: "2001",\n          tracks: 15,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Demon Days",\n          year: "2005",\n          tracks: 15,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Plastic Beach",\n          year: "2010",\n          tracks: 16,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n        {\n          title: "Humanz",\n          year: "2017",\n          tracks: 20,\n          cover: "/assets/playlists/playlist4.jpg",\n        },\n        {\n          title: "The Now Now",\n          year: "2018",\n          tracks: 11,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Song Machine, Season One",\n          year: "2020",\n          tracks: 17,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Cracker Island",\n          year: "2023",\n          tracks: 10,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n      ],\n      awards: [\n        {\n          name: "Grammy Award",\n          year: "2006",\n          category: "Best Pop Collaboration with Vocals - Feel Good Inc.",\n        },\n        { name: "BRIT Award", year: "2006", category: "Best British Group" },\n        {\n          name: "MTV Video Music Award",\n          year: "2005",\n          category: "Best Group Video - Feel Good Inc.",\n        },\n        {\n          name: "Q Award",\n          year: "2005",\n          category: "Best Video - Feel Good Inc.",\n        },\n        {\n          name: "Ivor Novello Award",\n          year: "2002",\n          category: "Best Contemporary Song - Clint Eastwood",\n        },\n        { name: "NME Award", year: "2006", category: "Best Band" },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/Card.html": {
      url: "components/Card.html",
      title: "component - Card",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/card/card.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n\n            \n                imports\n                \n                                CardPlayButton\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card.html\n            \n\n\n\n            \n                styleUrl\n                ./card.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                href\n                            \n                            \n                                playlistId\n                            \n                            \n                                showPlayButton\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        href\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playlistId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPlayButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { CardPlayButton } from \"../card-play-button/card-play-button\";\nimport { RouterLink } from \"@angular/router\";\n\n@Component({\n  selector: \"app-card\",\n  imports: [CardPlayButton, RouterLink],\n  templateUrl: \"./card.html\",\n  styleUrl: \"./card.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Card {\n  @Input() title = \"\";\n  @Input() body = \"\";\n  @Input() href = \"#\";\n  @Input() playlistId = 0;\n  @Input() showPlayButton = false;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ title }}\n        {{ body }}\n      \n      @if (showPlayButton) {\n      \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ title }}        {{ body }}            @if (showPlayButton) {                          }      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Card'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/CardPlayButton.html": {
      url: "components/CardPlayButton.html",
      title: "component - CardPlayButton",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CardPlayButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/card-play-button/card-play-button.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-play-button\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-play-button.html\n            \n\n\n\n            \n                styleUrl\n                ./card-play-button.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlaylistId\n                            \n                            \n                                isPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPlayingPlaylist\n                                \n                                \n                                    isThisPlaylistInStore\n                                \n                                \n                                    iconClassName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card-play-button/card-play-button.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"large\"\n\n                    \n                \n                \n                    \n                        Default value : \"small\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card-play-button/card-play-button.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/card-play-button/card-play-button.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlaylistId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/card-play-button/card-play-button.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/card-play-button/card-play-button.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPlayingPlaylist\n                    \n                \n\n                \n                    \n                        getisPlayingPlaylist()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/card-play-button/card-play-button.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isThisPlaylistInStore\n                    \n                \n\n                \n                    \n                        getisThisPlaylistInStore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/card-play-button/card-play-button.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconClassName\n                    \n                \n\n                \n                    \n                        geticonClassName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/card-play-button/card-play-button.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: \"app-card-play-button\",\n  imports: [MatIconModule],\n  templateUrl: \"./card-play-button.html\",\n  styleUrl: \"./card-play-button.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardPlayButton {\n  @Input() id = 0;\n  @Input() size: \"small\" | \"large\" = \"small\";\n\n  // Mock state para el reproductor\n  isPlaying = false;\n  currentPlaylistId: number | null = null;\n\n  get isPlayingPlaylist(): boolean {\n    return this.isPlaying && this.currentPlaylistId === this.id;\n  }\n\n  get isThisPlaylistInStore(): boolean {\n    return this.currentPlaylistId === this.id;\n  }\n\n  get iconClassName(): string {\n    return this.size === \"small\" ? \"w-4 h-4\" : \"w-5 h-5\";\n  }\n\n  handleClick(): void {\n    if (this.isThisPlaylistInStore) {\n      this.isPlaying = !this.isPlaying;\n      return;\n    }\n\n    // Mock: simular carga de playlist\n    this.currentPlaylistId = this.id;\n    setTimeout(() => {\n      this.isPlaying = true;\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  @if (isPlayingPlaylist) {\n    pause\n  } @else {\n    play_arrow\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isPlayingPlaylist) {    pause  } @else {    play_arrow  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardPlayButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/CheckAuthUseCase.html": {
      url: "injectables/CheckAuthUseCase.html",
      title: "injectable - CheckAuthUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CheckAuthUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/check-auth.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                isAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/check-auth.usecase.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/check-auth.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(IAuthRepository)\n                    \n                \n                    \n                        \n                                Defined in src/app/domain/usecases/check-auth.usecase.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from "@angular/core";\nimport { IAuthRepository } from "../repositories/i-auth.repository";\n\n@Injectable({ providedIn: "root" })\nexport class CheckAuthUseCase {\n  private readonly authRepository = inject(IAuthRepository);\n\n  async isAuthenticated(): Promise {\n    try {\n      const session = await this.authRepository.getCurrentSession();\n      return session.isAuthenticated;\n    } catch {\n      return false;\n    }\n  }\n\n  async getCurrentUser() {\n    try {\n      const session = await this.authRepository.getCurrentSession();\n      return session.user;\n    } catch {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ConnectionTestComponent.html": {
      url: "components/ConnectionTestComponent.html",
      title: "component - ConnectionTestComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ConnectionTestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connection-test/connection-test.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connection-test\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n      .connection-test {\n        padding: 2rem;\n        max-width: 800px;\n        margin: 0 auto;\n        font-family: Arial, sans-serif;\n      }\n\n      .status {\n        padding: 1rem;\n        border-radius: 8px;\n        margin: 1rem 0;\n      }\n\n      .status.success {\n        background: #d4edda;\n        color: #155724;\n        border: 1px solid #c3e6cb;\n      }\n      .status.error {\n        background: #f8d7da;\n        color: #721c24;\n        border: 1px solid #f5c6cb;\n      }\n      .status.testing {\n        background: #fff3cd;\n        color: #856404;\n        border: 1px solid #ffeaa7;\n      }\n\n      .test-btn,\n      .guide-btn,\n      .endpoint-btn {\n        padding: 0.75rem 1.5rem;\n        margin: 0.5rem;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        font-weight: 600;\n      }\n\n      .test-btn {\n        background: #007bff;\n        color: white;\n      }\n      .test-btn:hover:not(:disabled) {\n        background: #0056b3;\n      }\n      .test-btn:disabled {\n        background: #6c757d;\n        cursor: not-allowed;\n      }\n\n      .guide-btn {\n        background: #28a745;\n        color: white;\n      }\n      .guide-btn:hover {\n        background: #1e7e34;\n      }\n\n      .endpoint-btn {\n        background: #17a2b8;\n        color: white;\n      }\n      .endpoint-btn:hover {\n        background: #117a8b;\n      }\n\n      .response {\n        margin-top: 1rem;\n        padding: 1rem;\n        background: #f8f9fa;\n        border-radius: 5px;\n        border: 1px solid #dee2e6;\n      }\n\n      .response pre {\n        white-space: pre-wrap;\n        word-wrap: break-word;\n      }\n\n      .endpoint-list {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n      }\n    \n            \n\n            \n                template\n                \n  🔗 Prueba de Conexión con Django Backend\n\n  \n    Estado: {{ status }}\n    {{ message }}\n  \n\n  \n    {{ testing ? \"Probando...\" : \"Probar Conexión\" }}\n  \n\n  \n    📖 Mostrar Guía de Configuración\n  \n\n  \n    Respuesta del Backend:\n    {{ response | json }}\n  \n\n  \n    🎯 Endpoints a probar:\n    \n      \n        🔍 GET /api/test/\n      \n      \n        👥 GET /api/test-users/\n      \n      \n        👤 GET /api/user/test-profiles/\n      \n      \n        🔒 GET /api/user/profile/ (Auth)\n      \n      \n        🎵 GET /api/playlists/\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                response\n                            \n                            \n                                status\n                            \n                            \n                                statusClass\n                            \n                            \n                                testing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showGuide\n                            \n                            \n                                    Async\n                                testConnection\n                            \n                            \n                                testEndpoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(testService: TestConnectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connection-test/connection-test.component.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testService\n                                                  \n                                                        \n                                                                        TestConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection-test/connection-test.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGuide\n                        \n                    \n                \n            \n            \n                \nshowGuide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection-test/connection-test.component.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        testConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    testConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection-test/connection-test.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testEndpoint\n                        \n                    \n                \n            \n            \n                \ntestEndpoint(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connection-test/connection-test.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Haz clic en \"Probar Conexión\" para verificar si Django está funcionando'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection-test/connection-test.component.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection-test/connection-test.component.ts:153\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No probado\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection-test/connection-test.component.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection-test/connection-test.component.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connection-test/connection-test.component.ts:152\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TestConnectionService } from \"../../services/test-connection.service\";\n\n@Component({\n  selector: \"app-connection-test\",\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      🔗 Prueba de Conexión con Django Backend\n\n      \n        Estado: {{ status }}\n        {{ message }}\n      \n\n      \n        {{ testing ? \"Probando...\" : \"Probar Conexión\" }}\n      \n\n      \n        📖 Mostrar Guía de Configuración\n      \n\n      \n        Respuesta del Backend:\n        {{ response | json }}\n      \n\n      \n        🎯 Endpoints a probar:\n        \n          \n            🔍 GET /api/test/\n          \n          \n            👥 GET /api/test-users/\n          \n          \n            👤 GET /api/user/test-profiles/\n          \n          \n            🔒 GET /api/user/profile/ (Auth)\n          \n          \n            🎵 GET /api/playlists/\n          \n        \n      \n    \n  `,\n  styles: [\n    `\n      .connection-test {\n        padding: 2rem;\n        max-width: 800px;\n        margin: 0 auto;\n        font-family: Arial, sans-serif;\n      }\n\n      .status {\n        padding: 1rem;\n        border-radius: 8px;\n        margin: 1rem 0;\n      }\n\n      .status.success {\n        background: #d4edda;\n        color: #155724;\n        border: 1px solid #c3e6cb;\n      }\n      .status.error {\n        background: #f8d7da;\n        color: #721c24;\n        border: 1px solid #f5c6cb;\n      }\n      .status.testing {\n        background: #fff3cd;\n        color: #856404;\n        border: 1px solid #ffeaa7;\n      }\n\n      .test-btn,\n      .guide-btn,\n      .endpoint-btn {\n        padding: 0.75rem 1.5rem;\n        margin: 0.5rem;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        font-weight: 600;\n      }\n\n      .test-btn {\n        background: #007bff;\n        color: white;\n      }\n      .test-btn:hover:not(:disabled) {\n        background: #0056b3;\n      }\n      .test-btn:disabled {\n        background: #6c757d;\n        cursor: not-allowed;\n      }\n\n      .guide-btn {\n        background: #28a745;\n        color: white;\n      }\n      .guide-btn:hover {\n        background: #1e7e34;\n      }\n\n      .endpoint-btn {\n        background: #17a2b8;\n        color: white;\n      }\n      .endpoint-btn:hover {\n        background: #117a8b;\n      }\n\n      .response {\n        margin-top: 1rem;\n        padding: 1rem;\n        background: #f8f9fa;\n        border-radius: 5px;\n        border: 1px solid #dee2e6;\n      }\n\n      .response pre {\n        white-space: pre-wrap;\n        word-wrap: break-word;\n      }\n\n      .endpoint-list {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n      }\n    `,\n  ],\n})\nexport class ConnectionTestComponent implements OnInit {\n  status = \"No probado\";\n  message =\n    'Haz clic en \"Probar Conexión\" para verificar si Django está funcionando';\n  statusClass = \"\";\n  testing = false;\n  response: any = null;\n\n  constructor(private testService: TestConnectionService) {}\n\n  ngOnInit() {\n    // Probar conexión automáticamente al cargar\n    this.testConnection();\n  }\n\n  async testConnection() {\n    this.testing = true;\n    this.status = \"Probando...\";\n    this.message = \"Conectando con Django backend...\";\n    this.statusClass = \"testing\";\n    this.response = null;\n\n    try {\n      const isConnected = await this.testService.checkDjangoServer();\n\n      if (isConnected) {\n        this.status = \"✅ Conectado\";\n        this.message =\n          \"Django backend está corriendo y respondiendo correctamente\";\n        this.statusClass = \"success\";\n      } else {\n        this.status = \"❌ No conectado\";\n        this.message =\n          \"No se puede conectar con Django. Verifica que esté corriendo en puerto 8000\";\n        this.statusClass = \"error\";\n      }\n    } catch (error) {\n      this.status = \"❌ Error\";\n      this.message = `Error: ${error}`;\n      this.statusClass = \"error\";\n    }\n\n    this.testing = false;\n  }\n\n  testEndpoint(endpoint: string) {\n    console.log(`🔍 Probando endpoint: ${endpoint}`);\n    console.log(`🌐 URL completa: ${this.testService.getFullUrl(endpoint)}`);\n\n    this.testing = true;\n    this.status = `Probando ${endpoint}...`;\n    this.statusClass = \"testing\";\n    this.response = null;\n\n    // Usar el servicio API directamente para probar endpoints específicos\n    this.testService.testSpecificEndpoint(endpoint).subscribe({\n      next: (data: any) => {\n        console.log(`✅ Endpoint ${endpoint} funciona:`, data);\n        this.response = data;\n        this.status = `✅ Endpoint ${endpoint} OK`;\n        this.message = \"Endpoint responde correctamente\";\n        this.statusClass = \"success\";\n        this.testing = false;\n      },\n      error: (error: any) => {\n        console.error(`❌ Error completo en endpoint ${endpoint}:`, error);\n        this.response = {\n          error: error.message || \"Unknown error\",\n          status: error.status || \"No status\",\n          statusText: error.statusText || \"No status text\",\n          url: error.url || \"No URL\",\n          name: error.name || \"No name\",\n        };\n        this.status = `❌ Endpoint ${endpoint} Error`;\n        this.message = `Error ${error.status || \"Unknown\"}: ${error.message || \"Failed to fetch\"}`;\n        this.statusClass = \"error\";\n        this.testing = false;\n      },\n    });\n  }\n\n  showGuide() {\n    this.testService.showDjangoSetupGuide();\n  }\n}\n\n    \n\n\n    \n            \n      .connection-test {\n        padding: 2rem;\n        max-width: 800px;\n        margin: 0 auto;\n        font-family: Arial, sans-serif;\n      }\n\n      .status {\n        padding: 1rem;\n        border-radius: 8px;\n        margin: 1rem 0;\n      }\n\n      .status.success {\n        background: #d4edda;\n        color: #155724;\n        border: 1px solid #c3e6cb;\n      }\n      .status.error {\n        background: #f8d7da;\n        color: #721c24;\n        border: 1px solid #f5c6cb;\n      }\n      .status.testing {\n        background: #fff3cd;\n        color: #856404;\n        border: 1px solid #ffeaa7;\n      }\n\n      .test-btn,\n      .guide-btn,\n      .endpoint-btn {\n        padding: 0.75rem 1.5rem;\n        margin: 0.5rem;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        font-weight: 600;\n      }\n\n      .test-btn {\n        background: #007bff;\n        color: white;\n      }\n      .test-btn:hover:not(:disabled) {\n        background: #0056b3;\n      }\n      .test-btn:disabled {\n        background: #6c757d;\n        cursor: not-allowed;\n      }\n\n      .guide-btn {\n        background: #28a745;\n        color: white;\n      }\n      .guide-btn:hover {\n        background: #1e7e34;\n      }\n\n      .endpoint-btn {\n        background: #17a2b8;\n        color: white;\n      }\n      .endpoint-btn:hover {\n        background: #117a8b;\n      }\n\n      .response {\n        margin-top: 1rem;\n        padding: 1rem;\n        background: #f8f9fa;\n        border-radius: 5px;\n        border: 1px solid #dee2e6;\n      }\n\n      .response pre {\n        white-space: pre-wrap;\n        word-wrap: break-word;\n      }\n\n      .endpoint-list {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  🔗 Prueba de Conexión con Django Backend      Estado: {{ status }}    {{ message }}        {{ testing ? \"Probando...\" : \"Probar Conexión\" }}        📖 Mostrar Guía de Configuración        Respuesta del Backend:    {{ response | json }}        🎯 Endpoints a probar:                  🔍 GET /api/test/                    👥 GET /api/test-users/                    👤 GET /api/user/test-profiles/                    🔒 GET /api/user/profile/ (Auth)                    🎵 GET /api/playlists/            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectionTestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/CreatePlaylistDto.html": {
      url: "interfaces/CreatePlaylistDto.html",
      title: "interface - CreatePlaylistDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePlaylistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coverImage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/CurrentMusic.html": {
      url: "interfaces/CurrentMusic.html",
      title: "interface - CurrentMusic",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentMusic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/musics-table-play/musics-table-play.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            playlist\n                                        \n                                \n                                \n                                        \n                                            song\n                                        \n                                \n                                \n                                        \n                                            songs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        playlist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlist:     Playlist | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Playlist | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song:     Song | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs:     Song[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatIconModule } from \'@angular/material/icon\';\nimport { ChangeDetectionStrategy, Component, Input } from "@angular/core";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  albumId?: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-musics-table-play",\nimports: [MatIconModule],\n  templateUrl: "./musics-table-play.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTablePlay {\n  @Input() song!: Song;\n  @Input() isCurrentSong = false;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n  isPlaying = false;\n\n  isNewSongOfAnotherPlaylist(song: Song): boolean {\n    return this.currentMusic.playlist?.id !== song.albumId;\n  }\n\n  isCurrentSongRunning(song: Song): boolean {\n    return (\n      this.currentMusic.song?.id === song.id &&\n      this.currentMusic.playlist?.albumId === song.albumId &&\n      this.isPlaying\n    );\n  }\n\n  setNewCurrentMusic(song: Song): void {\n    // Mock: simular carga de nueva playlist\n    setTimeout(() => {\n      this.currentMusic = {\n        song: song,\n        playlist: {\n          id: song.albumId,\n          albumId: song.albumId,\n          name: `Album ${song.album}`,\n          description: `Playlist for ${song.album}`,\n        },\n        songs: [song],\n      };\n      this.isPlaying = true;\n    }, 100);\n  }\n\n  handleClick(song: Song): void {\n    if (this.isCurrentSongRunning(song)) {\n      this.isPlaying = false;\n      return;\n    }\n\n    if (this.isNewSongOfAnotherPlaylist(song)) {\n      this.setNewCurrentMusic(song);\n      return;\n    }\n\n    // La playlist es la misma, pero la canción es diferente\n    if (this.currentMusic.song?.id !== song.id) {\n      this.currentMusic = {\n        ...this.currentMusic,\n        song: song,\n      };\n    }\n    this.isPlaying = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/CurrentMusic-1.html": {
      url: "interfaces/CurrentMusic-1.html",
      title: "interface - CurrentMusic-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentMusic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/player/player.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            playlist\n                                        \n                                \n                                \n                                        \n                                            song\n                                        \n                                \n                                \n                                        \n                                            songs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        playlist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlist:     Playlist | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Playlist | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song:     Song | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs:     Song[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n} from "@angular/core";\nimport { PlayerControlButtonBar } from "../player-control-button-bar/player-control-button-bar";\nimport { PlayerCurrentSong } from "../player-current-song/player-current-song";\nimport { PlayerSoundControl } from "../player-sound-control/player-sound-control";\nimport { PlayerVolumeControl } from "../player-volume-control/player-volume-control";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-player",\n  imports: [\n    PlayerControlButtonBar,\n    PlayerCurrentSong,\n    PlayerSoundControl,\n    PlayerVolumeControl,\n  ],\n  templateUrl: "./player.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Player implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild("audioElement", { static: false })\n  audioRef!: ElementRef;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n\n  isPlaying = false;\n  volume = 0.5;\n\n  ngOnInit(): void {\n    // Inicializar con una canción mock\n    this.currentMusic = {\n      song: {\n        id: 1,\n        title: "Bohemian Rhapsody",\n        artists: ["Queen"],\n        album: "A Night at the Opera",\n        albumId: 101,\n        duration: "5:55",\n        image: "/assets/playlists/playlist1.jpg",\n      },\n      playlist: { id: 101 },\n      songs: [],\n    };\n  }\n\n  ngAfterViewInit(): void {\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (\n      this.audioRef?.nativeElement &&\n      typeof this.audioRef.nativeElement.pause === "function"\n    ) {\n      this.audioRef.nativeElement.pause();\n    }\n  }\n\n  play(): void {\n    this.audioRef?.nativeElement\n      ?.play?.()\n      .catch((e) => console.log("Error playing: ", e));\n  }\n\n  pause(): void {\n    this.audioRef?.nativeElement?.pause?.();\n  }\n\n  togglePlayPause(): void {\n    this.isPlaying = !this.isPlaying;\n    this.isPlaying ? this.play() : this.pause();\n  }\n\n  setVolume(newVolume: number): void {\n    this.volume = newVolume;\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  getNextSong(): Song | null {\n    // Mock: devolver la misma canción para el prototipo\n    return this.currentMusic.song;\n  }\n\n  onNextSong(): void {\n    const nextSong = this.getNextSong();\n    if (nextSong) {\n      this.currentMusic = { ...this.currentMusic, song: nextSong };\n    }\n  }\n\n  onPlayPauseClick(): void {\n    this.togglePlayPause();\n  }\n\n  onVolumeChange(volume: number): void {\n    this.setVolume(volume);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/CurrentSongComponent.html": {
      url: "components/CurrentSongComponent.html",
      title: "component - CurrentSongComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CurrentSongComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/currentsong/current-song.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-current-song\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./current-song.css\n            \n\n\n\n            \n                templateUrl\n                ./currentsong.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSong\n                            \n                            \n                                showLyricsPanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFallbackGradient\n                            \n                            \n                                    Private\n                                extractColorsFromImage\n                            \n                            \n                                    Private\n                                findDominantColor\n                            \n                            \n                                    Private\n                                generateGradient\n                            \n                            \n                                goBack\n                            \n                            \n                                    Private\n                                loadCurrentSong\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageError\n                            \n                            \n                                onImageLoad\n                            \n                            \n                                onProgressClick\n                            \n                            \n                                skipNext\n                            \n                            \n                                skipPrevious\n                            \n                            \n                                toggleLyricsPanel\n                            \n                            \n                                togglePlayPause\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef, document: Document, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/currentsong/current-song.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyFallbackGradient\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFallbackGradient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractColorsFromImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractColorsFromImage(img: HTMLImageElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                        HTMLImageElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        findDominantColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDominantColor(colors: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                colors\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateGradient\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateGradient(color: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadCurrentSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCurrentSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:224\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageError\n                        \n                    \n                \n            \n            \n                \nonImageError(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageLoad\n                        \n                    \n                \n            \n            \n                \nonImageLoad(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProgressClick\n                        \n                    \n                \n            \n            \n                \nonProgressClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skipNext\n                        \n                    \n                \n            \n            \n                \nskipNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skipPrevious\n                        \n                    \n                \n            \n            \n                \nskipPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLyricsPanel\n                        \n                    \n                \n            \n            \n                \ntoggleLyricsPanel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlayPause\n                        \n                    \n                \n            \n            \n                \ntogglePlayPause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/currentsong/current-song.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Song | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/currentsong/current-song.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLyricsPanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/currentsong/current-song.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n  Inject,\n  PLATFORM_ID,\n} from \"@angular/core\";\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\n\ninterface Song {\n  id: number;\n  title: string;\n  artist: string;\n  album: string;\n  duration: string;\n  currentTime: string;\n  progress: number;\n  cover: string;\n  gradient: string;\n  isPlaying: boolean;\n  lyrics?: string;\n}\n\n@Component({\n  selector: \"app-current-song\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./currentsong.html\",\n  styleUrls: [\"./current-song.css\"],\n})\nexport class CurrentSongComponent implements OnInit, OnDestroy {\n  currentSong: Song | null = null;\n  showLyricsPanel = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly cdr: ChangeDetectorRef,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n  ) {}\n\n  ngOnInit() {\n    this.loadCurrentSong();\n    // Evitar scroll en el body solo en el navegador\n    if (isPlatformBrowser(this.platformId)) {\n      this.document.body.style.overflow = \"hidden\";\n      this.document.body.style.margin = \"0\";\n      this.document.body.style.padding = \"0\";\n    }\n  }\n\n  ngOnDestroy() {\n    // Restaurar scroll cuando se salga de la vista solo en el navegador\n    if (isPlatformBrowser(this.platformId)) {\n      this.document.body.style.overflow = \"\";\n      this.document.body.style.margin = \"\";\n      this.document.body.style.padding = \"\";\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\"Imagen de canción cargada:\", img.src);\n\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error(\"Error al cargar imagen de canción:\", event);\n    this.applyFallbackGradient();\n  }\n\n  togglePlayPause() {\n    if (this.currentSong) {\n      this.currentSong.isPlaying = !this.currentSong.isPlaying;\n      console.log(this.currentSong.isPlaying ? \"Reproduciendo\" : \"Pausado\");\n    }\n  }\n\n  toggleLyricsPanel() {\n    this.showLyricsPanel = !this.showLyricsPanel;\n    console.log(\n      \"Panel de letras:\",\n      this.showLyricsPanel ? \"Abierto\" : \"Cerrado\",\n    );\n  }\n\n  goBack() {\n    this.router.navigate([\"/home\"]);\n  }\n\n  skipPrevious() {\n    console.log(\"Canción anterior\");\n    // Aquí iría la lógica para cambiar a la canción anterior\n  }\n\n  skipNext() {\n    console.log(\"Siguiente canción\");\n    // Aquí iría la lógica para cambiar a la siguiente canción\n  }\n\n  onProgressClick(event: MouseEvent) {\n    const progressBar = event.currentTarget as HTMLElement;\n    const rect = progressBar.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const width = rect.width;\n    const newProgress = (clickX / width) * 100;\n\n    if (this.currentSong) {\n      this.currentSong.progress = newProgress;\n      console.log(\"Nuevo progreso:\", newProgress + \"%\");\n    }\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    if (!isPlatformBrowser(this.platformId)) {\n      this.applyFallbackGradient();\n      return;\n    }\n\n    try {\n      const canvas = this.document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n\n      if (!ctx) {\n        console.error(\"No se pudo obtener contexto 2D del canvas\");\n        return;\n      }\n\n      const analysisSize = 150;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      img.crossOrigin = \"anonymous\";\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      const colors = [];\n      const samples = 30;\n\n      for (let i = 0; i  200 && r + g + b > 50 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        const gradient = this.generateGradient(dominantColor);\n\n        if (this.currentSong) {\n          this.currentSong.gradient = gradient;\n          this.cdr.detectChanges();\n        }\n      } else {\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error(\"Error al extraer colores:\", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.currentSong) {\n      this.currentSong.gradient =\n        \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\";\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      const key = `${Math.floor(color.r / 25) * 25}-${Math.floor(color.g / 25) * 25}-${Math.floor(color.b / 25) * 25}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n    const darkerColor = `rgb(${Math.max(0, color.r - 80)}, ${Math.max(0, color.g - 80)}, ${Math.max(0, color.b - 80)})`;\n    const lighterColor = `rgb(${Math.min(255, color.r + 50)}, ${Math.min(255, color.g + 50)}, ${Math.min(255, color.b + 50)})`;\n\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  180) {\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadCurrentSong() {\n    // Simulando datos de la canción actual\n    this.currentSong = {\n      id: 1,\n      title: \"Feel Good Inc.\",\n      artist: \"Gorillaz\",\n      album: \"Demon Days\",\n      duration: \"3:41\",\n      currentTime: \"1:23\",\n      progress: 37,\n      cover: \"/assets/gorillaz2.jpg\",\n      gradient: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n      isPlaying: true,\n    };\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n        \n      \n      Reproduciendo ahora\n\n      \n      \n        \n          \n        \n      \n    \n\n    \n    \n      \n        \n        \n      \n    \n\n    \n    \n\n    \n    \n      {{ currentSong.title }}\n      {{ currentSong.artist }}\n      {{ currentSong.album }}\n    \n\n    \n    \n      \n        {{ currentSong.currentTime }}\n        {{ currentSong.duration }}\n      \n      \n        \n          \n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n          \n        \n      \n\n      \n        \n          \n        \n        \n          \n        \n      \n\n      \n        \n          \n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      Lyrics:\n      \n        \n          \n        \n      \n    \n\n    \n      \n        City's breaking down on a camel's back\n        \n          They just have to go, 'cause they don't know wack\n        \n        \n          So while you fill the streets, it's appealing to see\n        \n        \n          You won't get out the county, 'cause you're bad and free\n        \n        \n          You've got a new horizon, it's ephemeral style\n        \n        A melancholy town where we never smile\n        And all I wanna hear is the message beep\n        My dreams, they got a kissing\n        'Cause I don't get sleep, no\n\n        Windmill, windmill for the land\n        Turn forever, hand in hand\n        Take it all in on your stride\n        It is ticking, falling down\n        Love forever, love has freely\n        Turned forever, you and me\n        Windmill, windmill for the land\n        Is everybody in?\n\n        Laughing gas these hazmats, fast cats\n        Lining 'em up like ass cracks\n        Play these ponies at the track\n        It's my chocolate attack\n        \n          Shit, I'm stepping in the heart of this here (yeah)\n        \n        Care Bear rappin' in harder this year (yeah)\n        Watch me as I gravitate, ha-ha-ha-ha-ha\n      \n    \n  \n\n\n\n\n  \n    \n    Cargando canción...\n  \n\n\n    \n\n    \n                \n                    ./current-song.css\n                \n                /* Container principal - Pantalla completa sin scroll */\n.current-song-container {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 1rem;\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  animation: fadeIn 0.5s ease-out;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n/* El contenedor principal cubre toda la pantalla con gradiente */\n.main-container {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column; /* Mobile first: columna por defecto */\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n/* El reproductor ocupa toda la pantalla por defecto */\n.reproductor-content {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 1rem;\n  color: white;\n  overflow: hidden;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  animation: fadeIn 0.5s ease-out;\n}\n\n/* En móvil, cuando las letras están activas, el reproductor se reduce */\n.main-container.with-lyrics .reproductor-content {\n  height: 50vh; /* Ocupa la mitad superior en móvil */\n  padding: 0.5rem; /* Menor padding en móvil */\n}\n\n/* Ajustar tamaños en móvil cuando las letras están activas */\n.main-container.with-lyrics .song-artwork-wrapper {\n  width: min(120px, 30vw);\n  height: min(120px, 30vw);\n  max-width: 150px;\n  max-height: 150px;\n}\n\n.main-container.with-lyrics .song-title {\n  font-size: min(1.2rem, 5vw);\n}\n\n.main-container.with-lyrics .song-artist {\n  font-size: min(0.9rem, 4vw);\n}\n\n.main-container.with-lyrics .flexible-spacer {\n  min-height: 0.5rem;\n}\n\n.main-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 1;\n}\n\n.main-container > * {\n  position: relative;\n  z-index: 2;\n}\n\n/* Header */\n.current-song-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n  flex: 0 0 auto;\n}\n\n.back-button {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(10px);\n}\n\n.back-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(1.05);\n}\n\n.current-song-title {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  font-size: 1.125rem;\n  font-weight: 600;\n  margin: 0;\n  opacity: 0.9;\n}\n\n/* Artwork de la canción - Optimizado para pantalla completa */\n.song-artwork-container {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1rem 0;\n  max-height: 35vh; /* Reducido para dar más espacio a los controles */\n}\n\n/* Espaciador flexible para centrar el contenido */\n.flexible-spacer {\n  flex: 1;\n  min-height: 1rem;\n}\n\n.song-artwork-wrapper {\n  position: relative;\n  width: min(200px, 60vw);\n  height: min(200px, 60vw);\n  max-width: 250px;\n  max-height: 250px;\n  border-radius: 1rem;\n  overflow: hidden;\n  box-shadow:\n    0 25px 50px -12px rgba(0, 0, 0, 0.5),\n    0 0 0 1px rgba(255, 255, 255, 0.1);\n  animation: slideUp 0.6s ease-out 0.2s both;\n  transition: all 0.3s ease;\n}\n\n.song-artwork {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.song-artwork:hover {\n  transform: scale(1.05);\n}\n\n/* Información de la canción - Espaciado optimizado */\n.song-info {\n  text-align: center;\n  margin-bottom: 1rem;\n  animation: slideUp 0.6s ease-out 0.4s both;\n  max-width: 90vw;\n  flex: 0 0 auto;\n}\n\n.song-title {\n  font-size: min(1.75rem, 7vw);\n  font-weight: 700;\n  margin: 0 0 0.5rem 0;\n  line-height: 1.2;\n}\n\n.song-artist {\n  font-size: min(1.25rem, 5vw);\n  font-weight: 500;\n  margin: 0 0 0.25rem 0;\n  opacity: 0.9;\n}\n\n.song-album {\n  font-size: min(1rem, 4vw);\n  margin: 0;\n  opacity: 0.7;\n}\n\n/* Sección de progreso - Espaciado optimizado */\n.progress-section {\n  width: 100%;\n  margin-bottom: 1rem;\n  animation: slideUp 0.6s ease-out 0.6s both;\n  flex: 0 0 auto;\n}\n\n.time-display {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.75rem;\n  font-size: 0.875rem;\n  opacity: 0.8;\n}\n\n.progress-bar-container {\n  cursor: pointer;\n  padding: 0.5rem 0;\n}\n\n.progress-bar {\n  position: relative;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 2px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background: white;\n  border-radius: 2px;\n  transition: width 0.1s ease;\n}\n\n.progress-thumb {\n  position: absolute;\n  top: 50%;\n  width: 12px;\n  height: 12px;\n  background: white;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  transition: left 0.1s ease;\n}\n\n/* Controles de reproducción - Espaciado optimizado */\n.player-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1.5rem;\n  margin-bottom: 1rem;\n  animation: slideUp 0.6s ease-out 0.8s both;\n  flex: 0 0 auto;\n}\n\n.control-button {\n  border: none;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(10px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.control-button.secondary {\n  width: 3rem;\n  height: 3rem;\n}\n\n.control-button.primary {\n  width: 4rem;\n  height: 4rem;\n  background: rgba(255, 255, 255, 0.9);\n  color: #1f2937;\n}\n\n.control-button:hover {\n  transform: scale(1.05);\n}\n\n.control-button.secondary:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n.control-button.primary:hover {\n  background: white;\n}\n\n/* Footer */\n.song-footer {\n  width: 100%;\n  animation: slideUp 0.6s ease-out 1s both;\n  flex: 0 0 auto;\n  margin-bottom: 1rem;\n}\n\n.footer-actions {\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n}\n\n.action-button {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(10px);\n}\n\n.action-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(1.05);\n}\n\n/* Loading state - Pantalla completa */\n.loading-container {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n}\n\n.loading-content {\n  text-align: center;\n  color: white;\n}\n\n.loading-spinner {\n  width: 3rem;\n  height: 3rem;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-top: 3px solid white;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin: 0 auto 1rem;\n}\n\n/* Animaciones */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Responsive - Tablet y Desktop */\n@media (min-width: 640px) {\n  .current-song-container {\n    padding: 2rem;\n  }\n\n  .song-artwork-wrapper {\n    width: 350px;\n    height: 350px;\n  }\n\n  .song-title {\n    font-size: 2.25rem;\n  }\n\n  .song-artist {\n    font-size: 1.5rem;\n  }\n\n  .current-song-title {\n    font-size: 1.25rem;\n  }\n}\n\n/* Responsive - Desktop grande */\n@media (min-width: 1024px) {\n  .current-song-container {\n    padding: 3rem;\n  }\n\n  .song-artwork-wrapper {\n    width: min(400px, 50vw);\n    height: min(400px, 50vw);\n  }\n\n  .song-title {\n    font-size: min(2.5rem, 6vw);\n  }\n\n  .player-controls {\n    gap: 2rem;\n  }\n\n  .control-button.secondary {\n    width: 3.5rem;\n    height: 3.5rem;\n  }\n\n  .control-button.primary {\n    width: 4.5rem;\n    height: 4.5rem;\n  }\n}\n\n/* Evitar scroll en toda la página cuando esta vista está activa */\n:host {\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n\n/* Asegurar que no hay margin/padding del body afectando */\n:host-context(body) {\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n/* Botón de letras en el header */\n.lyrics-button {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  backdrop-filter: blur(10px);\n  margin-left: auto;\n}\n\n.lyrics-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(1.05);\n}\n\n.lyrics-button.active {\n  background: rgba(255, 255, 255, 0.4);\n  color: #fff;\n}\n\n/* Panel de letras deslizante - Mobile first */\n.lyrics-panel {\n  width: 100vw;\n  height: 0; /* Oculto por defecto en móvil */\n  transition: height 0.3s ease-in-out;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  overflow: hidden;\n  position: relative;\n  z-index: 2;\n}\n\n/* En móvil, cuando las letras están activas, ocupan la mitad inferior */\n.main-container.with-lyrics .lyrics-panel {\n  height: 50vh;\n}\n\n.lyrics-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  flex: 0 0 auto;\n}\n\n.lyrics-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: white;\n}\n\n.close-lyrics-button {\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.close-lyrics-button:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: scale(1.05);\n}\n\n.lyrics-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 1rem;\n}\n\n.lyrics-text {\n  max-width: 100%;\n  margin: 0 auto;\n}\n\n.lyrics-line {\n  margin: 0.75rem 0;\n  font-size: 1.1rem;\n  line-height: 1.6;\n  opacity: 0.7;\n  transition: all 0.3s ease;\n  padding: 0.5rem 0;\n  color: white;\n}\n\n.lyrics-line.active {\n  opacity: 1;\n  color: white;\n  font-weight: 600;\n  transform: scale(1.02);\n}\n\n.lyrics-line.chorus {\n  font-weight: 500;\n  color: white;\n}\n\n/* Responsive para pantallas desktop (768px+) */\n@media (min-width: 769px) {\n  /* En desktop, cambiar a layout horizontal */\n  .main-container {\n    flex-direction: row;\n  }\n\n  /* En desktop, el reproductor vuelve a ocupar toda la pantalla por defecto */\n  .reproductor-content {\n    height: 100vh;\n  }\n\n  /* En desktop con letras activas, layout lado a lado */\n  .main-container.with-lyrics .reproductor-content {\n    width: 50vw;\n    height: 100vh; /* Volver a altura completa en desktop */\n  }\n\n  /* En desktop, panel de letras al lado derecho */\n  .lyrics-panel {\n    width: 0;\n    height: 100vh;\n    transition: width 0.3s ease-in-out;\n  }\n\n  .main-container.with-lyrics .lyrics-panel {\n    width: 50vw;\n    height: 100vh;\n  }\n\n  /* En desktop, ajustar tamaño de artwork cuando las letras están activas */\n  .main-container.with-lyrics .song-artwork-wrapper {\n    width: min(150px, 40vw);\n    height: min(150px, 40vw);\n    max-width: 180px;\n    max-height: 180px;\n  }\n}\n\n/* Ajustes adicionales para vista dividida - Solo en desktop */\n@media (min-width: 769px) {\n  .main-container.with-lyrics .song-info {\n    margin-bottom: 0.5rem;\n  }\n\n  .main-container.with-lyrics .song-title {\n    font-size: min(1.5rem, 6vw);\n  }\n\n  .main-container.with-lyrics .song-artist {\n    font-size: min(1rem, 4vw);\n  }\n\n  .main-container.with-lyrics .song-album {\n    font-size: min(0.875rem, 3.5vw);\n  }\n\n  .main-container.with-lyrics .progress-section {\n    margin-bottom: 0.75rem;\n  }\n\n  .main-container.with-lyrics .player-controls {\n    margin-bottom: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Reproduciendo ahora                                                                                                              {{ currentSong.title }}      {{ currentSong.artist }}      {{ currentSong.album }}                          {{ currentSong.currentTime }}        {{ currentSong.duration }}                                                                                                                                                                                                                                                                                                                                                                                                                              Lyrics:                                                            City\\'s breaking down on a camel\\'s back                  They just have to go, \\'cause they don\\'t know wack                          So while you fill the streets, it\\'s appealing to see                          You won\\'t get out the county, \\'cause you\\'re bad and free                          You\\'ve got a new horizon, it\\'s ephemeral style                A melancholy town where we never smile        And all I wanna hear is the message beep        My dreams, they got a kissing        \\'Cause I don\\'t get sleep, no        Windmill, windmill for the land        Turn forever, hand in hand        Take it all in on your stride        It is ticking, falling down        Love forever, love has freely        Turned forever, you and me        Windmill, windmill for the land        Is everybody in?        Laughing gas these hazmats, fast cats        Lining \\'em up like ass cracks        Play these ponies at the track        It\\'s my chocolate attack                  Shit, I\\'m stepping in the heart of this here (yeah)                Care Bear rappin\\' in harder this year (yeah)        Watch me as I gravitate, ha-ha-ha-ha-ha                      Cargando canción...  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CurrentSongComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ExploreComponent.html": {
      url: "components/ExploreComponent.html",
      title: "component - ExploreComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ExploreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/explore/explore.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-explore\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MusicsTable\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./explore.html\n            \n\n\n\n            \n                styleUrl\n                ./explore.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genres\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/explore/explore.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"Rock\", \"Pop\", \"Jazz\", \"Electronic\", \"Hip Hop\", \"Classical\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/explore/explore.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MusicsTable } from \"../../components/musics-table/musics-table\";\n\n@Component({\n  selector: \"app-explore\",\n  standalone: true,\n  imports: [CommonModule, MusicsTable],\n  templateUrl: \"./explore.html\",\n  styleUrl: \"./explore.css\",\n})\nexport class ExploreComponent {\n  genres = [\"Rock\", \"Pop\", \"Jazz\", \"Electronic\", \"Hip Hop\", \"Classical\"];\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  Explorar\n\n  \n  \n    Géneros\n    \n      \n        {{ genre }}\n      \n    \n  \n\n  \n  \n    Tendencias\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Explorar        Géneros                  {{ genre }}                    Tendencias      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExploreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/Greeting.html": {
      url: "components/Greeting.html",
      title: "component - Greeting",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  Greeting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/greeting/greeting.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-greeting\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./greeting.html\n            \n\n\n\n            \n                styleUrl\n                ./greeting.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                greeting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setGreeting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/greeting/greeting.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGreeting\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGreeting()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/greeting/greeting.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        greeting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/greeting/greeting.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-greeting\",\n  imports: [],\n  templateUrl: \"./greeting.html\",\n  styleUrl: \"./greeting.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Greeting implements OnInit {\n  greeting = \"\";\n\n  ngOnInit(): void {\n    this.setGreeting();\n  }\n\n  private setGreeting(): void {\n    const currentTime = new Date();\n    const currentHour = currentTime.getHours();\n\n    if (currentHour \n    \n\n    \n        \n  \n    {{ greeting }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ greeting }}  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Greeting'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/HomeComponent.html": {
      url: "components/HomeComponent.html",
      title: "component - HomeComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                Card\n                                Greeting\n                                MusicsTable\n                                PlayListItemCard\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n            \n                styleUrl\n                ./home.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                featuredPlaylists\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.ts:42\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        featuredPlaylists\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      title: \"Hits del Rock\",\n      cover: \"/assets/playlists/playlist1.jpg\",\n      artists: [\"Queen\", \"Led Zeppelin\", \"The Beatles\"],\n    },\n    {\n      id: 2,\n      title: \"Pop Latino\",\n      cover: \"/assets/playlists/playlist2.webp\",\n      artists: [\"Shakira\", \"Jesse & Joy\", \"Manu Chao\"],\n    },\n    {\n      id: 3,\n      title: \"Jazz Clásico\",\n      cover: \"/assets/playlists/playlist3.jpg\",\n      artists: [\"Miles Davis\", \"John Coltrane\", \"Bill Evans\"],\n    },\n    {\n      id: 4,\n      title: \"Chill Vibes\",\n      cover: \"/assets/playlists/playlist4.jpg\",\n      artists: [\"Bon Iver\", \"The Paper Kites\", \"Iron & Wine\"],\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Card } from \"../../components/card/card\";\nimport { Greeting } from \"../../components/greeting/greeting\";\nimport { MusicsTable } from \"../../components/musics-table/musics-table\";\nimport { PlayListItemCard } from \"../../components/play-list-item-card/play-list-item-card\";\n\n@Component({\n  selector: \"app-home\",\n  standalone: true,\n  imports: [CommonModule, Card, Greeting, MusicsTable, PlayListItemCard],\n  templateUrl: \"./home.html\",\n  styleUrl: \"./home.css\",\n})\nexport class HomeComponent {\n  // Datos mock para las playlists\n  featuredPlaylists = [\n    {\n      id: 1,\n      title: \"Hits del Rock\",\n      cover: \"/assets/playlists/playlist1.jpg\",\n      artists: [\"Queen\", \"Led Zeppelin\", \"The Beatles\"],\n    },\n    {\n      id: 2,\n      title: \"Pop Latino\",\n      cover: \"/assets/playlists/playlist2.webp\",\n      artists: [\"Shakira\", \"Jesse & Joy\", \"Manu Chao\"],\n    },\n    {\n      id: 3,\n      title: \"Jazz Clásico\",\n      cover: \"/assets/playlists/playlist3.jpg\",\n      artists: [\"Miles Davis\", \"John Coltrane\", \"Bill Evans\"],\n    },\n    {\n      id: 4,\n      title: \"Chill Vibes\",\n      cover: \"/assets/playlists/playlist4.jpg\",\n      artists: [\"Bon Iver\", \"The Paper Kites\", \"Iron & Wine\"],\n    },\n  ];\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n        Descubre tu próxima canción favorita\n      \n      \n        \n          Reproducir todo\n        \n      \n    \n  \n\n  \n  \n    \n    \n\n    \n    \n\n    \n    \n  \n\n  \n  \n    \n      \n        Mixes para ti\n      \n      \n        Ver todo\n      \n    \n    \n      @for (playlist of featuredPlaylists; track playlist.id) {\n      \n      }\n    \n  \n\n  \n  \n    \n      \n        \n          Trending Now\n        \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Descubre tu próxima canción favorita                              Reproducir todo                                                                        Mixes para ti                    Ver todo                    @for (playlist of featuredPlaylists; track playlist.id) {            }                                      Trending Now                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interceptors/HttpErrorInterceptor.html": {
      url: "interceptors/HttpErrorInterceptor.html",
      title: "interceptor - HttpErrorInterceptor",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/interceptors/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleTokenExpired\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/interceptors/http-error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTokenExpired(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/interceptors/http-error.interceptor.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/interceptors/http-error.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PLATFORM_ID)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/interceptors/http-error.interceptor.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject, PLATFORM_ID } from "@angular/core";\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n} from "@angular/common/http";\nimport { Observable, throwError, from } from "rxjs";\nimport { catchError, switchMap } from "rxjs/operators";\nimport { IAuthRepository } from "@app/domain/repositories/i-auth.repository";\nimport { isPlatformBrowser } from "@angular/common";\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  private readonly platformId = inject(PLATFORM_ID);\n\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = "Ha ocurrido un error inesperado";\n\n        // Verificar si ErrorEvent está disponible (solo en el navegador)\n        const isClientError =\n          isPlatformBrowser(this.platformId) &&\n          error.error instanceof ErrorEvent;\n\n        if (isClientError) {\n          // Error del lado del cliente\n          errorMessage = `Error: ${error.error.message}`;\n        } else {\n          // Error del lado del servidor\n          switch (error.status) {\n            case 400:\n              errorMessage = error.error?.message || "Solicitud incorrecta";\n              break;\n            case 401:\n              errorMessage = "No autorizado. Por favor, inicia sesión nuevamente";\n              \n              // Si el token ha expirado, intentar renovarlo\n              if (error.error?.code === "TOKEN_EXPIRED") {\n                return this.handleTokenExpired(request, next);\n              }\n              break;\n            case 403:\n              errorMessage = "Acceso denegado";\n              break;\n            case 404:\n              errorMessage = "Recurso no encontrado";\n              break;\n            case 422:\n              if (error.error?.errors && Array.isArray(error.error.errors)) {\n                errorMessage = error.error.errors.join(", ");\n              } else {\n                errorMessage = error.error?.message || "Datos no válidos";\n              }\n              break;\n            case 429:\n              errorMessage = "Demasiadas solicitudes. Intenta nuevamente más tarde";\n              break;\n            case 500:\n              errorMessage = "Error interno del servidor";\n              break;\n            case 503:\n              errorMessage = "Servicio no disponible temporalmente";\n              break;\n            default:\n              if (error.error?.message) {\n                errorMessage = error.error.message;\n              }\n          }\n        }\n\n        console.error("HTTP Error:", {\n          status: error.status,\n          message: errorMessage,\n          url: error.url,\n        });\n\n        return throwError(() => new Error(errorMessage));\n      }),\n    );\n  }\n\n  private handleTokenExpired(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    return from(this.authRepository.refreshSession()).pipe(\n      switchMap((session) => {\n        // Token renovado exitosamente, reintentar la solicitud original\n        const newToken = session?.token;\n        if (!newToken) {\n          return throwError(() => new Error("Sesión expirada. Por favor, inicia sesión nuevamente"));\n        }\n        const authRequest = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${newToken}`,\n          },\n        });\n        return next.handle(authRequest);\n      }),\n      catchError((refreshError) => {\n        console.warn("Error al renovar token:", refreshError);\n        return throwError(() => new Error("Sesión expirada. Por favor, inicia sesión nuevamente"));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/IAuthRepository.html": {
      url: "classes/IAuthRepository.html",
      title: "class - IAuthRepository",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IAuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCurrentSession\n                            \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                logout\n                            \n                            \n                                    Abstract\n                                refreshSession\n                            \n                            \n                                    Abstract\n                                register\n                            \n                            \n                                    Abstract\n                                sendPasswordResetEmail\n                            \n                            \n                                    Abstract\n                                signInWithProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        refreshSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(credentials: RegisterCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            RegisterCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendPasswordResetEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signInWithProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithProvider(provider: "google" | "github" | "facebook" | "twitter" | "discord")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.repository.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                        "google" | "github" | "facebook" | "twitter" | "discord"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \'../entities/user.entity\';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: string;\n}\n\nexport interface AuthSession {\n  user: User | null;\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nexport abstract class IAuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentSession(): Promise;\n  abstract refreshSession(): Promise;\n  abstract sendPasswordResetEmail(email: string): Promise;\n  abstract signInWithProvider(provider: \'google\' | \'github\' | \'facebook\' | \'twitter\' | \'discord\'): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/IAuthService.html": {
      url: "classes/IAuthService.html",
      title: "class - IAuthService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getSession\n                            \n                            \n                                    Abstract\n                                getUser\n                            \n                            \n                                    Abstract\n                                initializeSession\n                            \n                            \n                                    Abstract\n                                isAuthenticated\n                            \n                            \n                                    Abstract\n                                onAuthStateChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AuthSession | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        initializeSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        onAuthStateChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onAuthStateChange(callback: (session: AuthSession | null) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/repositories/i-auth.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AuthSession } from \'./i-auth.repository\';\n\nexport abstract class IAuthService {\n  abstract initializeSession(): Promise;\n  abstract getSession(): AuthSession | null;\n  abstract isAuthenticated(): boolean;\n  abstract getUser(): any;\n  abstract onAuthStateChange(callback: (session: AuthSession | null) => void): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/LoginComponent.html": {
      url: "components/LoginComponent.html",
      title: "component - LoginComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/auth/login/login.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                            MatIcon\n                \n            \n\n            \n                styleUrls\n                ./login.css\n            \n\n\n\n            \n                templateUrl\n                ./login.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                loginUseCase\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ROUTES_CONFIG_AUTH\n                            \n                            \n                                    Private\n                                    Readonly\n                                socialLoginUseCase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                loginWithDiscord\n                            \n                            \n                                loginWithGithub\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                loginWithTwitter\n                            \n                            \n                                    Async\n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithDiscord\n                        \n                    \n                \n            \n            \n                \nloginWithDiscord()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGithub\n                        \n                    \n                \n            \n            \n                \nloginWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithTwitter\n                        \n                    \n                \n            \n            \n                \nloginWithTwitter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/login/login.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginCredentials\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: '',\n    password: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loginUseCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoginUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ROUTES_CONFIG_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ROUTES_CONFIG_AUTH\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        socialLoginUseCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SocialLoginUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/login/login.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginUseCase } from '../../../../domain/usecases/login.usecase';\nimport { LoginCredentials } from '../../../../domain/repositories/i-auth.repository';\nimport { SocialLoginUseCase } from '../../../../domain/usecases/social-login.usecase';\nimport { MatIcon } from '@angular/material/icon';\nimport { ROUTES_CONFIG_AUTH } from '@app/config/routes-auth.config';\nimport {\n  AuthError,\n  ValidationError,\n  LoginError,\n  NetworkError,\n} from '@app/domain/errors/auth.errors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, MatIcon],\n  templateUrl: './login.html',\n  styleUrls: ['./login.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  protected readonly ROUTES_CONFIG_AUTH = ROUTES_CONFIG_AUTH;\n\n  private readonly socialLoginUseCase = inject(SocialLoginUseCase);\n  private readonly loginUseCase = inject(LoginUseCase);\n  private readonly router = inject(Router);\n\n  credentials: LoginCredentials = {\n    email: '',\n    password: '',\n  };\n\n  isLoading = signal(false);\n  error = signal(null);\n\n  async onLogin(): Promise {\n    if (this.isLoading()) return;\n\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    try {\n      const result = await this.loginUseCase.execute(this.credentials);\n      console.log('Login successful:', result);\n      this.router.navigate(['/home']);\n    } catch (error) {\n      this.handleError(error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  private handleError(error: any): void {\n    if (error instanceof ValidationError) {\n      this.error.set(error.message);\n    } else if (error instanceof LoginError) {\n      this.error.set('Credenciales inválidas. Verifica tu email y contraseña.');\n    } else if (error instanceof NetworkError) {\n      this.error.set(\n        'Error de conexión. Verifica tu internet e intenta de nuevo.',\n      );\n    } else if (error instanceof AuthError) {\n      this.error.set(error.message);\n    } else {\n      this.error.set('Error inesperado. Intenta de nuevo.');\n    }\n    console.error('Login error:', error);\n  }\n\n  loginWithGoogle() {\n    this.socialLoginUseCase.execute('google');\n  }\n\n  loginWithGithub() {\n    this.socialLoginUseCase.execute('github');\n  }\n\n  loginWithTwitter() {\n    this.socialLoginUseCase.execute('twitter');\n  }\n\n  loginWithDiscord() {\n    this.socialLoginUseCase.execute('discord');\n  }\n}\n\n    \n\n    \n        \n  \n    Iniciar Sesión\n\n    @if (error()) {\n    \n      {{ error() }}\n    \n    }\n\n    \n    \n      \n        Correo Electrónico\n        \n      \n\n      \n        Contraseña\n        \n      \n\n      \n        \n          \n          Recordarme\n        \n        \n          ¿Olvidaste tu\n            contraseña?\n        \n      \n\n      \n        \n          @if (isLoading()) { Iniciando sesión... } @else { Iniciar Sesión }\n        \n      \n\n      \n        \n          ¿No tienes una cuenta?\n          Regístrate aquí\n        \n      \n    \n    \n      \n        android Iniciar sesión con Google\n      \n      \n        commit Iniciar sesión con GitHub\n      \n      \n        close Iniciar sesión con Twitter|X\n      \n      \n        discord Iniciar sesión con Discord\n      \n    \n  \n\n\n  \n    © 2023 StreamFlow. Todos los derechos reservados.\n  \n\n    \n\n    \n                \n                    ./login.css\n                \n                .login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f9fafb;\n  width: 100%;\n  padding: 3rem 1rem;\n}\n\n.login-header {\n  max-width: 28rem;\n  width: 100%;\n  background-color: white;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.6);\n  border-radius: 0.5rem;\n  animation: slideUp 0.3s ease-out;\n}\n\n.login-form {\n  margin-top: 2rem;\n}\n\n.login-form input[type=\"email\"],\n.login-form input[type=\"password\"] {\n  appearance: none;\n  border-radius: 0.5rem;\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #d1d5db;\n  color: #111827;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.login-form input[type=\"email\"]:focus,\n.login-form input[type=\"password\"]:focus {\n  outline: none;\n  border-color: #000000;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n/* Animaciones */\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Iniciar Sesión    @if (error()) {          {{ error() }}        }                      Correo Electrónico                            Contraseña                                                Recordarme                          ¿Olvidaste tu            contraseña?                                      @if (isLoading()) { Iniciando sesión... } @else { Iniciar Sesión }                                      ¿No tienes una cuenta?          Regístrate aquí                                    android Iniciar sesión con Google                    commit Iniciar sesión con GitHub                    close Iniciar sesión con Twitter|X                    discord Iniciar sesión con Discord                  © 2023 StreamFlow. Todos los derechos reservados.  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/LoginCredentials.html": {
      url: "interfaces/LoginCredentials.html",
      title: "interface - LoginCredentials",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from "../entities/user.entity";\nimport { AuthToken } from "../entities/auth-token.entity";\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: AuthToken;\n  needsEmailConfirmation?: boolean;\n}\n\nexport abstract class AuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentUser(): Promise;\n  abstract refreshToken(refreshToken: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/LoginCredentials-1.html": {
      url: "interfaces/LoginCredentials-1.html",
      title: "interface - LoginCredentials-1",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: string;\n}\n\nexport interface AuthSession {\n  user: User | null;\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nexport abstract class IAuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentSession(): Promise;\n  abstract refreshSession(): Promise;\n  abstract sendPasswordResetEmail(email: string): Promise;\n  abstract signInWithProvider(provider: 'google' | 'github' | 'facebook' | 'twitter' | 'discord'): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/LoginDto.html": {
      url: "interfaces/LoginDto.html",
      title: "interface - LoginDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/LoginError.html": {
      url: "classes/LoginError.html",
      title: "class - LoginError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/LoginRequestDTO.html": {
      url: "interfaces/LoginRequestDTO.html",
      title: "interface - LoginRequestDTO",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequestDTO {\n  email: string;\n  password: string;\n}\nexport interface RegisterRequestDTO {\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/LoginUseCase.html": {
      url: "injectables/LoginUseCase.html",
      title: "injectable - LoginUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/login.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/login.usecase.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(credentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/login.usecase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/login.usecase.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport {\n  IAuthRepository,\n  LoginCredentials,\n  AuthResult,\n} from "../repositories/i-auth.repository";\nimport { ValidationError } from "../errors/auth.errors";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class LoginUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async execute(credentials: LoginCredentials): Promise {\n    if (!credentials.email || !credentials.password) {\n      throw new ValidationError("Email and password are required");\n    }\n\n    if (!this.isValidEmail(credentials.email)) {\n      throw new ValidationError("Invalid email format");\n    }\n\n    if (credentials.password.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/LogoutUseCase.html": {
      url: "injectables/LogoutUseCase.html",
      title: "injectable - LogoutUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogoutUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/logout.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/logout.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/logout.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { IAuthRepository } from "../repositories/i-auth.repository";\n\n@Injectable({ providedIn: "root" })\nexport class LogoutUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async execute(): Promise {\n    await this.authRepository.logout();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/MusicsTable.html": {
      url: "components/MusicsTable.html",
      title: "component - MusicsTable",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  MusicsTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/musics-table/musics-table.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-musics-table\n            \n\n\n            \n                imports\n                \n                                MusicsTablePlay\n                            MatIcon\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./musics-table.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlaylistId\n                            \n                            \n                                currentSong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isCurrentSong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                songs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/musics-table/musics-table.ts:33\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        songs\n                    \n                \n                \n                    \n                        Type :     Song[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/musics-table/musics-table.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSong\n                        \n                    \n                \n            \n            \n                \nisCurrentSong(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/musics-table/musics-table.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlaylistId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/musics-table/musics-table.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Song | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/musics-table/musics-table.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { MusicsTablePlay } from \"../musics-table-play/musics-table-play\";\nimport { MatIcon } from \"@angular/material/icon\";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\n@Component({\n  selector: \"app-musics-table\",\n  imports: [MusicsTablePlay, MatIcon],\n  templateUrl: \"./musics-table.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTable {\n  @Input() songs: Song[] = [];\n\n  // Mock state para el reproductor\n  currentSong: Song | null = null;\n  currentPlaylistId: number | null = null;\n\n  isCurrentSong(song: Song): boolean {\n    return (\n      this.currentSong?.id === song.id &&\n      this.currentPlaylistId === song.albumId\n    );\n  }\n\n  // Mock songs data para testing\n  constructor() {\n    this.songs = [\n      {\n        id: 1,\n        title: \"Bohemian Rhapsody\",\n        artists: [\"Queen\"],\n        album: \"A Night at the Opera\",\n        albumId: 101,\n        duration: \"5:55\",\n        image: \"/assets/playlists/playlist1.jpg\",\n      },\n      {\n        id: 2,\n        title: \"Hotel California\",\n        artists: [\"Eagles\"],\n        album: \"Hotel California\",\n        albumId: 102,\n        duration: \"6:30\",\n        image: \"/assets/playlists/playlist2.webp\",\n      },\n      {\n        id: 3,\n        title: \"Stairway to Heaven\",\n        artists: [\"Led Zeppelin\"],\n        album: \"Led Zeppelin IV\",\n        albumId: 103,\n        duration: \"8:02\",\n        image: \"/assets/playlists/playlist3.jpg\",\n      },\n      {\n        id: 4,\n        title: \"Sweet Child O' Mine\",\n        artists: [\"Guns N' Roses\"],\n        album: \"Appetite for Destruction\",\n        albumId: 104,\n        duration: \"5:03\",\n        image: \"/assets/playlists/playlist4.jpg\",\n      },\n    ];\n  }\n}\n\n    \n\n    \n        \n\n  @for (song of songs; track song.id; let i = $index) {\n  \n    \n      \n      \n        \n          {{ i + 1 }}\n        \n        \n          \n          \n        \n      \n\n      \n      \n        \n          \n        \n        \n          \n            {{ song.title }}\n          \n          {{ song.artists.join(', ') }}\n        \n      \n\n      \n      {{ song.duration }}\n    \n  \n  }\n\n\n\n\n  \n    \n      #\n      Título\n      Álbum\n      \n        schedule\n      \n    \n  \n\n  \n    \n    @for (song of songs; track song.id; let i = $index) {\n    \n      \n        \n          {{ i + 1 }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n        \n        \n          \n            {{ song.title }}\n          \n          {{ song.artists.join(', ') }}\n        \n      \n      {{ song.album }}\n      {{ song.duration }}\n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (song of songs; track song.id; let i = $index) {                                    {{ i + 1 }}                                                                                                                      {{ song.title }}                    {{ song.artists.join(\\', \\') }}                          {{ song.duration }}        }            #      Título      Álbum              schedule                      @for (song of songs; track song.id; let i = $index) {                            {{ i + 1 }}                                                                                                                {{ song.title }}                    {{ song.artists.join(\\', \\') }}                    {{ song.album }}      {{ song.duration }}        }  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicsTable'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/MusicsTablePlay.html": {
      url: "components/MusicsTablePlay.html",
      title: "component - MusicsTablePlay",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  MusicsTablePlay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/musics-table-play/musics-table-play.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-musics-table-play\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./musics-table-play.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentMusic\n                            \n                            \n                                isPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClick\n                            \n                            \n                                isCurrentSongRunning\n                            \n                            \n                                isNewSongOfAnotherPlaylist\n                            \n                            \n                                setNewCurrentMusic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isCurrentSong\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isCurrentSong\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/musics-table-play/musics-table-play.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        song\n                    \n                \n                \n                    \n                        Type :         Song\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/musics-table-play/musics-table-play.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/musics-table-play/musics-table-play.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSongRunning\n                        \n                    \n                \n            \n            \n                \nisCurrentSongRunning(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/musics-table-play/musics-table-play.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNewSongOfAnotherPlaylist\n                        \n                    \n                \n            \n            \n                \nisNewSongOfAnotherPlaylist(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/musics-table-play/musics-table-play.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewCurrentMusic\n                        \n                    \n                \n            \n            \n                \nsetNewCurrentMusic(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/musics-table-play/musics-table-play.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentMusic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurrentMusic\n\n                    \n                \n                \n                    \n                        Default value : {\n    song: null,\n    playlist: null,\n    songs: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/musics-table-play/musics-table-play.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/musics-table-play/musics-table-play.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { MatIconModule } from '@angular/material/icon';\nimport { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  albumId?: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: \"app-musics-table-play\",\nimports: [MatIconModule],\n  templateUrl: \"./musics-table-play.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTablePlay {\n  @Input() song!: Song;\n  @Input() isCurrentSong = false;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n  isPlaying = false;\n\n  isNewSongOfAnotherPlaylist(song: Song): boolean {\n    return this.currentMusic.playlist?.id !== song.albumId;\n  }\n\n  isCurrentSongRunning(song: Song): boolean {\n    return (\n      this.currentMusic.song?.id === song.id &&\n      this.currentMusic.playlist?.albumId === song.albumId &&\n      this.isPlaying\n    );\n  }\n\n  setNewCurrentMusic(song: Song): void {\n    // Mock: simular carga de nueva playlist\n    setTimeout(() => {\n      this.currentMusic = {\n        song: song,\n        playlist: {\n          id: song.albumId,\n          albumId: song.albumId,\n          name: `Album ${song.album}`,\n          description: `Playlist for ${song.album}`,\n        },\n        songs: [song],\n      };\n      this.isPlaying = true;\n    }, 100);\n  }\n\n  handleClick(song: Song): void {\n    if (this.isCurrentSongRunning(song)) {\n      this.isPlaying = false;\n      return;\n    }\n\n    if (this.isNewSongOfAnotherPlaylist(song)) {\n      this.setNewCurrentMusic(song);\n      return;\n    }\n\n    // La playlist es la misma, pero la canción es diferente\n    if (this.currentMusic.song?.id !== song.id) {\n      this.currentMusic = {\n        ...this.currentMusic,\n        song: song,\n      };\n    }\n    this.isPlaying = true;\n  }\n}\n\n    \n\n    \n        \n  @if (isCurrentSongRunning(song)) {\n    pause\n  } @else {\n    play_arrow\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (isCurrentSongRunning(song)) {    pause  } @else {    play_arrow  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicsTablePlay'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/NetworkError.html": {
      url: "classes/NetworkError.html",
      title: "class - NetworkError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NetworkError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Notification.html": {
      url: "interfaces/Notification.html",
      title: "interface - Notification",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/notification.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\" | \"warning\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\" | \"warning\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nexport interface Notification {\n  message: string;\n  type: 'success' | 'error' | 'info' | 'warning';\n  duration?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  private readonly notifications = signal([]);\n\n  getNotifications() {\n    return this.notifications.asReadonly();\n  }\n\n  showSuccess(message: string, duration = 3000) {\n    this.addNotification({ message, type: 'success', duration });\n  }\n\n  showError(message: string, duration = 5000) {\n    this.addNotification({ message, type: 'error', duration });\n  }\n\n  showInfo(message: string, duration = 4000) {\n    this.addNotification({ message, type: 'info', duration });\n  }\n\n  showWarning(message: string, duration = 4000) {\n    this.addNotification({ message, type: 'warning', duration });\n  }\n\n  private addNotification(notification: Notification) {\n    const currentNotifications = this.notifications();\n    this.notifications.set([...currentNotifications, notification]);\n\n    // Auto-remove notification after duration\n    if (notification.duration) {\n      setTimeout(() => {\n        this.removeNotification(notification);\n      }, notification.duration);\n    }\n  }\n\n  removeNotification(notificationToRemove: Notification) {\n    const currentNotifications = this.notifications();\n    this.notifications.set(\n      currentNotifications.filter(n => n !== notificationToRemove)\n    );\n  }\n\n  clearAll() {\n    this.notifications.set([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/NotificationService.html": {
      url: "injectables/NotificationService.html",
      title: "injectable - NotificationService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addNotification\n                            \n                            \n                                clearAll\n                            \n                            \n                                getNotifications\n                            \n                            \n                                removeNotification\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNotification(notification: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearAll\n                        \n                    \n                \n            \n            \n                \nclearAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotifications\n                        \n                    \n                \n            \n            \n                \ngetNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeNotification\n                        \n                    \n                \n            \n            \n                \nremoveNotification(notificationToRemove: Notification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notificationToRemove\n                                            \n                                                            Notification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    5000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    4000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/notification.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    4000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/notification.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\nexport interface Notification {\n  message: string;\n  type: 'success' | 'error' | 'info' | 'warning';\n  duration?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class NotificationService {\n  private readonly notifications = signal([]);\n\n  getNotifications() {\n    return this.notifications.asReadonly();\n  }\n\n  showSuccess(message: string, duration = 3000) {\n    this.addNotification({ message, type: 'success', duration });\n  }\n\n  showError(message: string, duration = 5000) {\n    this.addNotification({ message, type: 'error', duration });\n  }\n\n  showInfo(message: string, duration = 4000) {\n    this.addNotification({ message, type: 'info', duration });\n  }\n\n  showWarning(message: string, duration = 4000) {\n    this.addNotification({ message, type: 'warning', duration });\n  }\n\n  private addNotification(notification: Notification) {\n    const currentNotifications = this.notifications();\n    this.notifications.set([...currentNotifications, notification]);\n\n    // Auto-remove notification after duration\n    if (notification.duration) {\n      setTimeout(() => {\n        this.removeNotification(notification);\n      }, notification.duration);\n    }\n  }\n\n  removeNotification(notificationToRemove: Notification) {\n    const currentNotifications = this.notifications();\n    this.notifications.set(\n      currentNotifications.filter(n => n !== notificationToRemove)\n    );\n  }\n\n  clearAll() {\n    this.notifications.set([]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/PaginatedResponse.html": {
      url: "interfaces/PaginatedResponse.html",
      title: "interface - PaginatedResponse",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/PlayListItemCard.html": {
      url: "components/PlayListItemCard.html",
      title: "component - PlayListItemCard",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PlayListItemCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/play-list-item-card/play-list-item-card.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-play-list-item-card\n            \n\n\n            \n                imports\n                \n                                CardPlayButton\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./play-list-item-card.html\n            \n\n\n\n            \n                styleUrl\n                ./play-list-item-card.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onImageError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                playlist\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    artistsString\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n                \n                    \n                        Type :         Playlist\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/play-list-item-card/play-list-item-card.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onImageError\n                        \n                    \n                \n            \n            \n                \nonImageError(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/play-list-item-card/play-list-item-card.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        artistsString\n                    \n                \n\n                \n                    \n                        getartistsString()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/play-list-item-card/play-list-item-card.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { CardPlayButton } from \"../card-play-button/card-play-button\";\nimport { RouterLink } from \"@angular/router\";\n\nexport interface Playlist {\n  id: number;\n  cover: string;\n  title: string;\n  artists: string[];\n  color?: string;\n}\n\n@Component({\n  selector: \"app-play-list-item-card\",\n  imports: [CardPlayButton, RouterLink],\n  templateUrl: \"./play-list-item-card.html\",\n  styleUrl: \"./play-list-item-card.css\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayListItemCard {\n  @Input() playlist!: Playlist;\n\n  get artistsString(): string {\n    return this.playlist?.artists?.join(\", \") || \"\";\n  }\n\n  onImageError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = \"/assets/playlists/placeholder.jpg\";\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n    \n    \n      \n    \n\n    \n    \n      \n        {{ playlist.title }}\n      \n\n      \n        {{ artistsString }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      {{ playlist.title }}                    {{ artistsString }}            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayListItemCard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/Player.html": {
      url: "components/Player.html",
      title: "component - Player",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player/player.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player\n            \n\n\n            \n                imports\n                \n                                PlayerControlButtonBar\n                                PlayerCurrentSong\n                                PlayerSoundControl\n                                PlayerVolumeControl\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                audioRef\n                            \n                            \n                                currentMusic\n                            \n                            \n                                isPlaying\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextSong\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextSong\n                            \n                            \n                                onPlayPauseClick\n                            \n                            \n                                onVolumeChange\n                            \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                setVolume\n                            \n                            \n                                togglePlayPause\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextSong\n                        \n                    \n                \n            \n            \n                \ngetNextSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Song | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNextSong\n                        \n                    \n                \n            \n            \n                \nonNextSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlayPauseClick\n                        \n                    \n                \n            \n            \n                \nonPlayPauseClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(newVolume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newVolume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlayPause\n                        \n                    \n                \n            \n            \n                \ntogglePlayPause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player/player.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        audioRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('audioElement', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/player/player.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMusic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CurrentMusic\n\n                    \n                \n                \n                    \n                        Default value : {\n    song: null,\n    playlist: null,\n    songs: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player/player.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player/player.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player/player.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { PlayerControlButtonBar } from \"../player-control-button-bar/player-control-button-bar\";\nimport { PlayerCurrentSong } from \"../player-current-song/player-current-song\";\nimport { PlayerSoundControl } from \"../player-sound-control/player-sound-control\";\nimport { PlayerVolumeControl } from \"../player-volume-control/player-volume-control\";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: \"app-player\",\n  imports: [\n    PlayerControlButtonBar,\n    PlayerCurrentSong,\n    PlayerSoundControl,\n    PlayerVolumeControl,\n  ],\n  templateUrl: \"./player.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Player implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(\"audioElement\", { static: false })\n  audioRef!: ElementRef;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n\n  isPlaying = false;\n  volume = 0.5;\n\n  ngOnInit(): void {\n    // Inicializar con una canción mock\n    this.currentMusic = {\n      song: {\n        id: 1,\n        title: \"Bohemian Rhapsody\",\n        artists: [\"Queen\"],\n        album: \"A Night at the Opera\",\n        albumId: 101,\n        duration: \"5:55\",\n        image: \"/assets/playlists/playlist1.jpg\",\n      },\n      playlist: { id: 101 },\n      songs: [],\n    };\n  }\n\n  ngAfterViewInit(): void {\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (\n      this.audioRef?.nativeElement &&\n      typeof this.audioRef.nativeElement.pause === \"function\"\n    ) {\n      this.audioRef.nativeElement.pause();\n    }\n  }\n\n  play(): void {\n    this.audioRef?.nativeElement\n      ?.play?.()\n      .catch((e) => console.log(\"Error playing: \", e));\n  }\n\n  pause(): void {\n    this.audioRef?.nativeElement?.pause?.();\n  }\n\n  togglePlayPause(): void {\n    this.isPlaying = !this.isPlaying;\n    this.isPlaying ? this.play() : this.pause();\n  }\n\n  setVolume(newVolume: number): void {\n    this.volume = newVolume;\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  getNextSong(): Song | null {\n    // Mock: devolver la misma canción para el prototipo\n    return this.currentMusic.song;\n  }\n\n  onNextSong(): void {\n    const nextSong = this.getNextSong();\n    if (nextSong) {\n      this.currentMusic = { ...this.currentMusic, song: nextSong };\n    }\n  }\n\n  onPlayPauseClick(): void {\n    this.togglePlayPause();\n  }\n\n  onVolumeChange(volume: number): void {\n    this.setVolume(volume);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n  \n  \n    \n      \n      \n\n      \n      \n\n      \n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Player'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/PlayerControlButtonBar.html": {
      url: "components/PlayerControlButtonBar.html",
      title: "component - PlayerControlButtonBar",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PlayerControlButtonBar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-control-button-bar/player-control-button-bar.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-control-button-bar\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-control-button-bar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNextClick\n                            \n                            \n                                onPlayPauseClick\n                            \n                            \n                                onPreviousClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                playPauseClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isPlaying\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-control-button-bar/player-control-button-bar.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        playPauseClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-control-button-bar/player-control-button-bar.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNextClick\n                        \n                    \n                \n            \n            \n                \nonNextClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-control-button-bar/player-control-button-bar.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlayPauseClick\n                        \n                    \n                \n            \n            \n                \nonPlayPauseClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-control-button-bar/player-control-button-bar.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPreviousClick\n                        \n                    \n                \n            \n            \n                \nonPreviousClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-control-button-bar/player-control-button-bar.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: \"app-player-control-button-bar\",\n  imports: [MatIconModule],\n  templateUrl: \"./player-control-button-bar.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerControlButtonBar {\n  @Input() isPlaying = false;\n  @Output() playPauseClick = new EventEmitter();\n\n  onPlayPauseClick(): void {\n    this.playPauseClick.emit();\n  }\n\n  onPreviousClick(): void {\n    console.log(\"Previous song\");\n  }\n\n  onNextClick(): void {\n    console.log(\"Next song\");\n  }\n}\n\n    \n\n    \n        \n  \n  \n    skip_previous\n  \n\n  \n  \n    @if (isPlaying) {\n      pause\n    } @else {\n      play_arrow\n    }\n  \n\n  \n  \n    skip_next\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        skip_previous          @if (isPlaying) {      pause    } @else {      play_arrow    }          skip_next  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerControlButtonBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/PlayerCurrentSong.html": {
      url: "components/PlayerCurrentSong.html",
      title: "component - PlayerCurrentSong",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCurrentSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-current-song/player-current-song.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-current-song\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-current-song.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToCurrentSong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                song\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/player-current-song/player-current-song.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        song\n                    \n                \n                \n                    \n                        Type :     Song | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-current-song/player-current-song.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToCurrentSong\n                        \n                    \n                \n            \n            \n                \nnavigateToCurrentSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-current-song/player-current-song.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { Router } from \"@angular/router\";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\n@Component({\n  selector: \"app-player-current-song\",\n  imports: [MatIconModule],\n  templateUrl: \"./player-current-song.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerCurrentSong {\n  @Input() song: Song | null = null;\n\n  constructor(private readonly router: Router) {}\n\n  navigateToCurrentSong() {\n    if (this.song) {\n      this.router.navigate([\"/currentSong\"]);\n    }\n  }\n}\n\n    \n\n    \n        @if (song) {\n\n  \n    \n  \n  \n    \n      {{ song.title }}\n    \n    \n      {{ song.artists.join(', ') }}\n    \n  \n\n} @else {\n\n  \n    music_note\n  \n  \n    No hay canción\n    Selecciona una canción\n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (song) {                    {{ song.title }}              {{ song.artists.join(\\', \\') }}      } @else {      music_note        No hay canción    Selecciona una canción  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCurrentSong'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/PlayerSoundControl.html": {
      url: "components/PlayerSoundControl.html",
      title: "component - PlayerSoundControl",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PlayerSoundControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-sound-control/player-sound-control.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-sound-control\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./player-sound-control.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTime\n                            \n                            \n                                duration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSeek\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                audioElement\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    progressPercentage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        audioElement\n                    \n                \n                \n                    \n                        Type :     ElementRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-sound-control/player-sound-control.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-sound-control/player-sound-control.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-sound-control/player-sound-control.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-sound-control/player-sound-control.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player-sound-control/player-sound-control.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player-sound-control/player-sound-control.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        progressPercentage\n                    \n                \n\n                \n                    \n                        getprogressPercentage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/player-sound-control/player-sound-control.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ElementRef, OnInit,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-player-sound-control\",\n  imports: [],\n  templateUrl: \"./player-sound-control.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerSoundControl implements OnInit {\n  @Input() audioElement: ElementRef | null = null;\n\n  currentTime = 0;\n  duration = 0;\n\n  get progressPercentage(): number {\n    if (this.duration === 0) return 0;\n    return (this.currentTime / this.duration) * 100;\n  }\n\n  formatTime(seconds: number): string {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n  }\n\n  onSeek(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const seekTime = parseFloat(target.value);\n    this.currentTime = seekTime;\n\n    if (this.audioElement) {\n      this.audioElement.nativeElement.currentTime = seekTime;\n    }\n  }\n\n  // Mock methods para el prototipo\n  ngOnInit(): void {\n    // Simular duración de 3:45\n    this.duration = 225; // 3:45 en segundos\n\n    // Simular progreso\n    setInterval(() => {\n      if (this.currentTime \n    \n\n    \n        \n  \n   {{ formatTime(currentTime) }} \n\n  \n  \n    \n  \n\n  \n   {{ formatTime(duration) }} \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{ formatTime(currentTime) }}                {{ formatTime(duration) }} '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerSoundControl'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/PlayerVolumeControl.html": {
      url: "components/PlayerVolumeControl.html",
      title: "component - PlayerVolumeControl",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  PlayerVolumeControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-volume-control/player-volume-control.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player-volume-control\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./player-volume-control.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Math\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onVolumeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                volumeChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    volumePercentage\n                                \n                                \n                                    roundedVolumePercentage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        volume\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-volume-control/player-volume-control.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        volumeChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-volume-control/player-volume-control.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onVolumeChange\n                        \n                    \n                \n            \n            \n                \nonVolumeChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/player-volume-control/player-volume-control.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Math\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Math\n                    \n                \n                    \n                        \n                                Defined in src/app/components/player-volume-control/player-volume-control.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        volumePercentage\n                    \n                \n\n                \n                    \n                        getvolumePercentage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/player-volume-control/player-volume-control.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        roundedVolumePercentage\n                    \n                \n\n                \n                    \n                        getroundedVolumePercentage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/player-volume-control/player-volume-control.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@Component({\n  selector: \"app-player-volume-control\",\n  imports: [MatIconModule],\n  templateUrl: \"./player-volume-control.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerVolumeControl {\n  @Input() volume = 0.5;\n  @Output() volumeChange = new EventEmitter();\n\n  // Hacer Math disponible en el template\n  Math = Math;\n\n  onVolumeChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const newVolume = parseFloat(target.value);\n    this.volumeChange.emit(newVolume);\n  }\n\n  get volumePercentage(): number {\n    return this.volume * 100;\n  }\n\n  get roundedVolumePercentage(): number {\n    return Math.round(this.volumePercentage);\n  }\n}\n\n    \n\n    \n        \n  \n  @if (volume === 0) {\n    volume_off\n  } @else if (volume volume_down\n  } @else {\n    volume_up\n  }\n\n  \n  \n\n  \n   {{ roundedVolumePercentage }}% \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (volume === 0) {    volume_off  } @else if (volume volume_down  } @else {    volume_up  }         {{ roundedVolumePercentage }}% '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerVolumeControl'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Playlist.html": {
      url: "interfaces/Playlist.html",
      title: "interface - Playlist",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coverImage\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            songs\n                                        \n                                \n                                \n                                        \n                                            totalDuration\n                                        \n                                \n                                \n                                        \n                                            totalSongs\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs:     Song[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalDuration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSongs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSongs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Playlist-1.html": {
      url: "interfaces/Playlist-1.html",
      title: "interface - Playlist-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/musics-table-play/musics-table-play.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            albumId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatIconModule } from \'@angular/material/icon\';\nimport { ChangeDetectionStrategy, Component, Input } from "@angular/core";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  albumId?: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-musics-table-play",\nimports: [MatIconModule],\n  templateUrl: "./musics-table-play.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTablePlay {\n  @Input() song!: Song;\n  @Input() isCurrentSong = false;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n  isPlaying = false;\n\n  isNewSongOfAnotherPlaylist(song: Song): boolean {\n    return this.currentMusic.playlist?.id !== song.albumId;\n  }\n\n  isCurrentSongRunning(song: Song): boolean {\n    return (\n      this.currentMusic.song?.id === song.id &&\n      this.currentMusic.playlist?.albumId === song.albumId &&\n      this.isPlaying\n    );\n  }\n\n  setNewCurrentMusic(song: Song): void {\n    // Mock: simular carga de nueva playlist\n    setTimeout(() => {\n      this.currentMusic = {\n        song: song,\n        playlist: {\n          id: song.albumId,\n          albumId: song.albumId,\n          name: `Album ${song.album}`,\n          description: `Playlist for ${song.album}`,\n        },\n        songs: [song],\n      };\n      this.isPlaying = true;\n    }, 100);\n  }\n\n  handleClick(song: Song): void {\n    if (this.isCurrentSongRunning(song)) {\n      this.isPlaying = false;\n      return;\n    }\n\n    if (this.isNewSongOfAnotherPlaylist(song)) {\n      this.setNewCurrentMusic(song);\n      return;\n    }\n\n    // La playlist es la misma, pero la canción es diferente\n    if (this.currentMusic.song?.id !== song.id) {\n      this.currentMusic = {\n        ...this.currentMusic,\n        song: song,\n      };\n    }\n    this.isPlaying = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Playlist-2.html": {
      url: "interfaces/Playlist-2.html",
      title: "interface - Playlist-2",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/play-list-item-card/play-list-item-card.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from "@angular/core";\nimport { CardPlayButton } from "../card-play-button/card-play-button";\nimport { RouterLink } from "@angular/router";\n\nexport interface Playlist {\n  id: number;\n  cover: string;\n  title: string;\n  artists: string[];\n  color?: string;\n}\n\n@Component({\n  selector: "app-play-list-item-card",\n  imports: [CardPlayButton, RouterLink],\n  templateUrl: "./play-list-item-card.html",\n  styleUrl: "./play-list-item-card.css",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayListItemCard {\n  @Input() playlist!: Playlist;\n\n  get artistsString(): string {\n    return this.playlist?.artists?.join(", ") || "";\n  }\n\n  onImageError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = "/assets/playlists/placeholder.jpg";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Playlist-3.html": {
      url: "interfaces/Playlist-3.html",
      title: "interface - Playlist-3",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/player/player.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n} from "@angular/core";\nimport { PlayerControlButtonBar } from "../player-control-button-bar/player-control-button-bar";\nimport { PlayerCurrentSong } from "../player-current-song/player-current-song";\nimport { PlayerSoundControl } from "../player-sound-control/player-sound-control";\nimport { PlayerVolumeControl } from "../player-volume-control/player-volume-control";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-player",\n  imports: [\n    PlayerControlButtonBar,\n    PlayerCurrentSong,\n    PlayerSoundControl,\n    PlayerVolumeControl,\n  ],\n  templateUrl: "./player.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Player implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild("audioElement", { static: false })\n  audioRef!: ElementRef;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n\n  isPlaying = false;\n  volume = 0.5;\n\n  ngOnInit(): void {\n    // Inicializar con una canción mock\n    this.currentMusic = {\n      song: {\n        id: 1,\n        title: "Bohemian Rhapsody",\n        artists: ["Queen"],\n        album: "A Night at the Opera",\n        albumId: 101,\n        duration: "5:55",\n        image: "/assets/playlists/playlist1.jpg",\n      },\n      playlist: { id: 101 },\n      songs: [],\n    };\n  }\n\n  ngAfterViewInit(): void {\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (\n      this.audioRef?.nativeElement &&\n      typeof this.audioRef.nativeElement.pause === "function"\n    ) {\n      this.audioRef.nativeElement.pause();\n    }\n  }\n\n  play(): void {\n    this.audioRef?.nativeElement\n      ?.play?.()\n      .catch((e) => console.log("Error playing: ", e));\n  }\n\n  pause(): void {\n    this.audioRef?.nativeElement?.pause?.();\n  }\n\n  togglePlayPause(): void {\n    this.isPlaying = !this.isPlaying;\n    this.isPlaying ? this.play() : this.pause();\n  }\n\n  setVolume(newVolume: number): void {\n    this.volume = newVolume;\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  getNextSong(): Song | null {\n    // Mock: devolver la misma canción para el prototipo\n    return this.currentMusic.song;\n  }\n\n  onNextSong(): void {\n    const nextSong = this.getNextSong();\n    if (nextSong) {\n      this.currentMusic = { ...this.currentMusic, song: nextSong };\n    }\n  }\n\n  onPlayPauseClick(): void {\n    this.togglePlayPause();\n  }\n\n  onVolumeChange(volume: number): void {\n    this.setVolume(volume);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Playlist-4.html": {
      url: "interfaces/Playlist-4.html",
      title: "interface - Playlist-4",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/side-menu-card/side-menu-card.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from "@angular/core";\nimport { Router } from "@angular/router";\n\ninterface Playlist {\n  id: number;\n  name: string;\n  cover: string;\n}\n\n@Component({\n  selector: "app-side-menu-card",\n  imports: [],\n  templateUrl: "./side-menu-card.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SideMenuCard {\n  @Input() playlist!: Playlist;\n\n  constructor(private readonly router: Router) {}\n\n  onImageError(event: any) {\n    // Fallback a una imagen placeholder si la imagen original falla\n    event.target.src = "/assets/playlists/placeholder.jpg";\n  }\n\n  navigateToPlaylist() {\n    this.router.navigate(["/playlist", this.playlist.id]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Playlist-5.html": {
      url: "interfaces/Playlist-5.html",
      title: "interface - Playlist-5",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/library/library.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            songCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { Router } from "@angular/router";\n\ninterface Playlist {\n  id: string;\n  name: string;\n  description: string;\n  image: string;\n  songCount: number;\n  createdAt: Date;\n}\n\ninterface Artist {\n  id: string;\n  name: string;\n  genre: string;\n  image: string;\n  followers: string;\n  isFollowing: boolean;\n}\n\ninterface Album {\n  id: string;\n  title: string;\n  artist: string;\n  year: number;\n  image: string;\n  songCount: number;\n}\n\n@Component({\n  selector: "app-library",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: "./library.html",\n  styleUrl: "./library.css",\n})\nexport class LibraryComponent {\n  activeTab: "playlists" | "artists" | "albums" = "playlists";\n\n  // Modal state\n  showCreateModal = false;\n\n  // Image upload state\n  selectedImageFile: File | null = null;\n  imagePreviewUrl: string | null = null;\n\n  // Form data for new playlist\n  newPlaylist = {\n    name: "",\n    description: "",\n    isPrivate: false,\n  };\n\n  constructor(private readonly router: Router) {}\n\n  // Mock data para playlists\n  mockPlaylists: Playlist[] = [\n    {\n      id: "1",\n      name: "Mi Playlist Favorita",\n      description: "Las mejores canciones para relajarse",\n      image: "https://picsum.photos/400/400?random=1",\n      songCount: 25,\n      createdAt: new Date(),\n    },\n    {\n      id: "2",\n      name: "Música para Trabajar",\n      description: "Concentración y productividad",\n      image: "https://picsum.photos/400/400?random=2",\n      songCount: 42,\n      createdAt: new Date(),\n    },\n    {\n      id: "3",\n      name: "Road Trip Vibes",\n      description: "Para esos viajes largos en carretera",\n      image: "https://picsum.photos/400/400?random=3",\n      songCount: 18,\n      createdAt: new Date(),\n    },\n    {\n      id: "4",\n      name: "Chill Evening",\n      description: "Perfecta para las noches tranquilas",\n      image: "https://picsum.photos/400/400?random=4",\n      songCount: 31,\n      createdAt: new Date(),\n    },\n    {\n      id: "5",\n      name: "Workout Energy",\n      description: "Música enérgica para el gimnasio",\n      image: "https://picsum.photos/400/400?random=5",\n      songCount: 20,\n      createdAt: new Date(),\n    },\n    {\n      id: "6",\n      name: "Sunday Morning",\n      description: "Despertar con buena música",\n      image: "https://picsum.photos/400/400?random=6",\n      songCount: 15,\n      createdAt: new Date(),\n    },\n  ];\n\n  // Mock data para artistas\n  mockArtists: Artist[] = [\n    {\n      id: "1",\n      name: "Arctic Monkeys",\n      genre: "Indie Rock",\n      image: "https://picsum.photos/400/400?random=11",\n      followers: "2.4M",\n      isFollowing: true,\n    },\n    {\n      id: "2",\n      name: "Billie Eilish",\n      genre: "Pop Alternativo",\n      image: "https://picsum.photos/400/400?random=12",\n      followers: "8.1M",\n      isFollowing: true,\n    },\n    {\n      id: "3",\n      name: "The Weeknd",\n      genre: "R&B",\n      image: "https://picsum.photos/400/400?random=13",\n      followers: "6.7M",\n      isFollowing: false,\n    },\n    {\n      id: "4",\n      name: "Tame Impala",\n      genre: "Psychedelic Pop",\n      image: "https://picsum.photos/400/400?random=14",\n      followers: "1.8M",\n      isFollowing: true,\n    },\n    {\n      id: "5",\n      name: "Dua Lipa",\n      genre: "Pop",\n      image: "https://picsum.photos/400/400?random=15",\n      followers: "5.2M",\n      isFollowing: false,\n    },\n  ];\n\n  // Mock data para álbumes\n  mockAlbums: Album[] = [\n    {\n      id: "1",\n      title: "AM",\n      artist: "Arctic Monkeys",\n      year: 2013,\n      image: "https://picsum.photos/400/400?random=21",\n      songCount: 12,\n    },\n    {\n      id: "2",\n      title: "When We All Fall Asleep",\n      artist: "Billie Eilish",\n      year: 2019,\n      image: "https://picsum.photos/400/400?random=22",\n      songCount: 14,\n    },\n    {\n      id: "3",\n      title: "After Hours",\n      artist: "The Weeknd",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=23",\n      songCount: 14,\n    },\n    {\n      id: "4",\n      title: "Currents",\n      artist: "Tame Impala",\n      year: 2015,\n      image: "https://picsum.photos/400/400?random=24",\n      songCount: 13,\n    },\n    {\n      id: "5",\n      title: "Future Nostalgia",\n      artist: "Dua Lipa",\n      year: 2020,\n      image: "https://picsum.photos/400/400?random=25",\n      songCount: 11,\n    },\n    {\n      id: "6",\n      title: "Tranquility Base Hotel",\n      artist: "Arctic Monkeys",\n      year: 2018,\n      image: "https://picsum.photos/400/400?random=26",\n      songCount: 11,\n    },\n  ];\n\n  get isEmpty(): boolean {\n    switch (this.activeTab) {\n      case "playlists":\n        return this.mockPlaylists.length === 0;\n      case "artists":\n        return this.mockArtists.length === 0;\n      case "albums":\n        return this.mockAlbums.length === 0;\n      default:\n        return true;\n    }\n  }\n\n  setActiveTab(tab: "playlists" | "artists" | "albums"): void {\n    this.activeTab = tab;\n  }\n\n  createPlaylist(): void {\n    this.showCreateModal = true;\n  }\n\n  closeModal(): void {\n    this.showCreateModal = false;\n    this.resetForm();\n  }\n\n  resetForm(): void {\n    this.newPlaylist = {\n      name: "",\n      description: "",\n      isPrivate: false,\n    };\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n  }\n\n  onImageSelected(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const file = target.files?.[0];\n\n    if (file) {\n      // Validate file type\n      const allowedTypes = [\n        "image/jpeg",\n        "image/png",\n        "image/gif",\n        "image/webp",\n      ];\n      if (!allowedTypes.includes(file.type)) {\n        alert("Por favor selecciona una imagen válida (JPEG, PNG, GIF, WebP)");\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        alert("La imagen es demasiado grande. El tamaño máximo es 5MB");\n        return;\n      }\n\n      this.selectedImageFile = file;\n\n      // Create preview URL\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.imagePreviewUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  removeImage(): void {\n    this.selectedImageFile = null;\n    this.imagePreviewUrl = null;\n\n    // Clear the input\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    if (input) {\n      input.value = "";\n    }\n  }\n\n  triggerImageUpload(): void {\n    const input = document.getElementById("imageInput") as HTMLInputElement;\n    input?.click();\n  }\n\n  savePlaylist(): void {\n    if (!this.newPlaylist.name.trim()) {\n      return;\n    }\n\n    // Use the selected image or a default placeholder\n    const playlistImage =\n      this.imagePreviewUrl ||\n      "https://picsum.photos/400/400?random=" + Date.now();\n\n    const newPlaylist: Playlist = {\n      id: Date.now().toString(),\n      name: this.newPlaylist.name.trim(),\n      description: this.newPlaylist.description.trim(),\n      image: playlistImage,\n      songCount: 0,\n      createdAt: new Date(),\n    };\n\n    this.mockPlaylists.unshift(newPlaylist);\n    this.closeModal();\n  }\n\n  onModalBackdropClick(event: Event): void {\n    if (event.target === event.currentTarget) {\n      this.closeModal();\n    }\n  }\n\n  playPlaylist(playlist: Playlist): void {\n    // Navegar a la vista individual de la playlist\n    this.router.navigate(["/playlist", playlist.id]);\n  }\n\n  startPlayingPlaylist(playlist: Playlist, event: Event): void {\n    // Prevenir que se navegue cuando se hace click en el botón de play\n    event.stopPropagation();\n    // Aquí iría la lógica para empezar a reproducir la playlist\n    console.log("Reproduciendo playlist:", playlist.name);\n  }\n\n  playAlbum(album: Album): void {\n    console.log("Reproducir álbum:", album.title);\n  }\n\n  viewArtist(artist: Artist): void {\n    // Navegar a la vista individual del artista\n    this.router.navigate(["/artist", artist.id]);\n  }\n\n  toggleFollowArtist(artist: Artist): void {\n    artist.isFollowing = !artist.isFollowing;\n    console.log(\n      artist.isFollowing ? "Siguiendo" : "Dejando de seguir",\n      artist.name,\n    );\n  }\n\n  exploreMusic(): void {\n    console.log("Explorar música");\n  }\n\n  // Métodos para manejo de eventos de teclado\n  onKeyDown(event: KeyboardEvent, action: () => void): void {\n    if (event.key === "Enter" || event.key === " ") {\n      event.preventDefault();\n      action();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/PlaylistFilters.html": {
      url: "interfaces/PlaylistFilters.html",
      title: "interface - PlaylistFilters",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlaylistFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortOrder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortBy:     "createdAt" | "name" | "totalSongs"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     "createdAt" | "name" | "totalSongs"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortOrder:     "asc" | "desc"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     "asc" | "desc"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/PlaylistService.html": {
      url: "injectables/PlaylistService.html",
      title: "injectable - PlaylistService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlaylistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/playlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSongToPlaylist\n                            \n                            \n                                createPlaylist\n                            \n                            \n                                deletePlaylist\n                            \n                            \n                                duplicatePlaylist\n                            \n                            \n                                followPlaylist\n                            \n                            \n                                getFollowedPlaylists\n                            \n                            \n                                getPlaylistById\n                            \n                            \n                                getPlaylists\n                            \n                            \n                                getPlaylistSongs\n                            \n                            \n                                getUserPlaylists\n                            \n                            \n                                removeSongFromPlaylist\n                            \n                            \n                                reorderPlaylistSongs\n                            \n                            \n                                searchPlaylists\n                            \n                            \n                                unfollowPlaylist\n                            \n                            \n                                updatePlaylist\n                            \n                            \n                                uploadPlaylistCover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/playlist.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSongToPlaylist\n                        \n                    \n                \n            \n            \n                \naddSongToPlaylist(playlistId: string, songData: AddSongToPlaylistDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Agregar una canción a la playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songData\n                                            \n                                                            AddSongToPlaylistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPlaylist\n                        \n                    \n                \n            \n            \n                \ncreatePlaylist(playlistData: CreatePlaylistDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Crear una nueva playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistData\n                                            \n                                                            CreatePlaylistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePlaylist\n                        \n                    \n                \n            \n            \n                \ndeletePlaylist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Eliminar una playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duplicatePlaylist\n                        \n                    \n                \n            \n            \n                \nduplicatePlaylist(playlistId: string, newName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Duplicar una playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followPlaylist\n                        \n                    \n                \n            \n            \n                \nfollowPlaylist(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Seguir/dejar de seguir una playlist pública\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowedPlaylists\n                        \n                    \n                \n            \n            \n                \ngetFollowedPlaylists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Obtener playlists seguidas por el usuario\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistById\n                        \n                    \n                \n            \n            \n                \ngetPlaylistById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Obtener una playlist por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylists\n                        \n                    \n                \n            \n            \n                \ngetPlaylists(filters?: PlaylistFilters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Obtener todas las playlists con filtros opcionales\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            PlaylistFilters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaylistSongs\n                        \n                    \n                \n            \n            \n                \ngetPlaylistSongs(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Obtener canciones de una playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserPlaylists\n                        \n                    \n                \n            \n            \n                \ngetUserPlaylists(userId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Obtener playlists del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSongFromPlaylist\n                        \n                    \n                \n            \n            \n                \nremoveSongFromPlaylist(playlistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Remover una canción de la playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reorderPlaylistSongs\n                        \n                    \n                \n            \n            \n                \nreorderPlaylistSongs(playlistId: string, songOrders: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Reordenar canciones en una playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songOrders\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchPlaylists\n                        \n                    \n                \n            \n            \n                \nsearchPlaylists(query: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Buscar playlists públicas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollowPlaylist\n                        \n                    \n                \n            \n            \n                \nunfollowPlaylist(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePlaylist\n                        \n                    \n                \n            \n            \n                \nupdatePlaylist(id: string, playlistData: UpdatePlaylistDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Actualizar una playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistData\n                                            \n                                                            UpdatePlaylistDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadPlaylistCover\n                        \n                    \n                \n            \n            \n                \nuploadPlaylistCover(playlistId: string, file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/playlist.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Subir imagen de portada para la playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "/playlists"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/playlist.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable } from "rxjs";\nimport { ApiService } from "./api.service";\nimport {\n  Playlist,\n  CreatePlaylistDto,\n  UpdatePlaylistDto,\n  AddSongToPlaylistDto,\n  PlaylistFilters,\n  PaginatedResponse,\n  Song,\n} from "../models";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class PlaylistService {\n  private endpoint = "/playlists";\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Obtener todas las playlists con filtros opcionales\n   */\n  getPlaylists(\n    filters?: PlaylistFilters,\n  ): Observable> {\n    return this.apiService.getPaginated(this.endpoint, filters);\n  }\n\n  /**\n   * Obtener una playlist por ID\n   */\n  getPlaylistById(id: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Obtener playlists del usuario actual\n   */\n  getUserPlaylists(userId?: string): Observable {\n    const endpoint = userId\n      ? `${this.endpoint}/user/${userId}`\n      : `${this.endpoint}/my-playlists`;\n    return this.apiService.get(endpoint);\n  }\n\n  /**\n   * Crear una nueva playlist\n   */\n  createPlaylist(playlistData: CreatePlaylistDto): Observable {\n    return this.apiService.post(this.endpoint, playlistData);\n  }\n\n  /**\n   * Actualizar una playlist\n   */\n  updatePlaylist(\n    id: string,\n    playlistData: UpdatePlaylistDto,\n  ): Observable {\n    return this.apiService.put(\n      `${this.endpoint}/${id}`,\n      playlistData,\n    );\n  }\n\n  /**\n   * Eliminar una playlist\n   */\n  deletePlaylist(id: string): Observable {\n    return this.apiService.delete(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Agregar una canción a la playlist\n   */\n  addSongToPlaylist(\n    playlistId: string,\n    songData: AddSongToPlaylistDto,\n  ): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/${playlistId}/songs`,\n      songData,\n    );\n  }\n\n  /**\n   * Remover una canción de la playlist\n   */\n  removeSongFromPlaylist(playlistId: string, songId: string): Observable {\n    return this.apiService.delete(\n      `${this.endpoint}/${playlistId}/songs/${songId}`,\n    );\n  }\n\n  /**\n   * Obtener canciones de una playlist\n   */\n  getPlaylistSongs(playlistId: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${playlistId}/songs`);\n  }\n\n  /**\n   * Reordenar canciones en una playlist\n   */\n  reorderPlaylistSongs(\n    playlistId: string,\n    songOrders: { songId: string; order: number }[],\n  ): Observable {\n    return this.apiService.patch(\n      `${this.endpoint}/${playlistId}/reorder`,\n      { songOrders },\n    );\n  }\n\n  /**\n   * Subir imagen de portada para la playlist\n   */\n  uploadPlaylistCover(playlistId: string, file: File): Observable {\n    return this.apiService.upload(\n      `${this.endpoint}/${playlistId}/cover`,\n      file,\n    );\n  }\n\n  /**\n   * Seguir/dejar de seguir una playlist pública\n   */\n  followPlaylist(playlistId: string): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/${playlistId}/follow`,\n      {},\n    );\n  }\n\n  unfollowPlaylist(playlistId: string): Observable {\n    return this.apiService.delete(\n      `${this.endpoint}/${playlistId}/follow`,\n    );\n  }\n\n  /**\n   * Obtener playlists seguidas por el usuario\n   */\n  getFollowedPlaylists(): Observable {\n    return this.apiService.get(`${this.endpoint}/followed`);\n  }\n\n  /**\n   * Duplicar una playlist\n   */\n  duplicatePlaylist(\n    playlistId: string,\n    newName?: string,\n  ): Observable {\n    return this.apiService.post(\n      `${this.endpoint}/${playlistId}/duplicate`,\n      { name: newName },\n    );\n  }\n\n  /**\n   * Buscar playlists públicas\n   */\n  searchPlaylists(\n    query: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(`${this.endpoint}/search`, {\n      query,\n      limit: limit || 20,\n      offset: offset || 0,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/PlaylistSong.html": {
      url: "interfaces/PlaylistSong.html",
      title: "interface - PlaylistSong",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlaylistSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addedAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            playlistId\n                                        \n                                \n                                \n                                        \n                                            song\n                                        \n                                \n                                \n                                        \n                                            songId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlistId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlistId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song:         Song\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Song\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/RegisterComponent.html": {
      url: "components/RegisterComponent.html",
      title: "component - RegisterComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/auth/register/register.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                            MatIcon\n                \n            \n\n            \n                styleUrls\n                ./register.css\n            \n\n\n\n            \n                templateUrl\n                ./register.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                registerUseCase\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ROUTES_CONFIG_AUTH\n                            \n                            \n                                    Private\n                                    Readonly\n                                socialLoginUseCase\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                onRegister\n                            \n                            \n                                registerWithDiscord\n                            \n                            \n                                registerWithGithub\n                            \n                            \n                                registerWithGoogle\n                            \n                            \n                                registerWithTwitter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerWithDiscord\n                        \n                    \n                \n            \n            \n                \nregisterWithDiscord()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerWithGithub\n                        \n                    \n                \n            \n            \n                \nregisterWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerWithGoogle\n                        \n                    \n                \n            \n            \n                \nregisterWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerWithTwitter\n                        \n                    \n                \n            \n            \n                \nregisterWithTwitter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/register/register.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterCredentials\n\n                    \n                \n                \n                    \n                        Default value : {\n    email: '',\n    password: '',\n    name: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        registerUseCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RegisterUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ROUTES_CONFIG_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ROUTES_CONFIG_AUTH\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        socialLoginUseCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SocialLoginUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/register/register.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterUseCase } from '@app/domain/usecases/register.usecase';\nimport { RegisterCredentials } from '@app/domain/repositories/i-auth.repository';\nimport { SocialLoginUseCase } from '../../../../domain/usecases/social-login.usecase';\nimport { MatIcon } from '@angular/material/icon';\nimport { ROUTES_CONFIG_AUTH } from '@app/config/routes-auth.config';\nimport {\n  AuthError,\n  ValidationError,\n  RegisterError,\n  NetworkError,\n} from '@app/domain/errors/auth.errors';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, MatIcon],\n  templateUrl: './register.html',\n  styleUrls: ['./register.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterComponent {\n  protected readonly ROUTES_CONFIG_AUTH = ROUTES_CONFIG_AUTH;\n\n  private readonly socialLoginUseCase = inject(SocialLoginUseCase);\n  private readonly registerUseCase = inject(RegisterUseCase);\n  private readonly router = inject(Router);\n\n  credentials: RegisterCredentials = {\n    email: '',\n    password: '',\n    name: '',\n  };\n\n  isLoading = signal(false);\n  error = signal(null);\n  success = signal(null);\n\n  async onRegister(): Promise {\n    if (this.isLoading()) return;\n\n    this.isLoading.set(true);\n    this.error.set(null);\n    this.success.set(null);\n\n    try {\n      const result = await this.registerUseCase.execute(this.credentials);\n      console.log('Register successful:', result);\n      this.success.set('¡Registro exitoso! Bienvenido a StreamFlow Music.');\n\n      // Redirigir después de mostrar el mensaje de éxito\n      setTimeout(() => {\n        this.router.navigate(['/home']);\n      }, 2000);\n    } catch (error) {\n      this.handleError(error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  private handleError(error: any): void {\n    if (error instanceof ValidationError) {\n      this.error.set(error.message);\n    } else if (error instanceof RegisterError) {\n      this.error.set(\n        'Error al crear la cuenta. Verifica que el email no esté en uso.',\n      );\n    } else if (error instanceof NetworkError) {\n      this.error.set(\n        'Error de conexión. Verifica tu internet e intenta de nuevo.',\n      );\n    } else if (error instanceof AuthError) {\n      this.error.set(error.message);\n    } else {\n      this.error.set('Error inesperado. Intenta de nuevo.');\n    }\n    console.error('Register error:', error);\n  }\n\n  registerWithGoogle() {\n    this.socialLoginUseCase.execute('google');\n  }\n\n  registerWithGithub() {\n    this.socialLoginUseCase.execute('github');\n  }\n\n  registerWithTwitter() {\n    this.socialLoginUseCase.execute('twitter');\n  }\n\n  registerWithDiscord() {\n    this.socialLoginUseCase.execute('discord');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Crear Cuenta\n    \n\n    @if (error()) {\n    \n      {{ error() }}\n    \n    } @if (success()) {\n    \n      {{ success() }}\n    \n    }\n\n    \n      \n        \n          Nombre Completo\n        \n        \n      \n\n      \n        \n          Correo Electrónico\n        \n        \n      \n\n      \n        \n          Contraseña\n        \n        \n      \n\n      \n        \n        \n          Acepto los\n          términos y condiciones\n        \n      \n\n      \n        \n          @if (isLoading()) { Creando cuenta... } @else { Crear Cuenta }\n        \n      \n\n      \n        \n          ¿Ya tienes una cuenta?\n          Inicia sesión aquí\n        \n      \n    \n    \n      \n        android Registrarse con Google\n      \n      \n        commit Registrarse con GitHub\n      \n      \n        close Registrarse con Twitter|X\n      \n      \n        discord Registrarse con Discord\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.css\n                \n                /* Container principal - layout centrado (Mobile First) */\n.register-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f9fafb;\n  padding: 2rem 1.5rem; /* Padding móvil primero */\n}\n\n/* Tarjeta de registro (Mobile First) */\n.register-header {\n  width: 100%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow:\n    0 10px 15px -3px rgba(0, 0, 0, 0.1),\n    0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  padding: 1.5rem; /* Padding móvil primero */\n  animation: slideUp 0.3s ease-out;\n}\n\n/* Formulario */\n.register-form {\n  margin-top: 1.5rem;\n}\n\n/* Inputs de texto */\n.register-input {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.5rem;\n  color: black;\n  font-weight: bold;\n  font-size: 0.875rem;\n  transition: all 0.2s ease-in-out;\n}\n\n.register-input::placeholder {\n  color: #6b7280;\n}\n\n.register-input:focus {\n  outline: none;\n  border-color: #000000;\n  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Checkbox */\n.register-checkbox {\n  height: 1rem;\n  width: 1rem;\n  color: #000000;\n  border: 1px solid #d1d5db;\n  border-radius: 0.25rem;\n}\n\n.register-checkbox:focus {\n  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Botón principal */\n.register-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 0.75rem 1rem;\n  border: none;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.5rem;\n  color: white;\n  background-color: #000000;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n}\n\n.register-button:hover {\n  background-color: #374151;\n  transform: scale(1.02);\n}\n\n.register-button:active {\n  transform: scale(0.98);\n}\n\n.register-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Enlaces */\n.register-link {\n  color: #000000;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n}\n\n.register-link:hover {\n  color: #374151;\n}\n\n.register-link:focus {\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n}\n\n/* Animaciones */\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Responsive - Mobile First (Desktop y pantallas grandes) */\n@media (min-width: 640px) {\n  .register-container {\n    padding: 3rem 1rem;\n  }\n\n  .register-header {\n    padding: 2rem;\n  }\n}\n\n/* Responsive - Pantallas extra grandes */\n@media (min-width: 1024px) {\n  .register-container {\n    padding: 4rem 1rem;\n  }\n\n  .register-header {\n    padding: 2.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Crear Cuenta        @if (error()) {          {{ error() }}        } @if (success()) {          {{ success() }}        }                            Nombre Completo                                              Correo Electrónico                                              Contraseña                                                      Acepto los          términos y condiciones                                      @if (isLoading()) { Creando cuenta... } @else { Crear Cuenta }                                      ¿Ya tienes una cuenta?          Inicia sesión aquí                                    android Registrarse con Google                    commit Registrarse con GitHub                    close Registrarse con Twitter|X                    discord Registrarse con Discord            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/RegisterCredentials.html": {
      url: "interfaces/RegisterCredentials.html",
      title: "interface - RegisterCredentials",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from "../entities/user.entity";\nimport { AuthToken } from "../entities/auth-token.entity";\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: AuthToken;\n  needsEmailConfirmation?: boolean;\n}\n\nexport abstract class AuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentUser(): Promise;\n  abstract refreshToken(refreshToken: string): Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/RegisterCredentials-1.html": {
      url: "interfaces/RegisterCredentials-1.html",
      title: "interface - RegisterCredentials-1",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/repositories/i-auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user.entity';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterCredentials {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport interface AuthResult {\n  user: User;\n  token: string;\n}\n\nexport interface AuthSession {\n  user: User | null;\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nexport abstract class IAuthRepository {\n  abstract login(credentials: LoginCredentials): Promise;\n  abstract register(credentials: RegisterCredentials): Promise;\n  abstract logout(): Promise;\n  abstract getCurrentSession(): Promise;\n  abstract refreshSession(): Promise;\n  abstract sendPasswordResetEmail(email: string): Promise;\n  abstract signInWithProvider(provider: 'google' | 'github' | 'facebook' | 'twitter' | 'discord'): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/RegisterDto.html": {
      url: "interfaces/RegisterDto.html",
      title: "interface - RegisterDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/RegisterError.html": {
      url: "classes/RegisterError.html",
      title: "class - RegisterError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/RegisterRequestDTO.html": {
      url: "interfaces/RegisterRequestDTO.html",
      title: "interface - RegisterRequestDTO",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequestDTO {\n  email: string;\n  password: string;\n}\nexport interface RegisterRequestDTO {\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/RegisterUseCase.html": {
      url: "injectables/RegisterUseCase.html",
      title: "injectable - RegisterUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/register.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/register.usecase.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(credentials: RegisterCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/register.usecase.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            RegisterCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/register.usecase.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport {\n  IAuthRepository,\n  RegisterCredentials,\n  AuthResult,\n} from "../repositories/i-auth.repository";\nimport { ValidationError } from "../errors/auth.errors";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class RegisterUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async execute(credentials: RegisterCredentials): Promise {\n    if (!credentials.email || !credentials.password || !credentials.name) {\n      throw new ValidationError("Name, email and password are required");\n    }\n\n    if (!this.isValidEmail(credentials.email)) {\n      throw new ValidationError("Invalid email format");\n    }\n\n    if (credentials.password.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ResetPasswordComponent.html": {
      url: "components/ResetPasswordComponent.html",
      title: "component - ResetPasswordComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/presentation/pages/auth/reset-password/reset-password.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./reset-password.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                    Readonly\n                                resetPasswordUseCase\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                onResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onResetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resetPasswordUseCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ResetPasswordUseCase)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/presentation/pages/auth/reset-password/reset-password.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  signal,\n} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ResetPasswordUseCase } from '../../../../domain/usecases/reset-password.usecase';\nimport { AuthError, ValidationError, NetworkError } from '@app/domain/errors/auth.errors';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule],\n  templateUrl: './reset-password.html',\n  styleUrls: ['./reset-password.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResetPasswordComponent {\n  email = '';\n  isLoading = signal(false);\n  error = signal(null);\n  success = signal(null);\n\n  private readonly resetPasswordUseCase = inject(ResetPasswordUseCase);\n\n  async onResetPassword(): Promise {\n    if (this.isLoading()) return;\n    this.isLoading.set(true);\n    this.error.set(null);\n    this.success.set(null);\n    \n    try {\n      await this.resetPasswordUseCase.execute(this.email);\n      this.success.set(\n        'Te hemos enviado un correo para restablecer tu contraseña.',\n      );\n    } catch (error) {\n      this.handleError(error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  private handleError(error: any): void {\n    if (error instanceof ValidationError) {\n      this.error.set(error.message);\n    } else if (error instanceof NetworkError) {\n      this.error.set('Error de conexión. Verifica tu internet e intenta de nuevo.');\n    } else if (error instanceof AuthError) {\n      this.error.set(error.message);\n    } else {\n      this.error.set('Error inesperado. Intenta de nuevo.');\n    }\n    console.error('Reset password error:', error);\n  }\n}\n\n    \n\n    \n        \n  Restablecer Contraseña\n\n  \n    \n      \n        Correo Electrónico\n      \n      \n    \n    \n      @if (isLoading()) { Enviando... } @else { Enviar correo de recuperación }\n    \n  \n\n  @if (error()) {\n    \n      {{ error() }}\n    \n  }\n  @if (success()) {\n    \n      {{ success() }}\n    \n  }\n\n\n    \n\n    \n                \n                    ./reset-password.css\n                \n                .reset-password-container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 1rem;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n}\n\n.error-message {\n  color: #b91c1c;\n  background: #fee2e2;\n  border: 1px solid #fca5a5;\n  border-radius: 0.5rem;\n  padding: 0.75rem;\n}\n\n.success-message {\n  color: #166534;\n  background: #bbf7d0;\n  border: 1px solid #4ade80;\n  border-radius: 0.5rem;\n  padding: 0.75rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Restablecer Contraseña                    Correo Electrónico                          @if (isLoading()) { Enviando... } @else { Enviar correo de recuperación }        @if (error()) {          {{ error() }}      }  @if (success()) {          {{ success() }}      }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/ResetPasswordUseCase.html": {
      url: "injectables/ResetPasswordUseCase.html",
      title: "injectable - ResetPasswordUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/reset-password.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/reset-password.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/reset-password.usecase.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/reset-password.usecase.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { IAuthRepository } from "../repositories/i-auth.repository";\nimport { ValidationError } from "../errors/auth.errors";\n\n@Injectable({ providedIn: "root" })\nexport class ResetPasswordUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async execute(email: string): Promise {\n    if (!email || email.trim() === \'\') {\n      throw new ValidationError("Email is required");\n    }\n\n    if (!this.isValidEmail(email)) {\n      throw new ValidationError("Invalid email format");\n    }\n\n    await this.authRepository.sendPasswordResetEmail(email);\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/SearchComponent.html": {
      url: "components/SearchComponent.html",
      title: "component - SearchComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/search/search.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search.html\n            \n\n\n\n            \n                styleUrl\n                ./search.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genres\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                onGenreClick\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/search/search.ts:55\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/search/search.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGenreClick\n                        \n                    \n                \n            \n            \n                \nonGenreClick(genre: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/search/search.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genre\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/search/search.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Rock\",\n      description: \"Clásicos y modernos\",\n      color: \"from-red-500 to-orange-600\",\n    },\n    {\n      name: \"Pop\",\n      description: \"Los hits del momento\",\n      color: \"from-pink-500 to-purple-600\",\n    },\n    {\n      name: \"Hip Hop\",\n      description: \"Rap y beats urbanos\",\n      color: \"from-yellow-500 to-orange-500\",\n    },\n    {\n      name: \"Electronic\",\n      description: \"EDM y synthwave\",\n      color: \"from-blue-500 to-cyan-500\",\n    },\n    {\n      name: \"Jazz\",\n      description: \"Smooth y clásico\",\n      color: \"from-amber-600 to-yellow-600\",\n    },\n    {\n      name: \"Reggaeton\",\n      description: \"Ritmos latinos\",\n      color: \"from-green-500 to-emerald-600\",\n    },\n    {\n      name: \"Classical\",\n      description: \"Música clásica\",\n      color: \"from-indigo-500 to-purple-700\",\n    },\n    {\n      name: \"Alternative\",\n      description: \"Indie y alternativo\",\n      color: \"from-gray-600 to-gray-800\",\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search/search.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search/search.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n@Component({\n  selector: \"app-search\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./search.html\",\n  styleUrl: \"./search.css\",\n})\nexport class SearchComponent {\n  searchQuery = \"\";\n\n  genres = [\n    {\n      name: \"Rock\",\n      description: \"Clásicos y modernos\",\n      color: \"from-red-500 to-orange-600\",\n    },\n    {\n      name: \"Pop\",\n      description: \"Los hits del momento\",\n      color: \"from-pink-500 to-purple-600\",\n    },\n    {\n      name: \"Hip Hop\",\n      description: \"Rap y beats urbanos\",\n      color: \"from-yellow-500 to-orange-500\",\n    },\n    {\n      name: \"Electronic\",\n      description: \"EDM y synthwave\",\n      color: \"from-blue-500 to-cyan-500\",\n    },\n    {\n      name: \"Jazz\",\n      description: \"Smooth y clásico\",\n      color: \"from-amber-600 to-yellow-600\",\n    },\n    {\n      name: \"Reggaeton\",\n      description: \"Ritmos latinos\",\n      color: \"from-green-500 to-emerald-600\",\n    },\n    {\n      name: \"Classical\",\n      description: \"Música clásica\",\n      color: \"from-indigo-500 to-purple-700\",\n    },\n    {\n      name: \"Alternative\",\n      description: \"Indie y alternativo\",\n      color: \"from-gray-600 to-gray-800\",\n    },\n  ];\n\n  constructor() {}\n\n  onSearch(query: string) {\n    this.searchQuery = query.trim();\n    if (this.searchQuery) {\n      // Implementar lógica de búsqueda\n      console.log(\"Buscando:\", this.searchQuery);\n    }\n  }\n\n  onGenreClick(genre: string) {\n    this.searchQuery = genre;\n    // Simular búsqueda por género\n    console.log(\"Búsqueda por género:\", genre);\n  }\n\n  clearSearch() {\n    this.searchQuery = \"\";\n  }\n}\n\n    \n\n    \n        \n  \n    Buscar\n\n    \n    \n      \n    \n  \n\n  \n  \n    Buscar por género\n\n    \n      \n        {{ genre.name }}\n        {{ genre.description }}\n      \n    \n  \n\n  \n  \n    \n      Resultados para: \"{{ searchQuery }}\"\n      \n        \n          \n        \n        Limpiar búsqueda\n      \n    \n\n    \n    \n      \n        \n          \n            \n          \n          \n            Implementando búsqueda...\n          \n          \n            Los resultados de búsqueda aparecerán aquí próximamente\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar                            Buscar por género                  {{ genre.name }}        {{ genre.description }}                          Resultados para: \"{{ searchQuery }}\"                                        Limpiar búsqueda                                                                                      Implementando búsqueda...                                Los resultados de búsqueda aparecerán aquí próximamente                              '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/SearchFilters.html": {
      url: "interfaces/SearchFilters.html",
      title: "interface - SearchFilters",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            genre\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     "song" | "artist" | "album" | "playlist"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     "song" | "artist" | "album" | "playlist"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/SearchResults.html": {
      url: "interfaces/SearchResults.html",
      title: "interface - SearchResults",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            albums\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            playlists\n                                        \n                                \n                                \n                                        \n                                            songs\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        albums\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albums:     Album[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Album[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     Artist[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Artist[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists:     Playlist[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Playlist[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs:     Song[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Song[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable } from "rxjs";\nimport { ApiService } from "./api.service";\nimport { Song, Artist, Album, Playlist, SearchFilters } from "../models";\n\nexport interface SearchResults {\n  songs: Song[];\n  artists: Artist[];\n  albums: Album[];\n  playlists: Playlist[];\n  total: number;\n}\n\n@Injectable({\n  providedIn: "root",\n})\nexport class SearchService {\n  private endpoint = "/search";\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Búsqueda general en toda la plataforma\n   */\n  searchAll(query: string, limit?: number): Observable {\n    return this.apiService.get(this.endpoint, {\n      query,\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Búsqueda específica por tipo\n   */\n  searchByType(\n    query: string,\n    type: "song" | "artist" | "album" | "playlist",\n    limit?: number,\n    offset?: number,\n  ): Observable {\n    return this.apiService.get(`${this.endpoint}/${type}`, {\n      query,\n      limit: limit || 20,\n      offset: offset || 0,\n    });\n  }\n\n  /**\n   * Búsqueda avanzada con filtros\n   */\n  advancedSearch(filters: SearchFilters): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/advanced`,\n      filters,\n    );\n  }\n\n  /**\n   * Obtener sugerencias de búsqueda\n   */\n  getSearchSuggestions(query: string, limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/suggestions`, {\n      query,\n      limit: limit || 10,\n    });\n  }\n\n  /**\n   * Obtener búsquedas populares\n   */\n  getPopularSearches(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/popular`, {\n      limit: limit || 10,\n    });\n  }\n\n  /**\n   * Obtener historial de búsquedas del usuario\n   */\n  getSearchHistory(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/history`, {\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Limpiar historial de búsquedas\n   */\n  clearSearchHistory(): Observable {\n    return this.apiService.delete(`${this.endpoint}/history`);\n  }\n\n  /**\n   * Guardar búsqueda en el historial\n   */\n  saveSearchToHistory(query: string): Observable {\n    return this.apiService.post(`${this.endpoint}/history`, { query });\n  }\n\n  /**\n   * Búsqueda por género\n   */\n  searchByGenre(\n    genre: string,\n    type?: "song" | "artist" | "album",\n    limit?: number,\n  ): Observable {\n    const endpoint = type\n      ? `${this.endpoint}/genre/${genre}/${type}`\n      : `${this.endpoint}/genre/${genre}`;\n    return this.apiService.get(endpoint, { limit: limit || 20 });\n  }\n\n  /**\n   * Búsqueda rápida (para autocompletado)\n   */\n  quickSearch(\n    query: string,\n    limit?: number,\n  ): Observable {\n    return this.apiService.get(`${this.endpoint}/quick`, {\n      query,\n      limit: limit || 5,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/SearchService.html": {
      url: "injectables/SearchService.html",
      title: "injectable - SearchService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                clearSearchHistory\n                            \n                            \n                                getPopularSearches\n                            \n                            \n                                getSearchHistory\n                            \n                            \n                                getSearchSuggestions\n                            \n                            \n                                quickSearch\n                            \n                            \n                                saveSearchToHistory\n                            \n                            \n                                searchAll\n                            \n                            \n                                searchByGenre\n                            \n                            \n                                searchByType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        advancedSearch\n                        \n                    \n                \n            \n            \n                \nadvancedSearch(filters: SearchFilters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Búsqueda avanzada con filtros\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            SearchFilters\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearchHistory\n                        \n                    \n                \n            \n            \n                \nclearSearchHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Limpiar historial de búsquedas\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPopularSearches\n                        \n                    \n                \n            \n            \n                \ngetPopularSearches(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Obtener búsquedas populares\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSearchHistory\n                        \n                    \n                \n            \n            \n                \ngetSearchHistory(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Obtener historial de búsquedas del usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSearchSuggestions\n                        \n                    \n                \n            \n            \n                \ngetSearchSuggestions(query: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Obtener sugerencias de búsqueda\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quickSearch\n                        \n                    \n                \n            \n            \n                \nquickSearch(query: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Búsqueda rápida (para autocompletado)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSearchToHistory\n                        \n                    \n                \n            \n            \n                \nsaveSearchToHistory(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Guardar búsqueda en el historial\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchAll\n                        \n                    \n                \n            \n            \n                \nsearchAll(query: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Búsqueda general en toda la plataforma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByGenre\n                        \n                    \n                \n            \n            \n                \nsearchByGenre(genre: string, type?: "song" | "artist" | "album", limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Búsqueda por género\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genre\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        "song" | "artist" | "album"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByType\n                        \n                    \n                \n            \n            \n                \nsearchByType(query: string, type: "song" | "artist" | "album" | "playlist", limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Búsqueda específica por tipo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        "song" | "artist" | "album" | "playlist"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "/search"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable } from "rxjs";\nimport { ApiService } from "./api.service";\nimport { Song, Artist, Album, Playlist, SearchFilters } from "../models";\n\nexport interface SearchResults {\n  songs: Song[];\n  artists: Artist[];\n  albums: Album[];\n  playlists: Playlist[];\n  total: number;\n}\n\n@Injectable({\n  providedIn: "root",\n})\nexport class SearchService {\n  private endpoint = "/search";\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Búsqueda general en toda la plataforma\n   */\n  searchAll(query: string, limit?: number): Observable {\n    return this.apiService.get(this.endpoint, {\n      query,\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Búsqueda específica por tipo\n   */\n  searchByType(\n    query: string,\n    type: "song" | "artist" | "album" | "playlist",\n    limit?: number,\n    offset?: number,\n  ): Observable {\n    return this.apiService.get(`${this.endpoint}/${type}`, {\n      query,\n      limit: limit || 20,\n      offset: offset || 0,\n    });\n  }\n\n  /**\n   * Búsqueda avanzada con filtros\n   */\n  advancedSearch(filters: SearchFilters): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/advanced`,\n      filters,\n    );\n  }\n\n  /**\n   * Obtener sugerencias de búsqueda\n   */\n  getSearchSuggestions(query: string, limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/suggestions`, {\n      query,\n      limit: limit || 10,\n    });\n  }\n\n  /**\n   * Obtener búsquedas populares\n   */\n  getPopularSearches(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/popular`, {\n      limit: limit || 10,\n    });\n  }\n\n  /**\n   * Obtener historial de búsquedas del usuario\n   */\n  getSearchHistory(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/history`, {\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Limpiar historial de búsquedas\n   */\n  clearSearchHistory(): Observable {\n    return this.apiService.delete(`${this.endpoint}/history`);\n  }\n\n  /**\n   * Guardar búsqueda en el historial\n   */\n  saveSearchToHistory(query: string): Observable {\n    return this.apiService.post(`${this.endpoint}/history`, { query });\n  }\n\n  /**\n   * Búsqueda por género\n   */\n  searchByGenre(\n    genre: string,\n    type?: "song" | "artist" | "album",\n    limit?: number,\n  ): Observable {\n    const endpoint = type\n      ? `${this.endpoint}/genre/${genre}/${type}`\n      : `${this.endpoint}/genre/${genre}`;\n    return this.apiService.get(endpoint, { limit: limit || 20 });\n  }\n\n  /**\n   * Búsqueda rápida (para autocompletado)\n   */\n  quickSearch(\n    query: string,\n    limit?: number,\n  ): Observable {\n    return this.apiService.get(`${this.endpoint}/quick`, {\n      query,\n      limit: limit || 5,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/SessionError.html": {
      url: "classes/SessionError.html",
      title: "class - SessionError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SideMenuCard.html": {
      url: "components/SideMenuCard.html",
      title: "component - SideMenuCard",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SideMenuCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/side-menu-card/side-menu-card.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-menu-card\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./side-menu-card.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToPlaylist\n                            \n                            \n                                onImageError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                playlist\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/side-menu-card/side-menu-card.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n                \n                    \n                        Type :         Playlist\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/side-menu-card/side-menu-card.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToPlaylist\n                        \n                    \n                \n            \n            \n                \nnavigateToPlaylist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/side-menu-card/side-menu-card.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageError\n                        \n                    \n                \n            \n            \n                \nonImageError(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/side-menu-card/side-menu-card.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\ninterface Playlist {\n  id: number;\n  name: string;\n  cover: string;\n}\n\n@Component({\n  selector: \"app-side-menu-card\",\n  imports: [],\n  templateUrl: \"./side-menu-card.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SideMenuCard {\n  @Input() playlist!: Playlist;\n\n  constructor(private readonly router: Router) {}\n\n  onImageError(event: any) {\n    // Fallback a una imagen placeholder si la imagen original falla\n    event.target.src = \"/assets/playlists/placeholder.jpg\";\n  }\n\n  navigateToPlaylist() {\n    this.router.navigate([\"/playlist\", this.playlist.id]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ playlist.name }}\n      Playlist\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ playlist.name }}      Playlist      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideMenuCard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/SideMenuItem.html": {
      url: "components/SideMenuItem.html",
      title: "component - SideMenuItem",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SideMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/side-menu-item/side-menu-item.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-menu-item\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./side-menu-item.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                href\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                href\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        href\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/side-menu-item/side-menu-item.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/side-menu-item/side-menu-item.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/side-menu-item/side-menu-item.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        href\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/side-menu-item/side-menu-item.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Output,\n  EventEmitter,\n  input,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-side-menu-item',\n  imports: [RouterLink],\n  templateUrl: './side-menu-item.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SideMenuItem {\n  href = input.required();\n  @Output() click = new EventEmitter();\n\n  onClick(event: Event): void {\n    if (this.href() === '#' || !this.href) {\n      event.preventDefault();\n      this.click.emit();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideMenuItem'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/SocialLoginUseCase.html": {
      url: "injectables/SocialLoginUseCase.html",
      title: "injectable - SocialLoginUseCase",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialLoginUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/usecases/social-login.usecase.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: IAuthRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/usecases/social-login.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        IAuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(provider: "google" | "github" | "facebook" | "twitter" | "discord")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/domain/usecases/social-login.usecase.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                        "google" | "github" | "facebook" | "twitter" | "discord"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { IAuthRepository } from "../repositories/i-auth.repository";\n\n@Injectable({ providedIn: "root" })\nexport class SocialLoginUseCase {\n  constructor(private readonly authRepository: IAuthRepository) {}\n\n  async execute(provider: \'google\' | \'github\' | \'facebook\' | \'twitter\' | \'discord\'): Promise {\n    await this.authRepository.signInWithProvider(provider);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song.html": {
      url: "interfaces/Song.html",
      title: "interface - Song",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            albumId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            artistId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coverImage\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            likes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lyrics\n                                        \n                                \n                                \n                                        \n                                            plays\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         Album\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Album\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         Artist\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Artist\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artistId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        likes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lyrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lyrics:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plays\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plays:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-1.html": {
      url: "interfaces/Song-1.html",
      title: "interface - Song-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/musics-table/musics-table.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            albumId\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from "@angular/core";\nimport { MusicsTablePlay } from "../musics-table-play/musics-table-play";\nimport { MatIcon } from "@angular/material/icon";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\n@Component({\n  selector: "app-musics-table",\n  imports: [MusicsTablePlay, MatIcon],\n  templateUrl: "./musics-table.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTable {\n  @Input() songs: Song[] = [];\n\n  // Mock state para el reproductor\n  currentSong: Song | null = null;\n  currentPlaylistId: number | null = null;\n\n  isCurrentSong(song: Song): boolean {\n    return (\n      this.currentSong?.id === song.id &&\n      this.currentPlaylistId === song.albumId\n    );\n  }\n\n  // Mock songs data para testing\n  constructor() {\n    this.songs = [\n      {\n        id: 1,\n        title: "Bohemian Rhapsody",\n        artists: ["Queen"],\n        album: "A Night at the Opera",\n        albumId: 101,\n        duration: "5:55",\n        image: "/assets/playlists/playlist1.jpg",\n      },\n      {\n        id: 2,\n        title: "Hotel California",\n        artists: ["Eagles"],\n        album: "Hotel California",\n        albumId: 102,\n        duration: "6:30",\n        image: "/assets/playlists/playlist2.webp",\n      },\n      {\n        id: 3,\n        title: "Stairway to Heaven",\n        artists: ["Led Zeppelin"],\n        album: "Led Zeppelin IV",\n        albumId: 103,\n        duration: "8:02",\n        image: "/assets/playlists/playlist3.jpg",\n      },\n      {\n        id: 4,\n        title: "Sweet Child O\' Mine",\n        artists: ["Guns N\' Roses"],\n        album: "Appetite for Destruction",\n        albumId: 104,\n        duration: "5:03",\n        image: "/assets/playlists/playlist4.jpg",\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-2.html": {
      url: "interfaces/Song-2.html",
      title: "interface - Song-2",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/musics-table-play/musics-table-play.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            albumId\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatIconModule } from \'@angular/material/icon\';\nimport { ChangeDetectionStrategy, Component, Input } from "@angular/core";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  albumId?: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-musics-table-play",\nimports: [MatIconModule],\n  templateUrl: "./musics-table-play.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MusicsTablePlay {\n  @Input() song!: Song;\n  @Input() isCurrentSong = false;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n  isPlaying = false;\n\n  isNewSongOfAnotherPlaylist(song: Song): boolean {\n    return this.currentMusic.playlist?.id !== song.albumId;\n  }\n\n  isCurrentSongRunning(song: Song): boolean {\n    return (\n      this.currentMusic.song?.id === song.id &&\n      this.currentMusic.playlist?.albumId === song.albumId &&\n      this.isPlaying\n    );\n  }\n\n  setNewCurrentMusic(song: Song): void {\n    // Mock: simular carga de nueva playlist\n    setTimeout(() => {\n      this.currentMusic = {\n        song: song,\n        playlist: {\n          id: song.albumId,\n          albumId: song.albumId,\n          name: `Album ${song.album}`,\n          description: `Playlist for ${song.album}`,\n        },\n        songs: [song],\n      };\n      this.isPlaying = true;\n    }, 100);\n  }\n\n  handleClick(song: Song): void {\n    if (this.isCurrentSongRunning(song)) {\n      this.isPlaying = false;\n      return;\n    }\n\n    if (this.isNewSongOfAnotherPlaylist(song)) {\n      this.setNewCurrentMusic(song);\n      return;\n    }\n\n    // La playlist es la misma, pero la canción es diferente\n    if (this.currentMusic.song?.id !== song.id) {\n      this.currentMusic = {\n        ...this.currentMusic,\n        song: song,\n      };\n    }\n    this.isPlaying = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-3.html": {
      url: "interfaces/Song-3.html",
      title: "interface - Song-3",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/player/player.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            albumId\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  AfterViewInit,\n} from "@angular/core";\nimport { PlayerControlButtonBar } from "../player-control-button-bar/player-control-button-bar";\nimport { PlayerCurrentSong } from "../player-current-song/player-current-song";\nimport { PlayerSoundControl } from "../player-sound-control/player-sound-control";\nimport { PlayerVolumeControl } from "../player-volume-control/player-volume-control";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\ninterface Playlist {\n  id: number;\n  name?: string;\n  description?: string;\n}\n\ninterface CurrentMusic {\n  song: Song | null;\n  playlist: Playlist | null;\n  songs: Song[];\n}\n\n@Component({\n  selector: "app-player",\n  imports: [\n    PlayerControlButtonBar,\n    PlayerCurrentSong,\n    PlayerSoundControl,\n    PlayerVolumeControl,\n  ],\n  templateUrl: "./player.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Player implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild("audioElement", { static: false })\n  audioRef!: ElementRef;\n\n  // Mock state para el reproductor\n  currentMusic: CurrentMusic = {\n    song: null,\n    playlist: null,\n    songs: [],\n  };\n\n  isPlaying = false;\n  volume = 0.5;\n\n  ngOnInit(): void {\n    // Inicializar con una canción mock\n    this.currentMusic = {\n      song: {\n        id: 1,\n        title: "Bohemian Rhapsody",\n        artists: ["Queen"],\n        album: "A Night at the Opera",\n        albumId: 101,\n        duration: "5:55",\n        image: "/assets/playlists/playlist1.jpg",\n      },\n      playlist: { id: 101 },\n      songs: [],\n    };\n  }\n\n  ngAfterViewInit(): void {\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (\n      this.audioRef?.nativeElement &&\n      typeof this.audioRef.nativeElement.pause === "function"\n    ) {\n      this.audioRef.nativeElement.pause();\n    }\n  }\n\n  play(): void {\n    this.audioRef?.nativeElement\n      ?.play?.()\n      .catch((e) => console.log("Error playing: ", e));\n  }\n\n  pause(): void {\n    this.audioRef?.nativeElement?.pause?.();\n  }\n\n  togglePlayPause(): void {\n    this.isPlaying = !this.isPlaying;\n    this.isPlaying ? this.play() : this.pause();\n  }\n\n  setVolume(newVolume: number): void {\n    this.volume = newVolume;\n    if (this.audioRef?.nativeElement) {\n      this.audioRef.nativeElement.volume = this.volume;\n    }\n  }\n\n  getNextSong(): Song | null {\n    // Mock: devolver la misma canción para el prototipo\n    return this.currentMusic.song;\n  }\n\n  onNextSong(): void {\n    const nextSong = this.getNextSong();\n    if (nextSong) {\n      this.currentMusic = { ...this.currentMusic, song: nextSong };\n    }\n  }\n\n  onPlayPauseClick(): void {\n    this.togglePlayPause();\n  }\n\n  onVolumeChange(volume: number): void {\n    this.setVolume(volume);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-4.html": {
      url: "interfaces/Song-4.html",
      title: "interface - Song-4",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/player-current-song/player-current-song.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            albumId\n                                        \n                                \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        albumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        albumId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from "@angular/core";\nimport { MatIconModule } from "@angular/material/icon";\nimport { Router } from "@angular/router";\n\ninterface Song {\n  id: number;\n  title: string;\n  artists: string[];\n  album: string;\n  albumId: number;\n  duration: string;\n  image: string;\n}\n\n@Component({\n  selector: "app-player-current-song",\n  imports: [MatIconModule],\n  templateUrl: "./player-current-song.html",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerCurrentSong {\n  @Input() song: Song | null = null;\n\n  constructor(private readonly router: Router) {}\n\n  navigateToCurrentSong() {\n    if (this.song) {\n      this.router.navigate(["/currentSong"]);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-5.html": {
      url: "interfaces/Song-5.html",
      title: "interface - Song-5",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/artist/artist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ChangeDetectorRef } from "@angular/core";\nimport { CommonModule } from "@angular/common";\nimport { ActivatedRoute } from "@angular/router";\n\ninterface Song {\n  title: string;\n  album: string;\n  duration: string;\n}\n\ninterface Album {\n  title: string;\n  year: string;\n  tracks: number;\n  cover: string;\n}\n\ninterface Award {\n  name: string;\n  year: string;\n  category: string;\n}\n\ninterface Artist {\n  id: number;\n  name: string;\n  genre: string;\n  image: string;\n  gradient: string;\n  monthlyListeners: string;\n  followers: string;\n  activeYears: string;\n  biography: string;\n  popularSongs: Song[];\n  albums: Album[];\n  awards: Award[];\n}\n\n@Component({\n  selector: "app-artist",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./artist.html",\n  styleUrls: ["./artist.css"],\n})\nexport class ArtistComponent implements OnInit {\n  artistId: string | null = null;\n  artist: Artist | null = null;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.artistId = this.route.snapshot.paramMap.get("id");\n    if (this.artistId === "1") {\n      this.loadGorillazData();\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log(\n      "Imagen cargada:",\n      img.src,\n      "Dimensiones:",\n      img.width,\n      "x",\n      img.height,\n    );\n\n    // Pequeño delay para asegurar que la imagen está completamente cargada\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar la imagen:", event);\n    this.applyFallbackGradient();\n  }\n\n  testDifferentImage() {\n    const testImages = [\n      "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=400&fit=crop", // Original\n      "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=400&h=400&fit=crop", // Azul/morado\n      "https://images.unsplash.com/photo-1511379938547-c1f69419868d?w=400&h=400&fit=crop", // Rojizo\n      "https://images.unsplash.com/photo-1446057032654-9d8885db76c6?w=400&h=400&fit=crop", // Verde\n    ];\n\n    const currentIndex = testImages.indexOf(this.artist!.image);\n    const nextIndex = (currentIndex + 1) % testImages.length;\n\n    console.log("🎨 Cambiando a imagen:", testImages[nextIndex]);\n    this.artist!.image = testImages[nextIndex];\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    try {\n      console.log("Iniciando extracción de colores...");\n\n      const canvas = document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      // Reducir el tamaño para análisis más rápido\n      const analysisSize = 200;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      // Configurar CORS para imágenes externas\n      img.crossOrigin = "anonymous";\n\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      // Extraer colores de diferentes puntos de la imagen\n      const colors = [];\n      const samples = 50; // Más muestras para mejor análisis\n\n      for (let i = 0; i  200 && r + g + b > 60 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        console.log("Color dominante:", dominantColor);\n\n        const gradient = this.generateGradient(dominantColor);\n        console.log("Gradiente generado:", gradient);\n\n        if (this.artist) {\n          this.artist.gradient = gradient;\n          console.log("Gradiente aplicado al artista");\n          // Forzar detección de cambios\n          this.cdr.detectChanges();\n        }\n      } else {\n        console.warn("No se encontraron colores válidos en la imagen");\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores de la imagen:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.artist) {\n      this.artist.gradient =\n        "linear-gradient(135deg, #FF6B6B 0%, #4ECDC4 100%)";\n      console.log("Aplicado gradiente de fallback");\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    // Agrupar colores similares y encontrar el más común\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      // Reducir la precisión del color para agrupar similares\n      const key = `${Math.floor(color.r / 20) * 20}-${Math.floor(color.g / 20) * 20}-${Math.floor(color.b / 20) * 20}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    // Encontrar el grupo con más colores\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    // Crear variaciones del color dominante\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n\n    // Color más oscuro para el gradiente\n    const darkerColor = `rgb(${Math.max(0, color.r - 60)}, ${Math.max(0, color.g - 60)}, ${Math.max(0, color.b - 60)})`;\n\n    // Color más claro para el gradiente\n    const lighterColor = `rgb(${Math.min(255, color.r + 40)}, ${Math.min(255, color.g + 40)}, ${Math.min(255, color.b + 40)})`;\n\n    // Determinar si el color es muy oscuro o muy claro para ajustar la dirección\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  200) {\n      // Color claro - gradiente hacia más oscuro\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      // Color medio - gradiente en ambas direcciones\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadGorillazData() {\n    this.artist = {\n      id: 1,\n      name: "Gorillaz",\n      genre: "Alternative Rock, Electronic, Hip Hop",\n      image: "/assets/gorillaz2.jpg", // Imagen de prueba\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)", // Gradiente inicial que será reemplazado\n      monthlyListeners: "45.2M",\n      followers: "12.8M",\n      activeYears: "1998 - presente",\n      biography: `Gorillaz es una banda virtual británica creada en 1998 por Damon Albarn y Jamie Hewlett. La banda está compuesta por cuatro miembros ficticios animados: 2-D (vocalista, teclados), Murdoc Niccals (bajo), Noodle (guitarra, teclados, voz ocasional) y Russel Hobbs (batería). Gorillaz ha sido aclamado como uno de los proyectos musicales más innovadores y exitosos del siglo XXI, combinando elementos de rock alternativo, hip hop, electrónica y pop.\n\nEl concepto único de la banda como un grupo completamente virtual, con personajes animados que tienen sus propias personalidades y trasfondos elaborados, fue revolucionario en la industria musical. A lo largo de su carrera, Gorillaz ha colaborado con una amplia gama de artistas, desde De La Soul y Del the Funky Homosapien hasta Elton John y Beck, creando un sonido ecléctico que trasciende géneros musicales.\n\nLa banda ha lanzado múltiples álbumes exitosos, incluyendo su álbum debut homónimo (2001), "Demon Days" (2005), "Plastic Beach" (2010), "Humanz" (2017), "The Now Now" (2018), "Song Machine" (2020) y "Cracker Island" (2023). Sus videos musicales y presentaciones en vivo utilizan tecnología de vanguardia para dar vida a los personajes animados, creando experiencias visuales únicas.`,\n      popularSongs: [\n        { title: "Feel Good Inc.", album: "Demon Days", duration: "3:41" },\n        { title: "Clint Eastwood", album: "Gorillaz", duration: "5:41" },\n        {\n          title: "On Melancholy Hill",\n          album: "Plastic Beach",\n          duration: "3:53",\n        },\n        { title: "Saturnz Barz", album: "Humanz", duration: "3:58" },\n        { title: "Humility", album: "The Now Now", duration: "3:01" },\n        { title: "Dirty Harry", album: "Demon Days", duration: "3:43" },\n        { title: "Stylo", album: "Plastic Beach", duration: "4:30" },\n        { title: "Tranz", album: "The Now Now", duration: "2:42" },\n        { title: "Cracker Island", album: "Cracker Island", duration: "3:42" },\n        { title: "19-2000", album: "Gorillaz", duration: "3:27" },\n      ],\n      albums: [\n        {\n          title: "Gorillaz",\n          year: "2001",\n          tracks: 15,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Demon Days",\n          year: "2005",\n          tracks: 15,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Plastic Beach",\n          year: "2010",\n          tracks: 16,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n        {\n          title: "Humanz",\n          year: "2017",\n          tracks: 20,\n          cover: "/assets/playlists/playlist4.jpg",\n        },\n        {\n          title: "The Now Now",\n          year: "2018",\n          tracks: 11,\n          cover: "/assets/playlists/playlist1.jpg",\n        },\n        {\n          title: "Song Machine, Season One",\n          year: "2020",\n          tracks: 17,\n          cover: "/assets/playlists/playlist2.webp",\n        },\n        {\n          title: "Cracker Island",\n          year: "2023",\n          tracks: 10,\n          cover: "/assets/playlists/playlist3.jpg",\n        },\n      ],\n      awards: [\n        {\n          name: "Grammy Award",\n          year: "2006",\n          category: "Best Pop Collaboration with Vocals - Feel Good Inc.",\n        },\n        { name: "BRIT Award", year: "2006", category: "Best British Group" },\n        {\n          name: "MTV Video Music Award",\n          year: "2005",\n          category: "Best Group Video - Feel Good Inc.",\n        },\n        {\n          name: "Q Award",\n          year: "2005",\n          category: "Best Video - Feel Good Inc.",\n        },\n        {\n          name: "Ivor Novello Award",\n          year: "2002",\n          category: "Best Contemporary Song - Clint Eastwood",\n        },\n        { name: "NME Award", year: "2006", category: "Best Band" },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Song-6.html": {
      url: "interfaces/Song-6.html",
      title: "interface - Song-6",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/currentsong/current-song.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            cover\n                                        \n                                \n                                \n                                        \n                                            currentTime\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            gradient\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isPlaying\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lyrics\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradient:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPlaying\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPlaying:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lyrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lyrics:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n  Inject,\n  PLATFORM_ID,\n} from "@angular/core";\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from "@angular/common";\nimport { Router } from "@angular/router";\n\ninterface Song {\n  id: number;\n  title: string;\n  artist: string;\n  album: string;\n  duration: string;\n  currentTime: string;\n  progress: number;\n  cover: string;\n  gradient: string;\n  isPlaying: boolean;\n  lyrics?: string;\n}\n\n@Component({\n  selector: "app-current-song",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: "./currentsong.html",\n  styleUrls: ["./current-song.css"],\n})\nexport class CurrentSongComponent implements OnInit, OnDestroy {\n  currentSong: Song | null = null;\n  showLyricsPanel = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly cdr: ChangeDetectorRef,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n  ) {}\n\n  ngOnInit() {\n    this.loadCurrentSong();\n    // Evitar scroll en el body solo en el navegador\n    if (isPlatformBrowser(this.platformId)) {\n      this.document.body.style.overflow = "hidden";\n      this.document.body.style.margin = "0";\n      this.document.body.style.padding = "0";\n    }\n  }\n\n  ngOnDestroy() {\n    // Restaurar scroll cuando se salga de la vista solo en el navegador\n    if (isPlatformBrowser(this.platformId)) {\n      this.document.body.style.overflow = "";\n      this.document.body.style.margin = "";\n      this.document.body.style.padding = "";\n    }\n  }\n\n  onImageLoad(event: Event) {\n    const img = event.target as HTMLImageElement;\n    console.log("Imagen de canción cargada:", img.src);\n\n    setTimeout(() => {\n      this.extractColorsFromImage(img);\n    }, 100);\n  }\n\n  onImageError(event: Event) {\n    console.error("Error al cargar imagen de canción:", event);\n    this.applyFallbackGradient();\n  }\n\n  togglePlayPause() {\n    if (this.currentSong) {\n      this.currentSong.isPlaying = !this.currentSong.isPlaying;\n      console.log(this.currentSong.isPlaying ? "Reproduciendo" : "Pausado");\n    }\n  }\n\n  toggleLyricsPanel() {\n    this.showLyricsPanel = !this.showLyricsPanel;\n    console.log(\n      "Panel de letras:",\n      this.showLyricsPanel ? "Abierto" : "Cerrado",\n    );\n  }\n\n  goBack() {\n    this.router.navigate(["/home"]);\n  }\n\n  skipPrevious() {\n    console.log("Canción anterior");\n    // Aquí iría la lógica para cambiar a la canción anterior\n  }\n\n  skipNext() {\n    console.log("Siguiente canción");\n    // Aquí iría la lógica para cambiar a la siguiente canción\n  }\n\n  onProgressClick(event: MouseEvent) {\n    const progressBar = event.currentTarget as HTMLElement;\n    const rect = progressBar.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const width = rect.width;\n    const newProgress = (clickX / width) * 100;\n\n    if (this.currentSong) {\n      this.currentSong.progress = newProgress;\n      console.log("Nuevo progreso:", newProgress + "%");\n    }\n  }\n\n  private extractColorsFromImage(img: HTMLImageElement) {\n    if (!isPlatformBrowser(this.platformId)) {\n      this.applyFallbackGradient();\n      return;\n    }\n\n    try {\n      const canvas = this.document.createElement("canvas");\n      const ctx = canvas.getContext("2d");\n\n      if (!ctx) {\n        console.error("No se pudo obtener contexto 2D del canvas");\n        return;\n      }\n\n      const analysisSize = 150;\n      canvas.width = analysisSize;\n      canvas.height = analysisSize;\n\n      img.crossOrigin = "anonymous";\n      ctx.drawImage(img, 0, 0, analysisSize, analysisSize);\n\n      const colors = [];\n      const samples = 30;\n\n      for (let i = 0; i  200 && r + g + b > 50 && r + g + b  0) {\n        const dominantColor = this.findDominantColor(colors);\n        const gradient = this.generateGradient(dominantColor);\n\n        if (this.currentSong) {\n          this.currentSong.gradient = gradient;\n          this.cdr.detectChanges();\n        }\n      } else {\n        this.applyFallbackGradient();\n      }\n    } catch (error) {\n      console.error("Error al extraer colores:", error);\n      this.applyFallbackGradient();\n    }\n  }\n\n  private applyFallbackGradient() {\n    if (this.currentSong) {\n      this.currentSong.gradient =\n        "linear-gradient(135deg, #667eea 0%, #764ba2 100%)";\n    }\n  }\n\n  private findDominantColor(\n    colors: { r: number; g: number; b: number }[],\n  ) {\n    const colorGroups: any = {};\n\n    colors.forEach((color) => {\n      const key = `${Math.floor(color.r / 25) * 25}-${Math.floor(color.g / 25) * 25}-${Math.floor(color.b / 25) * 25}`;\n      if (!colorGroups[key]) {\n        colorGroups[key] = { ...color, count: 0 };\n      }\n      colorGroups[key].count++;\n    });\n\n    let dominantColor = colors[0];\n    let maxCount = 0;\n\n    Object.values(colorGroups).forEach((group: any) => {\n      if (group.count > maxCount) {\n        maxCount = group.count;\n        dominantColor = group;\n      }\n    });\n\n    return dominantColor;\n  }\n\n  private generateGradient(color: { r: number; g: number; b: number }) {\n    const baseColor = `rgb(${color.r}, ${color.g}, ${color.b})`;\n    const darkerColor = `rgb(${Math.max(0, color.r - 80)}, ${Math.max(0, color.g - 80)}, ${Math.max(0, color.b - 80)})`;\n    const lighterColor = `rgb(${Math.min(255, color.r + 50)}, ${Math.min(255, color.g + 50)}, ${Math.min(255, color.b + 50)})`;\n\n    const brightness = (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n\n    if (brightness  180) {\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 100%)`;\n    } else {\n      return `linear-gradient(135deg, ${darkerColor} 0%, ${baseColor} 50%, ${lighterColor} 100%)`;\n    }\n  }\n\n  private loadCurrentSong() {\n    // Simulando datos de la canción actual\n    this.currentSong = {\n      id: 1,\n      title: "Feel Good Inc.",\n      artist: "Gorillaz",\n      album: "Demon Days",\n      duration: "3:41",\n      currentTime: "1:23",\n      progress: 37,\n      cover: "/assets/gorillaz2.jpg",\n      gradient: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",\n      isPlaying: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/SongService.html": {
      url: "injectables/SongService.html",
      title: "injectable - SongService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SongService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/song.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPlayHistory\n                            \n                            \n                                deleteSong\n                            \n                            \n                                getLikedSongs\n                            \n                            \n                                getPersonalizedRecommendations\n                            \n                            \n                                getPlayHistory\n                            \n                            \n                                getPopularSongs\n                            \n                            \n                                getRecentSongs\n                            \n                            \n                                getSongById\n                            \n                            \n                                getSongLyrics\n                            \n                            \n                                getSongRecommendations\n                            \n                            \n                                getSongs\n                            \n                            \n                                getSongsByAlbum\n                            \n                            \n                                getSongsByArtist\n                            \n                            \n                                getSongsByGenre\n                            \n                            \n                                likeSong\n                            \n                            \n                                playSong\n                            \n                            \n                                searchSongs\n                            \n                            \n                                unlikeSong\n                            \n                            \n                                updateSong\n                            \n                            \n                                uploadSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/song.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearPlayHistory\n                        \n                    \n                \n            \n            \n                \nclearPlayHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:191\n                        \n                    \n\n\n            \n                \n                        Limpiar historial de reproducción\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSong\n                        \n                    \n                \n            \n            \n                \ndeleteSong(songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Eliminar una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLikedSongs\n                        \n                    \n                \n            \n            \n                \ngetLikedSongs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtener canciones que le gustan al usuario\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPersonalizedRecommendations\n                        \n                    \n                \n            \n            \n                \ngetPersonalizedRecommendations(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:135\n                        \n                    \n\n\n            \n                \n                        Obtener recomendaciones personalizadas para el usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayHistory\n                        \n                    \n                \n            \n            \n                \ngetPlayHistory(limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Obtener historial de reproducción del usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPopularSongs\n                        \n                    \n                \n            \n            \n                \ngetPopularSongs(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Obtener canciones populares\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecentSongs\n                        \n                    \n                \n            \n            \n                \ngetRecentSongs(limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Obtener canciones recientes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongById\n                        \n                    \n                \n            \n            \n                \ngetSongById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtener una canción por ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongLyrics\n                        \n                    \n                \n            \n            \n                \ngetSongLyrics(songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Obtener letra de una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongRecommendations\n                        \n                    \n                \n            \n            \n                \ngetSongRecommendations(songId: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Obtener recomendaciones basadas en una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongs\n                        \n                    \n                \n            \n            \n                \ngetSongs(filters?: SearchFilters)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Obtener todas las canciones con filtros opcionales\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            SearchFilters\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongsByAlbum\n                        \n                    \n                \n            \n            \n                \ngetSongsByAlbum(albumId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Obtener canciones por álbum\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                albumId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongsByArtist\n                        \n                    \n                \n            \n            \n                \ngetSongsByArtist(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Obtener canciones por artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongsByGenre\n                        \n                    \n                \n            \n            \n                \ngetSongsByGenre(genre: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Obtener canciones por género\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genre\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likeSong\n                        \n                    \n                \n            \n            \n                \nlikeSong(songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Dar like a una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Registrar reproducción de una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string, limit?: number, offset?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Buscar canciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlikeSong\n                        \n                    \n                \n            \n            \n                \nunlikeSong(songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Quitar like a una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSong\n                        \n                    \n                \n            \n            \n                \nupdateSong(songId: string, songData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Actualizar información de una canción\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songData\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadSong\n                        \n                    \n                \n            \n            \n                \nuploadSong(file: File, songData?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/song.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Subir una nueva canción (para artistas/administradores)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "/songs"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/song.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable } from "rxjs";\nimport { ApiService } from "./api.service";\nimport { Song, SearchFilters, PaginatedResponse } from "../models";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class SongService {\n  private endpoint = "/songs";\n\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Obtener todas las canciones con filtros opcionales\n   */\n  getSongs(filters?: SearchFilters): Observable> {\n    return this.apiService.getPaginated(this.endpoint, filters);\n  }\n\n  /**\n   * Obtener una canción por ID\n   */\n  getSongById(id: string): Observable {\n    return this.apiService.get(`${this.endpoint}/${id}`);\n  }\n\n  /**\n   * Buscar canciones\n   */\n  searchSongs(\n    query: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(`${this.endpoint}/search`, {\n      query,\n      limit: limit || 20,\n      offset: offset || 0,\n    });\n  }\n\n  /**\n   * Obtener canciones populares\n   */\n  getPopularSongs(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/popular`, {\n      limit: limit || 50,\n    });\n  }\n\n  /**\n   * Obtener canciones recientes\n   */\n  getRecentSongs(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/recent`, {\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Obtener canciones por artista\n   */\n  getSongsByArtist(artistId: string): Observable {\n    return this.apiService.get(`${this.endpoint}/artist/${artistId}`);\n  }\n\n  /**\n   * Obtener canciones por álbum\n   */\n  getSongsByAlbum(albumId: string): Observable {\n    return this.apiService.get(`${this.endpoint}/album/${albumId}`);\n  }\n\n  /**\n   * Obtener canciones por género\n   */\n  getSongsByGenre(\n    genre: string,\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(\n      `${this.endpoint}/genre/${genre}`,\n      {\n        limit: limit || 20,\n        offset: offset || 0,\n      },\n    );\n  }\n\n  /**\n   * Registrar reproducción de una canción\n   */\n  playSong(songId: string): Observable {\n    return this.apiService.post(`${this.endpoint}/${songId}/play`, {});\n  }\n\n  /**\n   * Dar like a una canción\n   */\n  likeSong(songId: string): Observable {\n    return this.apiService.post(`${this.endpoint}/${songId}/like`, {});\n  }\n\n  /**\n   * Quitar like a una canción\n   */\n  unlikeSong(songId: string): Observable {\n    return this.apiService.delete(`${this.endpoint}/${songId}/like`);\n  }\n\n  /**\n   * Obtener canciones que le gustan al usuario\n   */\n  getLikedSongs(): Observable {\n    return this.apiService.get(`${this.endpoint}/liked`);\n  }\n\n  /**\n   * Obtener recomendaciones basadas en una canción\n   */\n  getSongRecommendations(songId: string, limit?: number): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/${songId}/recommendations`,\n      {\n        limit: limit || 10,\n      },\n    );\n  }\n\n  /**\n   * Obtener recomendaciones personalizadas para el usuario\n   */\n  getPersonalizedRecommendations(limit?: number): Observable {\n    return this.apiService.get(`${this.endpoint}/recommendations`, {\n      limit: limit || 20,\n    });\n  }\n\n  /**\n   * Obtener letra de una canción\n   */\n  getSongLyrics(songId: string): Observable {\n    return this.apiService.get(\n      `${this.endpoint}/${songId}/lyrics`,\n    );\n  }\n\n  /**\n   * Subir una nueva canción (para artistas/administradores)\n   */\n  uploadSong(file: File, songData?: any): Observable {\n    return this.apiService.upload(\n      `${this.endpoint}/upload`,\n      file,\n      songData,\n    );\n  }\n\n  /**\n   * Actualizar información de una canción\n   */\n  updateSong(songId: string, songData: Partial): Observable {\n    return this.apiService.put(`${this.endpoint}/${songId}`, songData);\n  }\n\n  /**\n   * Eliminar una canción\n   */\n  deleteSong(songId: string): Observable {\n    return this.apiService.delete(`${this.endpoint}/${songId}`);\n  }\n\n  /**\n   * Obtener historial de reproducción del usuario\n   */\n  getPlayHistory(\n    limit?: number,\n    offset?: number,\n  ): Observable> {\n    return this.apiService.getPaginated(`${this.endpoint}/history`, {\n      limit: limit || 50,\n      offset: offset || 0,\n    });\n  }\n\n  /**\n   * Limpiar historial de reproducción\n   */\n  clearPlayHistory(): Observable {\n    return this.apiService.delete(`${this.endpoint}/history`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/SupabaseAuthRepository.html": {
      url: "injectables/SupabaseAuthRepository.html",
      title: "injectable - SupabaseAuthRepository",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseAuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/repositories/supabase-auth.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                supabaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentSession\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Private\n                                mapSupabaseUserToDomain\n                            \n                            \n                                    Async\n                                refreshSession\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendPasswordResetEmail\n                            \n                            \n                                    Async\n                                signInWithProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: LoginCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            LoginCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapSupabaseUserToDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapSupabaseUserToDomain(supabaseUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supabaseUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshSession()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(credentials: RegisterCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            RegisterCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendPasswordResetEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithProvider(provider: \"google\" | \"github\" | \"facebook\" | \"twitter\" | \"discord\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                provider\n                                            \n                                                        \"google\" | \"github\" | \"facebook\" | \"twitter\" | \"discord\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        supabaseService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SupabaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/repositories/supabase-auth.repository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { IAuthRepository, LoginCredentials, RegisterCredentials, AuthResult, AuthSession } from '@app/domain/repositories/i-auth.repository';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { User } from '@app/domain/entities/user.entity';\nimport { AuthError, LoginError, RegisterError, SessionError, NetworkError } from '@app/domain/errors/auth.errors';\n\n@Injectable()\nexport class SupabaseAuthRepository implements IAuthRepository {\n  private readonly supabaseService = inject(SupabaseService);\n\n  async login(credentials: LoginCredentials): Promise {\n    try {\n      const { data, error } = await this.supabaseService.client.auth.signInWithPassword(credentials);\n      \n      if (error) {\n        throw new LoginError('Error al iniciar sesión', error);\n      }\n\n      if (!data.user || !data.session) {\n        throw new LoginError('No se pudo obtener la sesión del usuario');\n      }\n\n      return {\n        user: this.mapSupabaseUserToDomain(data.user),\n        token: data.session.access_token\n      };\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al iniciar sesión', error);\n    }\n  }\n\n  async register(credentials: RegisterCredentials): Promise {\n    try {\n      const { data, error } = await this.supabaseService.client.auth.signUp({\n        email: credentials.email,\n        password: credentials.password,\n        options: {\n          data: {\n            name: credentials.name,\n          },\n        },\n      });\n\n      if (error) {\n        throw new RegisterError('Error al registrarse', error);\n      }\n\n      if (!data.user || !data.session) {\n        throw new RegisterError('No se pudo crear la cuenta del usuario');\n      }\n\n      return {\n        user: this.mapSupabaseUserToDomain(data.user),\n        token: data.session.access_token\n      };\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al registrarse', error);\n    }\n  }\n\n  async logout(): Promise {\n    try {\n      const { error } = await this.supabaseService.client.auth.signOut();\n      if (error) {\n        throw new SessionError('Error al cerrar sesión', error);\n      }\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al cerrar sesión', error);\n    }\n  }\n\n  async getCurrentSession(): Promise {\n    try {\n      const { data, error } = await this.supabaseService.client.auth.getSession();\n      \n      if (error) {\n        throw new SessionError('Error al obtener la sesión', error);\n      }\n\n      return {\n        user: data.session?.user ? this.mapSupabaseUserToDomain(data.session.user) : null,\n        isAuthenticated: !!data.session,\n        token: data.session?.access_token || null\n      };\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al obtener la sesión', error);\n    }\n  }\n\n  async refreshSession(): Promise {\n    try {\n      const { data, error } = await this.supabaseService.client.auth.refreshSession();\n      \n      if (error) {\n        throw new SessionError('Error al refrescar la sesión', error);\n      }\n\n      if (!data.session) return null;\n\n      return {\n        user: data.session.user ? this.mapSupabaseUserToDomain(data.session.user) : null,\n        isAuthenticated: !!data.session,\n        token: data.session.access_token\n      };\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al refrescar la sesión', error);\n    }\n  }\n\n  async sendPasswordResetEmail(email: string): Promise {\n    try {\n      const { error } = await this.supabaseService.client.auth.resetPasswordForEmail(email, {\n        redirectTo: window.location.origin + '/reset-password',\n      });\n      \n      if (error) {\n        throw new AuthError('Error al enviar el correo de recuperación', 'PASSWORD_RESET_ERROR', error);\n      }\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError('Error de conexión al enviar el correo', error);\n    }\n  }\n\n  async signInWithProvider(provider: 'google' | 'github' | 'facebook' | 'twitter' | 'discord'): Promise {\n    try {\n      const { error } = await this.supabaseService.client.auth.signInWithOAuth({\n        provider,\n        options: {\n          redirectTo: window.location.origin,\n        },\n      });\n      \n      if (error) {\n        throw new LoginError(`Error al iniciar sesión con ${provider}`, error);\n      }\n    } catch (error) {\n      if (error instanceof AuthError) throw error;\n      throw new NetworkError(`Error de conexión con ${provider}`, error);\n    }\n  }\n\n  private mapSupabaseUserToDomain(supabaseUser: any): User {\n    return {\n      id: supabaseUser.id,\n      email: supabaseUser.email ?? '',\n      name: supabaseUser.user_metadata?.name ?? '',\n      createdAt: new Date(supabaseUser.created_at ?? ''),\n      updatedAt: new Date(supabaseUser.updated_at ?? ''),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/SupabaseService.html": {
      url: "injectables/SupabaseService.html",
      title: "injectable - SupabaseService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/supabase/supabase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _supabase\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/infrastructure/supabase/supabase.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/infrastructure/supabase/supabase.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/infrastructure/supabase/supabase.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { createClient, SupabaseClient } from "@supabase/supabase-js";\nimport { environment } from "../../../environments/environment";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class SupabaseService {\n  private readonly _supabase: SupabaseClient;\n\n  constructor() {\n    this._supabase = createClient(\n      environment.SUPABASE.SUPABASE_URL,\n      environment.SUPABASE.SUPABASE_ANON_KEY,\n    );\n  }\n\n  get client(): SupabaseClient {\n    return this._supabase;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/TestConnectionService.html": {
      url: "injectables/TestConnectionService.html",
      title: "injectable - TestConnectionService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test-connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDjangoServer\n                            \n                            \n                                getDjangoMockData\n                            \n                            \n                                getFullUrl\n                            \n                            \n                                showDjangoSetupGuide\n                            \n                            \n                                testConnection\n                            \n                            \n                                    Private\n                                testDirectBackend\n                            \n                            \n                                testDjangoEndpoints\n                            \n                            \n                                testSpecificEndpoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test-connection.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDjangoServer\n                        \n                    \n                \n            \n            \n                \ncheckDjangoServer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Verificar si Django está corriendo\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDjangoMockData\n                        \n                    \n                \n            \n            \n                \ngetDjangoMockData(type: "playlists" | "songs" | "artists")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:144\n                        \n                    \n\n\n            \n                \n                        Datos mock mientras configuras el backend\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        "playlists" | "songs" | "artists"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullUrl\n                        \n                    \n                \n            \n            \n                \ngetFullUrl(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Obtener la URL completa para debug\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDjangoSetupGuide\n                        \n                    \n                \n            \n            \n                \nshowDjangoSetupGuide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Guía de configuración para el desarrollador\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testConnection\n                        \n                    \n                \n            \n            \n                \ntestConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Probar la conexión con Django backend\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testDirectBackend\n                        \n                    \n                \n            \n            \n                \n                        \n                    testDirectBackend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testDjangoEndpoints\n                        \n                    \n                \n            \n            \n                \ntestDjangoEndpoints()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Probar endpoints específicos de Django REST Framework\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testSpecificEndpoint\n                        \n                    \n                \n            \n            \n                \ntestSpecificEndpoint(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/test-connection.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Probar un endpoint específico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { Observable, of } from "rxjs";\nimport { ApiService } from "./api.service";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TestConnectionService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Probar la conexión con Django backend\n   */\n  testConnection(): Observable {\n    console.log("🔍 Probando conexión con Django backend...");\n\n    // Intentar conectar al endpoint de test de Django\n    return this.apiService.get("/test/");\n  }\n\n  /**\n   * Probar un endpoint específico\n   */\n  testSpecificEndpoint(endpoint: string): Observable {\n    console.log(`🔍 Probando endpoint específico: ${endpoint}`);\n    return this.apiService.get(endpoint);\n  }\n\n  /**\n   * Obtener la URL completa para debug\n   */\n  getFullUrl(endpoint: string): string {\n    return this.apiService.getFullUrl(endpoint);\n  }\n\n  /**\n   * Probar endpoints específicos de Django REST Framework\n   */\n  testDjangoEndpoints(): {\n    playlists: Observable;\n    songs: Observable;\n    artists: Observable;\n    auth: Observable;\n  } {\n    return {\n      playlists: this.apiService.get("/playlists/"),\n      songs: this.apiService.get("/songs/"),\n      artists: this.apiService.get("/artists/"),\n      auth: this.apiService.get("/auth/user/"),\n    };\n  }\n\n  /**\n   * Verificar si Django está corriendo\n   */\n  checkDjangoServer(): Promise {\n    return new Promise((resolve) => {\n      // Primero probar la raíz de la API\n      this.apiService.get("/").subscribe({\n        next: (response) => {\n          console.log("✅ Django backend conectado:", response);\n          resolve(true);\n        },\n        error: (error) => {\n          console.error("❌ Error conectando a Django:", error.message);\n\n          // Si falla, probar directamente el backend sin /api\n          this.testDirectBackend().then(resolve);\n        },\n      });\n    });\n  }\n\n  private testDirectBackend(): Promise {\n    return new Promise((resolve) => {\n      // Probar directamente http://localhost:8000\n      fetch("http://localhost:8000")\n        .then((response) => {\n          if (response.ok) {\n            console.log("✅ Django servidor corriendo en puerto 8000");\n            resolve(true);\n          } else {\n            console.log("⚠️ Django responde pero con error:", response.status);\n            resolve(false);\n          }\n        })\n        .catch((error) => {\n          console.error(\n            "❌ Django no está corriendo o hay problemas de CORS:",\n            error,\n          );\n          resolve(false);\n        });\n    });\n  }\n\n  /**\n   * Guía de configuración para el desarrollador\n   */\n  showDjangoSetupGuide(): void {\n    console.log(`\n🚀 GUÍA DE CONFIGURACIÓN DJANGO + ANGULAR\n\n1. **Verificar que Django esté corriendo:**\n   python manage.py runserver 8000\n\n2. **Configurar CORS en Django (settings.py):**\n   INSTALLED_APPS = [\n     ...\n     \'corsheaders\',\n   ]\n   \n   MIDDLEWARE = [\n     \'corsheaders.middleware.CorsMiddleware\',\n     \'django.middleware.common.CommonMiddleware\',\n     ...\n   ]\n   \n   CORS_ALLOWED_ORIGINS = [\n     "http://localhost:4200",\n     "http://localhost:4201",\n   ]\n   \n   CORS_ALLOW_CREDENTIALS = True\n\n3. **URLs típicas de Django REST Framework:**\n   - GET  /api/playlists/\n   - GET  /api/playlists/{id}/\n   - POST /api/playlists/\n   - GET  /api/songs/\n   - GET  /api/artists/\n   - POST /api/auth/login/\n   - POST /api/auth/register/\n\n4. **Verificar endpoints disponibles:**\n   - Visita: http://localhost:8000/api/ (Django REST Framework browser)\n   - O: http://localhost:8000/swagger/ (si tienes drf-yasg configurado)\n    `);\n  }\n\n  /**\n   * Datos mock mientras configuras el backend\n   */\n  getDjangoMockData(type: "playlists" | "songs" | "artists"): Observable {\n    const mockData = {\n      playlists: {\n        count: 3,\n        next: null,\n        previous: null,\n        results: [\n          {\n            id: 1,\n            name: "Mi Playlist Favorita",\n            description: "Las mejores canciones para relajarse",\n            cover_image: "https://picsum.photos/300/300?random=1",\n            is_public: true,\n            created_at: "2024-01-15T10:00:00Z",\n            updated_at: "2024-01-15T10:00:00Z",\n            owner: 1,\n            songs_count: 15,\n          },\n          {\n            id: 2,\n            name: "Música para Trabajar",\n            description: "Concentración y productividad",\n            cover_image: "https://picsum.photos/300/300?random=2",\n            is_public: true,\n            created_at: "2024-01-10T10:00:00Z",\n            updated_at: "2024-01-10T10:00:00Z",\n            owner: 1,\n            songs_count: 25,\n          },\n        ],\n      },\n      songs: {\n        count: 2,\n        next: null,\n        previous: null,\n        results: [\n          {\n            id: 1,\n            title: "Bohemian Rhapsody",\n            artist: 1,\n            artist_name: "Queen",\n            duration: 355,\n            file_url: "https://example.com/song1.mp3",\n            plays_count: 1000000,\n            likes_count: 50000,\n            created_at: "2024-01-01T10:00:00Z",\n          },\n        ],\n      },\n      artists: {\n        count: 1,\n        next: null,\n        previous: null,\n        results: [\n          {\n            id: 1,\n            name: "Queen",\n            image: "https://picsum.photos/300/300?random=10",\n            followers_count: 2400000,\n            is_verified: true,\n            genres: ["Rock", "Classic Rock"],\n            created_at: "2024-01-01T10:00:00Z",\n          },\n        ],\n      },\n    };\n\n    return of(mockData[type]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/TokenStorageService.html": {
      url: "injectables/TokenStorageService.html",
      title: "injectable - TokenStorageService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/infrastructure/services/token.storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearToken\n                            \n                            \n                                getToken\n                            \n                            \n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearToken\n                        \n                    \n                \n            \n            \n                \nclearToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token.storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token.storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n            \n                \nsetToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/infrastructure/services/token.storage.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@angular/core";\nimport { environment } from "src/environments/environment";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TokenStorageService {\n  setToken(token: string) {\n    localStorage.setItem(environment.STORAGE_TOKEN_KEY, token);\n  }\n  getToken(): string | null {\n    return localStorage.getItem(environment.STORAGE_TOKEN_KEY);\n  }\n  clearToken() {\n    localStorage.removeItem(environment.STORAGE_TOKEN_KEY);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/UpdatePlaylistDto.html": {
      url: "interfaces/UpdatePlaylistDto.html",
      title: "interface - UpdatePlaylistDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdatePlaylistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coverImage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/User.html": {
      url: "interfaces/User.html",
      title: "interface - User",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profileImage\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  username: string;\n  email: string;\n  profileImage?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Artist {\n  id: string;\n  name: string;\n  image?: string;\n  description?: string;\n  followers?: number;\n  verified?: boolean;\n  genres?: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Album {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  coverImage?: string;\n  releaseDate: string;\n  totalTracks: number;\n  duration: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Song {\n  id: string;\n  title: string;\n  artistId: string;\n  artist?: Artist;\n  albumId?: string;\n  album?: Album;\n  duration: number; // en segundos\n  fileUrl: string;\n  coverImage?: string;\n  lyrics?: string;\n  plays: number;\n  likes: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Playlist {\n  id: string;\n  name: string;\n  description?: string;\n  userId: string;\n  user?: User;\n  coverImage?: string;\n  songs: Song[];\n  isPublic: boolean;\n  totalDuration: number;\n  totalSongs: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PlaylistSong {\n  id: string;\n  playlistId: string;\n  songId: string;\n  song: Song;\n  addedAt: string;\n  order: number;\n}\n\n// DTOs para las peticiones\nexport interface CreatePlaylistDto {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface UpdatePlaylistDto {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  coverImage?: string;\n}\n\nexport interface AddSongToPlaylistDto {\n  songId: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken?: string;\n}\n\n// Respuestas de la API\nexport interface ApiResponse {\n  success: boolean;\n  data: T;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse {\n  success: boolean;\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n  message?: string;\n}\n\n// Filtros y búsquedas\nexport interface SearchFilters {\n  query?: string;\n  type?: "song" | "artist" | "album" | "playlist";\n  genre?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface PlaylistFilters {\n  userId?: string;\n  isPublic?: boolean;\n  limit?: number;\n  offset?: number;\n  sortBy?: "createdAt" | "name" | "totalSongs";\n  sortOrder?: "asc" | "desc";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/User-1.html": {
      url: "interfaces/User-1.html",
      title: "interface - User-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: string;\n  email: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/UserDTO.html": {
      url: "interfaces/UserDTO.html",
      title: "interface - UserDTO",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserDTO {\n  id: string;\n  email: string;\n  name: string;\n  token?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/UserPerfilComponent.html": {
      url: "components/UserPerfilComponent.html",
      title: "component - UserPerfilComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UserPerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-p/user-perfil.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-perfil.css\n            \n\n\n\n            \n                templateUrl\n                ./user-perfil.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isEditing\n                            \n                            \n                                isLoading\n                            \n                            \n                                originalValues\n                            \n                            \n                                profileForm\n                            \n                            \n                                profileImageUrl\n                            \n                            \n                                selectedImageFile\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEdit\n                            \n                            \n                                enableEdit\n                            \n                            \n                                loadUserData\n                            \n                            \n                                    Private\n                                markFormGroupTouched\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageSelected\n                            \n                            \n                                removeProfileImage\n                            \n                            \n                                saveProfile\n                            \n                            \n                                    Private\n                                showSuccessMessage\n                            \n                            \n                                triggerImageUpload\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-p/user-perfil.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEdit\n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableEdit\n                        \n                    \n                \n            \n            \n                \nenableEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                        \n                    markFormGroupTouched()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageSelected\n                        \n                    \n                \n            \n            \n                \nonImageSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProfileImage\n                        \n                    \n                \n            \n            \n                \nremoveProfileImage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:249\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProfile\n                        \n                    \n                \n            \n            \n                \nsaveProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showSuccessMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    showSuccessMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerImageUpload\n                        \n                    \n                \n            \n            \n                \ntriggerImageUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-p/user-perfil.ts:207\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    username: \"\",\n    email: \"\",\n    description: \"\",\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImageFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-p/user-perfil.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-p/user-perfil.ts:262\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-p/user-perfil.ts:266\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-p/user-perfil.ts:270\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { User } from \"../../models\";\n\n@Component({\n  selector: \"app-user-perfil\",\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: \"./user-perfil.html\",\n  styleUrls: [\"./user-perfil.css\"],\n})\nexport class UserPerfilComponent implements OnInit {\n  profileForm: FormGroup;\n  isEditing = false;\n  isLoading = false;\n  errorMessage = \"\";\n  successMessage = \"\";\n  currentUser: User | null = null;\n  originalValues: { username: string; email: string; description: string } = {\n    username: \"\",\n    email: \"\",\n    description: \"\",\n  };\n\n  // Profile image properties\n  profileImageUrl: string | null = null;\n  selectedImageFile: File | null = null;\n\n  constructor(\n    readonly fb: FormBuilder,\n    private readonly authService: AuthService\n  ) {\n    this.profileForm = this.fb.group({\n      username: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20),\n        ],\n      ],\n      email: [\"\", [Validators.required, Validators.email]],\n      description: [\"\", [Validators.maxLength(500)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadUserData();\n  }\n\n  loadUserData(): void {\n    this.isLoading = true;\n    this.errorMessage = \"\";\n\n    console.log(\"🔍 Iniciando carga de datos del usuario...\");\n\n    // Verificar si hay usuario autenticado\n    const currentUserValue = this.authService.getCurrentUserValue();\n    const isAuth = this.authService.isAuthenticated();\n    const token = this.authService.getAuthToken();\n\n    console.log(\"🔐 Estado de autenticación:\", {\n      currentUserValue,\n      isAuthenticated: isAuth,\n      hasToken: !!token,\n      token: token ? token.substring(0, 20) + \"...\" : null,\n    });\n\n    console.log(\"🔍 Cargando datos del usuario desde backend...\");\n\n    // Cargar datos del perfil desde el backend\n    this.authService.getCurrentUser().subscribe({\n      next: (user: User) => {\n        console.log(\"✅ Datos del usuario cargados:\", user);\n        console.log(\"📋 Propiedades del usuario:\", {\n          id: user.id,\n          username: user.username,\n          email: user.email,\n          profileImage: user.profileImage,\n          createdAt: user.createdAt,\n          updatedAt: user.updatedAt,\n          hasEmail: !!user.email,\n          emailType: typeof user.email,\n        });\n\n        this.currentUser = user;\n\n        // Validar que los datos del usuario estén completos\n        if (!user?.email) {\n          console.error(\"❌ Datos del usuario incompletos:\", user);\n          console.error(\"❌ user existe:\", !!user);\n          console.error(\"❌ user.email existe:\", !!user.email);\n          console.error(\"❌ user.email valor:\", user.email);\n          this.errorMessage = \"Error: Datos del usuario incompletos\";\n          this.isLoading = false;\n          return;\n        }\n\n        const userData = {\n          username: user.username || user.email.split(\"@\")[0],\n          email: user.email,\n          description: user.profileImage || \"\", // Usando profileImage como descripción temporal\n        };\n\n        this.originalValues = { ...userData };\n        this.profileForm.patchValue(userData);\n\n        // Cargar imagen de perfil si existe\n        if (user.profileImage) {\n          this.profileImageUrl = user.profileImage;\n        }\n\n        this.isLoading = false;\n      },\n      error: (error: any) => {\n        console.error(\"❌ Error al cargar perfil:\", error);\n        this.errorMessage = \"Error al cargar los datos del perfil\";\n        this.isLoading = false;\n      },\n    });\n  }\n\n  enableEdit(): void {\n    this.isEditing = true;\n  }\n\n  cancelEdit(): void {\n    this.isEditing = false;\n    this.profileForm.patchValue(this.originalValues);\n  }\n\n  saveProfile(): void {\n    if (this.profileForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = \"\";\n      this.successMessage = \"\";\n\n      this.isLoading = true;\n      this.errorMessage = \"\";\n      this.successMessage = \"\";\n\n      const formData = this.profileForm.value;\n\n      console.log(\"🔄 Guardando perfil en backend:\", formData);\n\n      // Actualizar perfil usando el AuthService\n      this.authService\n        .updateProfile({\n          username: formData.username,\n          email: formData.email,\n          // description no está en el modelo User por ahora\n        })\n        .subscribe({\n          next: (updatedUser: User) => {\n            console.log(\"✅ Perfil actualizado exitosamente:\", updatedUser);\n\n            // Actualizar datos locales\n            this.currentUser = updatedUser;\n            this.originalValues = { ...formData };\n            this.isEditing = false;\n            this.isLoading = false;\n\n            // Mostrar mensaje de éxito\n            this.successMessage = \"Perfil actualizado exitosamente\";\n\n            // Limpiar mensaje después de 3 segundos\n            setTimeout(() => {\n              this.successMessage = \"\";\n            }, 3000);\n          },\n          error: (error: any) => {\n            console.error(\"❌ Error al actualizar perfil:\", error);\n            this.errorMessage =\n              error.error?.message || \"Error al actualizar el perfil\";\n            this.isLoading = false;\n          },\n        });\n    } else {\n      console.log(\"❌ Formulario inválido\");\n      this.markFormGroupTouched();\n    }\n  }\n\n\n  // Mantener solo una implementación de markFormGroupTouched\n\n  private markFormGroupTouched(): void {\n    Object.keys(this.profileForm.controls).forEach((key) => {\n      const control = this.profileForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  private showSuccessMessage(): void {\n    // Implementar notificación de éxito\n    console.log(\"Perfil actualizado exitosamente\");\n  }\n\n  // Profile image methods\n  triggerImageUpload(): void {\n    const input = document.getElementById(\n      \"profileImageInput\",\n    ) as HTMLInputElement;\n    input?.click();\n  }\n\n  onImageSelected(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const file = target.files?.[0];\n\n    if (file) {\n      // Validate file type\n      const allowedTypes = [\n        \"image/jpeg\",\n        \"image/png\",\n        \"image/gif\",\n        \"image/webp\",\n      ];\n      if (!allowedTypes.includes(file.type)) {\n        alert(\"Por favor selecciona una imagen válida (JPEG, PNG, GIF, WebP)\");\n        return;\n      }\n\n      // Validate file size (max 5MB)\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        alert(\"La imagen es demasiado grande. El tamaño máximo es 5MB\");\n        return;\n      }\n\n      this.selectedImageFile = file;\n\n      // Create preview URL\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.profileImageUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  removeProfileImage(): void {\n    this.selectedImageFile = null;\n    this.profileImageUrl = null;\n\n    // Clear the input\n    const input = document.getElementById(\n      \"profileImageInput\",\n    ) as HTMLInputElement;\n    if (input) {\n      input.value = \"\";\n    }\n  }\n\n  get username() {\n    return this.profileForm.get(\"username\");\n  }\n\n  get email() {\n    return this.profileForm.get(\"email\");\n  }\n\n  get description() {\n    return this.profileForm.get(\"description\");\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        Mi Perfil\n      \n      \n        Personaliza tu información y mantén tu perfil actualizado\n      \n    \n\n    \n    \n      \n        \n          \n          \n        \n        Cargando información del perfil...\n      \n    \n\n    \n    \n      {{ errorMessage }}\n    \n\n    \n    \n      {{ successMessage }}\n    \n\n    \n    \n      \n      \n        \n          \n          \n\n          \n            @if (profileImageUrl) {\n            \n            } @else {\n            \n              \n            \n            }\n          \n          \n            \n              \n              \n            \n          \n\n          @if (profileImageUrl) {\n          \n            \n              \n            \n          \n          }\n        \n\n        \n          @if (!isEditing) {\n          \n            {{ originalValues.username }}\n          \n          \n            {{ originalValues.description || 'Sin descripción' }}\n          \n          }\n        \n\n        @if (!isEditing) {\n        \n          \n            \n          \n          Editar Perfil\n        \n        }\n      \n\n      \n      @if (isEditing) {\n      \n        \n        \n          \n            Nombre de Usuario *\n          \n          \n\n          @if (username?.invalid && username?.touched) {\n          \n            @if (username?.errors?.['required']) {\n            El nombre de usuario es requerido\n            } @if (username?.errors?.['minlength']) {\n            El nombre debe tener al menos 3 caracteres\n            } @if (username?.errors?.['maxlength']) {\n            El nombre no puede tener más de 20 caracteres\n            }\n          \n          }\n        \n\n        \n        \n          \n            Correo Electrónico *\n          \n          \n\n          @if (email?.invalid && email?.touched) {\n          \n            @if (email?.errors?.['required']) {\n            El correo electrónico es requerido\n            } @if (email?.errors?.['email']) {\n            Ingresa un correo electrónico válido\n            }\n          \n          }\n        \n\n        \n        \n          \n            Descripción\n          \n          \n\n          @if (description?.invalid && description?.touched) {\n          \n            @if (description?.errors?.['maxlength']) {\n            La descripción no puede tener más de 500 caracteres\n            }\n          \n          }\n\n          \n            {{ description?.value?.length || 0 }}/500 caracteres\n          \n        \n\n        \n        \n          \n            \n              \n            \n            Guardar Cambios\n          \n\n          \n            \n              \n            \n            Cancelar\n          \n        \n      \n      }\n    \n\n    \n    \n      \n      \n        Estadísticas\n        \n          \n            Canciones reproducidas\n            1,247\n          \n          \n            Horas escuchadas\n            89.5h\n          \n          \n            Playlists creadas\n            12\n          \n          \n            Artistas favoritos\n            34\n          \n        \n      \n\n      \n      \n        Preferencias\n        \n          \n            Género favorito\n            Pop\n          \n          \n            Calidad de audio\n            Alta\n          \n          \n            Reproducción automática\n            Activada\n          \n          \n            Modo offline\n            Desactivado\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-perfil.css\n                \n                /* Estilos específicos para el componente de perfil de usuario */\n\n/* Animaciones para transiciones suaves */\n.profile-transition {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Efectos hover mejorados para botones */\n.profile-button:hover {\n  transform: translateY(-2px);\n  box-shadow:\n    0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n/* Animación para el avatar */\n.avatar-container {\n  position: relative;\n  overflow: hidden;\n}\n\n.avatar-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    45deg,\n    transparent 30%,\n    rgba(255, 255, 255, 0.3) 50%,\n    transparent 70%\n  );\n  transform: translateX(-100%);\n  transition: transform 0.6s;\n}\n\n.avatar-container:hover::before {\n  transform: translateX(100%);\n}\n\n/* Estilos para los inputs con glassmorphism */\n.glass-input {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n}\n\n.glass-input:focus {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);\n}\n\n/* Efectos para las tarjetas de estadísticas */\n.stats-card {\n  position: relative;\n  overflow: hidden;\n}\n\n.stats-card::after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(90deg, #8b5cf6, #ec4899);\n  transform: scaleX(0);\n  transition: transform 0.3s ease;\n}\n\n.stats-card:hover::after {\n  transform: scaleX(1);\n}\n\n/* Animación de carga para el avatar */\n@keyframes pulse-avatar {\n  0%,\n  100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n}\n\n.avatar-pulse:hover {\n  animation: pulse-avatar 2s infinite;\n}\n\n/* Responsividad mejorada */\n@media (max-width: 768px) {\n  .profile-grid {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .profile-header {\n    text-align: center;\n  }\n\n  .profile-actions {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n}\n\n/* Indicador de caracteres restantes */\n.char-counter {\n  font-size: 0.75rem;\n  color: #6b7280;\n  transition: color 0.2s ease;\n}\n\n.char-counter.warning {\n  color: #f59e0b;\n}\n\n.char-counter.danger {\n  color: #ef4444;\n}\n\n/* Estilos para validación de formularios */\n.form-field.invalid {\n  animation: shake 0.5s ease-in-out;\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(-5px);\n  }\n  75% {\n    transform: translateX(5px);\n  }\n}\n\n/* Efectos de glassmorphism mejorados */\n.glass-card {\n  background: rgba(255, 255, 255, 0.25);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n}\n\n.glass-button {\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.glass-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: translateY(-2px);\n}\n\n/* Profile Image Upload Styles */\n.profile-avatar {\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.profile-avatar:hover {\n  transform: scale(1.02);\n}\n\n.profile-image {\n  transition: opacity 0.3s ease;\n}\n\n.profile-avatar:hover .profile-image {\n  opacity: 0.8;\n}\n\n.upload-button {\n  transition: all 0.3s ease;\n  backdrop-filter: blur(8px);\n}\n\n.upload-button:hover {\n  transform: scale(1.1);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);\n}\n\n.remove-button {\n  transition: all 0.3s ease;\n  backdrop-filter: blur(8px);\n}\n\n.remove-button:hover {\n  transform: scale(1.1);\n  box-shadow: 0 4px 15px rgba(239, 68, 68, 0.4);\n}\n\n/* Loading animation for image upload */\n@keyframes imageUpload {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 0.5;\n    transform: scale(1.05);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.image-upload-animation {\n  animation: imageUpload 0.5s ease-out;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Mi Perfil                    Personaliza tu información y mantén tu perfil actualizado                                                                    Cargando información del perfil...                        {{ errorMessage }}                  {{ successMessage }}                                                                          @if (profileImageUrl) {                        } @else {                                                  }                                                                                            @if (profileImageUrl) {                                                                    }                          @if (!isEditing) {                      {{ originalValues.username }}                                {{ originalValues.description || \\'Sin descripción\\' }}                    }                @if (!isEditing) {                                                  Editar Perfil                }                  @if (isEditing) {                                            Nombre de Usuario *                              @if (username?.invalid && username?.touched) {                      @if (username?.errors?.[\\'required\\']) {            El nombre de usuario es requerido            } @if (username?.errors?.[\\'minlength\\']) {            El nombre debe tener al menos 3 caracteres            } @if (username?.errors?.[\\'maxlength\\']) {            El nombre no puede tener más de 20 caracteres            }                    }                                              Correo Electrónico *                              @if (email?.invalid && email?.touched) {                      @if (email?.errors?.[\\'required\\']) {            El correo electrónico es requerido            } @if (email?.errors?.[\\'email\\']) {            Ingresa un correo electrónico válido            }                    }                                              Descripción                              @if (description?.invalid && description?.touched) {                      @if (description?.errors?.[\\'maxlength\\']) {            La descripción no puede tener más de 500 caracteres            }                    }                      {{ description?.value?.length || 0 }}/500 caracteres                                                                                              Guardar Cambios                                                                      Cancelar                              }                                Estadísticas                              Canciones reproducidas            1,247                                Horas escuchadas            89.5h                                Playlists creadas            12                                Artistas favoritos            34                                            Preferencias                              Género favorito            Pop                                Calidad de audio            Alta                                Reproducción automática            Activada                                Modo offline            Desactivado                              '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'ArtistComponent', 'selector': 'app-artist'},{'name': 'AsideMenu', 'selector': 'app-aside-menu'},{'name': 'Card', 'selector': 'app-card'},{'name': 'CardPlayButton', 'selector': 'app-card-play-button'},{'name': 'ConnectionTestComponent', 'selector': 'app-connection-test'},{'name': 'CurrentSongComponent', 'selector': 'app-current-song'},{'name': 'ExploreComponent', 'selector': 'app-explore'},{'name': 'Greeting', 'selector': 'app-greeting'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MusicsTable', 'selector': 'app-musics-table'},{'name': 'MusicsTablePlay', 'selector': 'app-musics-table-play'},{'name': 'Player', 'selector': 'app-player'},{'name': 'PlayerControlButtonBar', 'selector': 'app-player-control-button-bar'},{'name': 'PlayerCurrentSong', 'selector': 'app-player-current-song'},{'name': 'PlayerSoundControl', 'selector': 'app-player-sound-control'},{'name': 'PlayerVolumeControl', 'selector': 'app-player-volume-control'},{'name': 'PlaylistComponent', 'selector': 'app-playlist'},{'name': 'PlayListItemCard', 'selector': 'app-play-list-item-card'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SideMenuCard', 'selector': 'app-side-menu-card'},{'name': 'SideMenuItem', 'selector': 'app-side-menu-item'},{'name': 'UserPerfilComponent', 'selector': 'app-user-perfil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/ValidationError.html": {
      url: "classes/ValidationError.html",
      title: "class - ValidationError",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/domain/errors/auth.errors.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                originalError\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, originalError?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/domain/errors/auth.errors.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalError\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        originalError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                Inherited from         AuthError\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthError:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthError extends Error {\n  constructor(\n    message: string,\n    public readonly code: string,\n    public readonly originalError?: any\n  ) {\n    super(message);\n    this.name = 'AuthError';\n  }\n}\n\nexport class ValidationError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'VALIDATION_ERROR', originalError);\n    this.name = 'ValidationError';\n  }\n}\n\nexport class LoginError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'LOGIN_ERROR', originalError);\n    this.name = 'LoginError';\n  }\n}\n\nexport class RegisterError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'REGISTER_ERROR', originalError);\n    this.name = 'RegisterError';\n  }\n}\n\nexport class SessionError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'SESSION_ERROR', originalError);\n    this.name = 'SessionError';\n  }\n}\n\nexport class NetworkError extends AuthError {\n  constructor(message: string, originalError?: any) {\n    super(message, 'NETWORK_ERROR', originalError);\n    this.name = 'NetworkError';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/aside-menu/aside-menu.ts\n            \n            component\n            AsideMenu\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/card-play-button/card-play-button.ts\n            \n            component\n            CardPlayButton\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/card/card.ts\n            \n            component\n            Card\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/connection-test/connection-test.component.ts\n            \n            component\n            ConnectionTestComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/greeting/greeting.ts\n            \n            component\n            Greeting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/musics-table-play/musics-table-play.ts\n            \n            component\n            MusicsTablePlay\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/musics-table-play/musics-table-play.ts\n            \n            interface\n            CurrentMusic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/musics-table-play/musics-table-play.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/musics-table-play/musics-table-play.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/musics-table/musics-table.ts\n            \n            component\n            MusicsTable\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/musics-table/musics-table.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/play-list-item-card/play-list-item-card.ts\n            \n            component\n            PlayListItemCard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/play-list-item-card/play-list-item-card.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/player-control-button-bar/player-control-button-bar.ts\n            \n            component\n            PlayerControlButtonBar\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/player-current-song/player-current-song.ts\n            \n            component\n            PlayerCurrentSong\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/player-current-song/player-current-song.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/player-sound-control/player-sound-control.ts\n            \n            component\n            PlayerSoundControl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/player-volume-control/player-volume-control.ts\n            \n            component\n            PlayerVolumeControl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/player/player.ts\n            \n            component\n            Player\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/player/player.ts\n            \n            interface\n            CurrentMusic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/player/player.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/player/player.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/side-menu-card/side-menu-card.ts\n            \n            component\n            SideMenuCard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/side-menu-card/side-menu-card.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/side-menu-item/side-menu-item.ts\n            \n            component\n            SideMenuItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/config/routes-auth.config.ts\n            \n            variable\n            ROUTES_CONFIG_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/domain/entities/auth-token.entity.ts\n            \n            interface\n            AuthToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/entities/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            AuthError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            LoginError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            NetworkError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            RegisterError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            SessionError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/errors/auth.errors.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/auth.repository.ts\n            \n            class\n            AuthRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/auth.repository.ts\n            \n            interface\n            AuthResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/auth.repository.ts\n            \n            interface\n            LoginCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/auth.repository.ts\n            \n            interface\n            RegisterCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.repository.ts\n            \n            class\n            IAuthRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.repository.ts\n            \n            interface\n            AuthResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.repository.ts\n            \n            interface\n            AuthSession\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.repository.ts\n            \n            interface\n            LoginCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.repository.ts\n            \n            interface\n            RegisterCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/repositories/i-auth.service.ts\n            \n            class\n            IAuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/domain/services/auth-state.service.ts\n            \n            injectable\n            AuthStateService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/auth-session.usecase.ts\n            \n            injectable\n            AuthSessionUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/check-auth.usecase.ts\n            \n            injectable\n            CheckAuthUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/login.usecase.ts\n            \n            injectable\n            LoginUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/logout.usecase.ts\n            \n            injectable\n            LogoutUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/register.usecase.ts\n            \n            injectable\n            RegisterUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/reset-password.usecase.ts\n            \n            injectable\n            ResetPasswordUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/domain/usecases/social-login.usecase.ts\n            \n            injectable\n            SocialLoginUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/infrastructure/interceptors/auth-token.interceptor.ts\n            \n            interceptor\n            AuthTokenInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/infrastructure/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/infrastructure/providers/auth.providers.ts\n            \n            variable\n            authProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/infrastructure/repositories/auth-repository-impl.ts\n            \n            injectable\n            AuthRepositoryImpl\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/infrastructure/repositories/supabase-auth.repository.ts\n            \n            injectable\n            SupabaseAuthRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/infrastructure/services/api-service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/infrastructure/services/token.storage.service.ts\n            \n            injectable\n            TokenStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/infrastructure/supabase/supabase.service.ts\n            \n            injectable\n            SupabaseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/infrastructure/tokens/auth.tokens.ts\n            \n            variable\n            AUTH_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/infrastructure/tokens/auth.tokens.ts\n            \n            variable\n            AUTH_SERVICE_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            AddSongToPlaylistDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Album\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Artist\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            CreatePlaylistDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            PaginatedResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            PlaylistFilters\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            PlaylistSong\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            SearchFilters\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            UpdatePlaylistDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/index.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/artist/artist.ts\n            \n            component\n            ArtistComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/artist/artist.ts\n            \n            interface\n            Album\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/artist/artist.ts\n            \n            interface\n            Artist\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/artist/artist.ts\n            \n            interface\n            Award\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/artist/artist.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/currentsong/current-song.ts\n            \n            component\n            CurrentSongComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/pages/currentsong/current-song.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/explore/explore.ts\n            \n            component\n            ExploreComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/library/library.ts\n            \n            component\n            LibraryComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/pages/library/library.ts\n            \n            interface\n            Album\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/library/library.ts\n            \n            interface\n            Artist\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/library/library.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/playlist/playlist.ts\n            \n            component\n            PlaylistComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/pages/search/search.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-p/user-perfil.ts\n            \n            component\n            UserPerfilComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/presentation/pages/auth/login/login.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/presentation/pages/auth/register/register.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/presentation/pages/auth/reset-password/reset-password.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/services/artist.service.ts\n            \n            injectable\n            ArtistService\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                62 %\n                (17/27)\n            \n        \n        \n            \n                \n                src/app/services/playlist.service.ts\n            \n            injectable\n            PlaylistService\n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            interface\n            SearchResults\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/song.service.ts\n            \n            injectable\n            SongService\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                src/app/services/test-connection.service.ts\n            \n            injectable\n            TestConnectionService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                        src/app/shared/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/guards/auth.guard.ts\n            \n            variable\n            authGuardRedirect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/guards/auth.guard.ts\n            \n            variable\n            authGuardRedirectIfAuthenticated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/guards/auth.guard.ts\n            \n            variable\n            authGuardRedirectIfNotAuthenticated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/models/auth.dto.ts\n            \n            interface\n            LoginRequestDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/auth.dto.ts\n            \n            interface\n            RegisterRequestDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.dto.ts\n            \n            interface\n            UserDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/shared/providers/auth.providers.ts\n            \n            variable\n            authProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                19 %\n                (4/21)\n            \n        \n        \n            \n                \n                src/app/shared/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/notification.service.ts\n            \n            interface\n            Notification\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/shared/utils/auth-interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/utils/user.map.ts\n            \n            variable\n            toUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : 20.1.4\n        \n            @angular/common : ^20.1.0\n        \n            @angular/compiler : ^20.1.0\n        \n            @angular/core : ^20.1.0\n        \n            @angular/forms : ^20.1.0\n        \n            @angular/material : 20.1.4\n        \n            @angular/platform-browser : ^20.1.0\n        \n            @angular/platform-server : ^20.1.0\n        \n            @angular/router : ^20.1.0\n        \n            @angular/ssr : ^20.1.3\n        \n            @supabase/supabase-js : ^2.53.0\n        \n            @tailwindcss/postcss : ^4.1.11\n        \n            compodoc : ^0.0.41\n        \n            express : ^5.1.0\n        \n            postcss : ^8.5.6\n        \n            rxjs : ~7.8.0\n        \n            tailwindcss : ^4.1.11\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\nB\nThis project was generated using Angular CLI version 20.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    48 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "properties.html": {
      url: "properties.html",
      title: "package-properties - properties",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AUTH_REPOSITORY_TOKEN   (src/.../auth.tokens.ts)\n                        \n                        \n                            AUTH_SERVICE_TOKEN   (src/.../auth.tokens.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            authGuardRedirect   (src/.../auth.guard.ts)\n                        \n                        \n                            authGuardRedirectIfAuthenticated   (src/.../auth.guard.ts)\n                        \n                        \n                            authGuardRedirectIfNotAuthenticated   (src/.../auth.guard.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth-interceptor.ts)\n                        \n                        \n                            authProviders   (src/.../auth.providers.ts)\n                        \n                        \n                            authProviders   (src/.../auth.providers.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            ROUTES_CONFIG_AUTH   (src/.../routes-auth.config.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                        \n                            toUser   (src/.../user.map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(withInterceptors([authInterceptor])),\n    ...authProviders,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthTokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/tokens/auth.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthService')\n                    \n                \n\n\n        \n    \n\n    src/app/shared/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return true;\n  }\n\n  // Si no está autenticado, redirigir a la página de login\n  return router.createUrlTree(['/login']);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authGuardRedirect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return router.createUrlTree(['/home']);\n  }\n\n  // Si no está autenticado, redirigir a la página de login\n  return router.createUrlTree(['/login']);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authGuardRedirectIfAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return router.createUrlTree(['/home']);\n  }\n\n  // Si no está autenticado, redirigir a la página de login\n  return true;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authGuardRedirectIfNotAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (!authService.isAuthenticated()) {\n    return router.createUrlTree(['/login']);\n  }\n\n  return true;\n  // Si no está autenticado, redirigir a la página de login\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/utils/auth-interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.session()?.access_token;\n\n  if (token) {\n    const cloned = req.clone({\n      headers: req.headers.set(\"Authorization\", `Bearer ${token}`),\n    });\n    return next(cloned);\n  }\n\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/infrastructure/providers/auth.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: AUTH_REPOSITORY_TOKEN,\n    useClass: SupabaseAuthRepository\n  },\n  {\n    provide: IAuthRepository,\n    useClass: SupabaseAuthRepository\n  },\n  AuthStateService\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/providers/auth.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  SupabaseService,\n  AuthService,\n  {\n    provide: AuthRepository,\n    useClass: AuthRepositoryImpl,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: \"http://127.0.0.1:8000/\",\n  API_URL: \"http://127.0.0.1:8000/\",\n  STORAGE_TOKEN_KEY: \"app.token\",\n\n  SUPABASE: {\n    SUPABASE_PROJECT_ID: \"ebipcvxpxrqdihhhhfyf\",\n    SUPABASE_URL: \"https://ebipcvxpxrqdihhhhfyf.supabase.co\",\n\n    SUPABASE_ANON_KEY:\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImViaXBjdnhweHJxZGloaGhoZnlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMzMDg1OTcsImV4cCI6MjA2ODg4NDU5N30.gTfW1dGTp_SUqMePKK2pV77PQwpe4Yv2lxmRj1ZdH6w\",\n    SUPABASE_SERVICE_KEY:\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImViaXBjdnhweHJxZGloaGhoZnlmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwODU5NywiZXhwIjoyMDY4ODg0NTk3fQ.RW0stsub_zDz69bMYnTcy8pdTBNbBOZE29kRx6VQHDw\",\n\n    SUPABASE_JWT_SECRET:\n      \"nvUoDANFsKWi4AfmbYsnog57b3qYAbbVy4vxl0v3YxeiTumVrg7+D5sVo8kbLWRJHrkBbNuiILScSihf0i21hw==\",\n\n    SUPABASE_JWT_ALGORITHM: \"HS256\",\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: \"https://tu-backend-produccion.com/api\", // URL de producción de tu backend\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: \"http://127.0.0.1:8000/api\",\n  API_URL: \"http://127.0.0.1:8000/\",\n  STORAGE_TOKEN_KEY: \"app.token\",\n\n  SUPABASE: {\n    SUPABASE_PROJECT_ID: \"ebipcvxpxrqdihhhhfyf\",\n    SUPABASE_URL: \"https://ebipcvxpxrqdihhhhfyf.supabase.co\",\n\n    SUPABASE_ANON_KEY:\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImViaXBjdnhweHJxZGloaGhoZnlmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMzMDg1OTcsImV4cCI6MjA2ODg4NDU5N30.gTfW1dGTp_SUqMePKK2pV77PQwpe4Yv2lxmRj1ZdH6w\",\n    SUPABASE_SERVICE_KEY:\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImViaXBjdnhweHJxZGloaGhoZnlmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzMwODU5NywiZXhwIjoyMDY4ODg0NTk3fQ.RW0stsub_zDz69bMYnTcy8pdTBNbBOZE29kRx6VQHDw\",\n\n    SUPABASE_JWT_SECRET:\n      \"nvUoDANFsKWi4AfmbYsnog57b3qYAbbVy4vxl0v3YxeiTumVrg7+D5sVo8kbLWRJHrkBbNuiILScSihf0i21hw==\",\n\n    SUPABASE_JWT_ALGORITHM: \"HS256\",\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/config/routes-auth.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROUTES_CONFIG_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  BASE_URL: {\n    path: 'auth',\n    link: 'auth',\n  },\n  LOGIN: {\n    path: 'login',\n    link: '/auth/login',\n  },\n  REGISTER: {\n    path: 'register',\n    link: '/auth/register',\n  },\n  RESET_PASSWORD: {\n    path: 'reset-password',\n    link: '/auth/reset-password',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender,\n  },\n  {\n    path: 'artist/:id',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'playlist/:id',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: '',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'home',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'search',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'library',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'explore',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'currentSong',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'profile',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: `${ROUTES_CONFIG_AUTH.BASE_URL.path}/${ROUTES_CONFIG_AUTH.LOGIN.path}`,\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: `${ROUTES_CONFIG_AUTH.BASE_URL.path}/${ROUTES_CONFIG_AUTH.REGISTER.path}`,\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: `${ROUTES_CONFIG_AUTH.BASE_URL.path}/${ROUTES_CONFIG_AUTH.RESET_PASSWORD.path}`,\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'explore',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'library',\n    renderMode: RenderMode.Client,\n  },\n  {\n    path: 'currentSong',\n    renderMode: RenderMode.Client,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/utils/user.map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dto: UserDTO): User => ({\n  id: dto.id,\n  email: dto.email,\n  name: dto.name,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
